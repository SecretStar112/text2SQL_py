Parsing simple specification. (not fully implemented)
Expanding specification. (not fully implemented)
{ 'batch_size': 50,
  'data_directories': ['work/advising_data/query_split/'],
  'decode_vocab': 'decode_copy_encode_vocab.txt',
  'input_pipeline': 'ParallelTextCopyingPipeline',
  'model': 'InputAttentionCopyingSeq2Seq',
  'model_dir': 'models/copy_input/advising_query_split/',
  'model_params': { 'attention.params': { 'num_units': 100},
                    'decoder.params': { 'rnn_cell': { 'cell_params': { 'num_units': 200},
                                                      'dropout_input_keep_prob': 0.5,
                                                      'dropout_output_keep_prob': 0.5}},
                    'encoder.params': { 'rnn_cell': { 'cell_params': { 'num_units': 200},
                                                      'dropout_input_keep_prob': 0.5,
                                                      'dropout_output_keep_prob': 0.5}},
                    'optimizer.learning_rate': 0.001},
  'required_files': { 'decode_copy_encode_vocab.txt': 'work/advising_data/query_split/decode_copy_encode_vocab.txt',
                      'decode_vocab': 'work/advising_data/query_split/decode_copy_encode_vocab.txt',
                      'dev/dev_decode.txt': [ 'work/advising_data/query_split/dev/dev_decode.txt'],
                      'dev/dev_encode.txt': [ 'work/advising_data/query_split/dev/dev_encode.txt'],
                      'encode_vocab.txt': 'work/advising_data/query_split/encode_vocab.txt',
                      'test/test_decode.txt': [ 'work/advising_data/query_split/test/test_decode.txt'],
                      'test/test_encode.txt': [ 'work/advising_data/query_split/test/test_encode.txt'],
                      'train/train_decode.txt': [ 'work/advising_data/query_split/train/train_decode.txt'],
                      'train/train_encode.txt': [ 'work/advising_data/query_split/train/train_encode.txt']},
  'train_steps': 20000}
Saving yaml specifications to models/copy_input/advising_query_split/.
===========================
Training Spec:
{ 'batch_size': 50,
  'buckets': '25,50,100,200',
  'input_pipeline_dev': { 'class': 'ParallelTextCopyingPipeline',
                          'params': { 'source_files': [ 'work/advising_data/query_split/dev/dev_encode.txt'],
                                      'target_files': [ 'work/advising_data/query_split/dev/dev_decode.txt']}},
  'input_pipeline_train': { 'class': 'ParallelTextCopyingPipeline',
                            'params': { 'source_files': [ 'work/advising_data/query_split/train/train_encode.txt'],
                                        'target_files': [ 'work/advising_data/query_split/train/train_decode.txt']}},
  'keep_checkpoint_max': 0,
  'model': 'InputAttentionCopyingSeq2Seq',
  'model_params': { 'attention.params': { 'num_units': 100},
                    'decoder.params': { 'rnn_cell': { 'cell_params': { 'num_units': 200},
                                                      'dropout_input_keep_prob': 0.5,
                                                      'dropout_output_keep_prob': 0.5}},
                    'encoder.params': { 'rnn_cell': { 'cell_params': { 'num_units': 200},
                                                      'dropout_input_keep_prob': 0.5,
                                                      'dropout_output_keep_prob': 0.5}},
                    'optimizer.learning_rate': 0.001,
                    'vocab_source': 'work/advising_data/query_split/encode_vocab.txt',
                    'vocab_target': 'work/advising_data/query_split/decode_copy_encode_vocab.txt'},
  'output_dir': 'models/copy_input/advising_query_split/',
  'save_checkpoints_steps': 1000,
  'train_steps': 20000}
===========================
Training Spec:
{ 'batch_size': 50,
  'buckets': '25,50,100,200',
  'input_pipeline_dev': { 'class': 'ParallelTextCopyingPipeline',
                          'params': { 'source_files': [ 'work/advising_data/query_split/dev/dev_encode.txt'],
                                      'target_files': [ 'work/advising_data/query_split/dev/dev_decode.txt']}},
  'input_pipeline_train': { 'class': 'ParallelTextCopyingPipeline',
                            'params': { 'source_files': [ 'work/advising_data/query_split/train/train_encode.txt',
                                                          'work/advising_data/query_split/dev/dev_encode.txt'],
                                        'target_files': [ 'work/advising_data/query_split/train/train_decode.txt',
                                                          'work/advising_data/query_split/dev/dev_decode.txt']}},
  'keep_checkpoint_max': 0,
  'model': 'InputAttentionCopyingSeq2Seq',
  'model_params': { 'attention.params': { 'num_units': 100},
                    'decoder.params': { 'rnn_cell': { 'cell_params': { 'num_units': 200},
                                                      'dropout_input_keep_prob': 0.5,
                                                      'dropout_output_keep_prob': 0.5}},
                    'encoder.params': { 'rnn_cell': { 'cell_params': { 'num_units': 200},
                                                      'dropout_input_keep_prob': 0.5,
                                                      'dropout_output_keep_prob': 0.5}},
                    'optimizer.learning_rate': 0.001,
                    'vocab_source': 'work/advising_data/query_split/encode_vocab.txt',
                    'vocab_target': 'work/advising_data/query_split/decode_copy_encode_vocab.txt'},
  'output_dir': 'models/copy_input/advising_query_split/',
  'save_checkpoints_steps': 1000,
  'train_steps': 20000}
