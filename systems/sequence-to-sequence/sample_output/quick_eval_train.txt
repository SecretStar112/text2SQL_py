Accuracy on work/advising_data/query_split/train/train_decode.txt is 0.9980
Overall accuracy is 0.9980

==========WRONG==========
Q: What class do you think would be the easiest , EECS 632 or EECS 633 ?
Gold: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 633 OR COURSE alias0 . NUMBER = 632 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 633 OR COURSE alias1 . NUMBER = 632 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;
System: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 632 OR COURSE alias0 . NUMBER = 633 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 632 OR COURSE alias1 . NUMBER = 633 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Is Prof. Galura the only person who teaches German Teaching Assistance for Children at the Deutsche Schule Ann Arbor ( DSAA ) ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% German Teaching Assistance for Children at the Deutsche Schule Ann Arbor (DSAA) %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Galura %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% German Teaching Assistance for Children at Schule Schule Schule Arbor Arbor Arbor (DSAA) %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Galura %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there another teacher of Honors Colloquium , Junior aside from Prof. Sundaram ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Honors Colloquium , Junior %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Sundaram %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Honors Colloquium Colloquium Junior %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Sundaram %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: The times that International Security , Norms and Cooperation will be offered are what ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% International Security , Norms and Cooperation %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% International Security Security Norms and Cooperation %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;


==========RIGHT==========

Q: What 's the easiest class I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Are there any easy classes that fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Are there any super easy classes I can take so I fulfill my ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Can you tell me which class it easiest to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Can you tell me which class will be the easiest to meet the requirements for PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Could you please refer me to the easiest class to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Easiest class I can take to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Easiest class to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: For fulfilling the MDE requirement , what 's the easiest class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: For the ULCS requirement , what 's the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: For the Core requirement , what is the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: For the ULCS requirement what class is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: How can I fulfill the Core class easily with a class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: How can I fulfill the ULCS requirement in the simplest way ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: How can I most easily fulfill the PreMajor requirement with a class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: I 'm looking for the easiest class I can take to fulfill the Core requirement .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: I need to fulfill a PreMajor requirement , what class would be the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: I need to fulfill the MDE requirement , which is the easiest class to do that ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: I need to take an easy class to fulfill the MDE requirement , which 1 should it be ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: I want to fulfill the MDE requirement , what is the easiest class I can take for this ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: If I have to fulfill the Core requirement , what easy class can I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: If I need to fulfill the ULCS requirement , what 's the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: If I want to fulfill the MDE requirement , what 's the easiest class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: In order to fulfill my Other , which class would be the easiest to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: In order to fulfill the Core requirement , what 's the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: In order to fulfill the MDE requirement , what easy course can I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: In order to fulfill the Core requirement , what is the easiest course I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: In order to fulfill the ULCS requirement , which classes are the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: In order to fulfill the MDE requirement what is the easiest class to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: In order to fulfill the PreMajor requirement which is the easiest class to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Is there a class that 's the easiest 1 I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Is there an easy class I can take in order to complete the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Is there an easy class available to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Is there an easy class that will fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Is there an easy class to take wherein I could fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Name the ULCS course that is easy .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Name the MDE course which is easiest .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Name the class that is the easiest to take to fulfill the Other requirement .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Name the simple class I can join to cover the MDE requirement .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Of all the classes that can fulfill the Other requirement , what 's the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Of the classes I can take , which is the easiest 1 I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Of the classes that fill the PreMajor requirement , which 1 is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Of the courses that fulfill the PreMajor requirement , which is easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Show me the easiest class available for me to fulfill the Other requirement .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: The MDE requirement can be fulfilled with which easiest class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: The Core requirement can be most easily fulfilled by taking which class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: The MDE requirement is covered by which class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: The Other requirement is covered in which simple class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: The easiest class I can take to fulfill the PreMajor requirement is ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: The easiest class I can take to fulfill the MDE requirement is what ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: To complete the Other requirement , what would be the easiest class to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: To fulfil the Other requirement , which classes are the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: To fulfill the MDE requirement , what 's the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: To fulfill the MDE requirement , what 's the easiest class to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: To fulfill the Other requirement , what is the easiest class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: To fulfill the Other requirement , what is the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: To fulfill the MDE requirement , what is the easiest class available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: To fulfill the PreMajor requirement what is the easiest class I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: To satisfy the MDE requirement , which classes are the least demanding ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What 's the easiest ULCS class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What 's the easiest Other course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What 's the easiest PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What 's the easiest class I can take in order to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What 's the easiest class I can take to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What 's the easiest class I can take to make the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What 's the easiest class for the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What 's the easiest class that fulfills the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What 's the easiest class to take to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What 's the easiest way to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What are the easiest classes for when you need to fulfill Other requirements ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What are the least demanding courses necessary to satisfy the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What can I take to fulfill the PreMajor requirement that will be easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What class can I take to fulfill the Core requirement easily ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What class can I take to get the MDE requirement done easily ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What class fulfills the ULCS requirement the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What class fulfills the MDE requirement with the least effort ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What class fulfills the PreMajor requirement with the least hassle ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What class is the easiest 1 I can take in order to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What class is the easiest 1 to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What class is the easiest that I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What class is the easiest to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What class will fulfill the ULCS requirement most easily ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What class will get me the Core requirement the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What class will make fulfilling the Other requirement easier ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What classes are available to easily fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What classes are easiest , while still fulfilling the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What classes are least demanding , while as yet satisfying the PreMajor necessity ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What do you think is the easiest class I can take to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What easy class can I take that will fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What easy class can I take to fulfill the requirement for PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is a class that will easily fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is class I can take to fulfill the ULCS requirement and is easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What is the easiest class I can do to meet the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the easiest class I can take so that I can fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the easiest class I can take that will fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What is the easiest class I can take to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is the easiest class I can take to fulfill my Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What is the easiest class I can take to get the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What is the easiest class I can take to get the MDE requirement fulfilled ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the easiest class I can take to get the ULCS requirement met ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What is the easiest class I can take to meet the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What is the easiest class I can take to reach the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is the easiest class available that meets the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What is the easiest class for me to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What is the easiest class that I can take in order to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is the easiest class that fulfills the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the easiest class to fulfill the MDE requirement for me ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the easiest class to take for the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What is the easiest class to take to fulfill the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What is the easiest class which fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is the easiest course for completing the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What is the easiest course that meets the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What is the easiest courses I can take to complete the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What is the least difficult class I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the least time-consuming class I can take to fulfill the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: What is the most easy class I can take to fulfill the Other requirement .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What is the most effortless class I can take to satisfy the MDE ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What is the most straightforward class I can take to satisfy the Core ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What is the simplest class I can take to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What is the simplest class I can take to meet the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What would be the easiest class I could take to satisfy the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: What would be the easiest class to take to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which ULCS course is easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which MDE requirement class is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which PreMajor requirement class is the least hard ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which class can I take to fulfill the PreMajor requirement that is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which class could be the easiest to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which class for the Core requirement is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which class is easier for me to fulfill ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which class is easiest in order to fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which class is easiest to fulfill the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which class is easiest to fulfill the MDE requirement for me ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class is the easiest I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class is the easiest I can take to the fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which class is the easiest as far as fulfilling the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which class is the easiest class to fulfil the Other requirement that I can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which class is the easiest class to take to fulfill the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which class is the easiest 1 to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which class is the easiest that can fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class is the easiest to get the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which class is the easiest to take in order to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which class is the easiest way to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class makes fulfilling the Core requirement easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which class most easily fulfills the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class should I take to fulfill the Other requirement if I want the easiest 1 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which class that fulfills the MDE requirement can I take that is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class that fulfills the Core requirement is the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which class that fulfills the Core requirement takes the least amount of effort ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which class that meets the PreMajor requirement is the least difficult ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which class will fulfill the Other requirement the easiest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which class would be easiest for me to fill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which class would be the easiest class for me to take to meet the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which classes are the easiest for the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which classes are the least demanding to satisfy the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which classes gives me the easiest path to cover the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which classes that satisfy the ULCS necessity are least demanding ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Which course that satisfies the Core requirement is the least difficult ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which course would be the easiest I can take to finish the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which easiest class can I take to fulfill the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which easy class fulfill 's the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which is the easiest PreMajor course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which is the easiest class I can take to fulfill the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Which is the easiest class for the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which is the easiest class that fulfills the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: Which is the easiest class to be taken to fulfill the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: Which is the easiest class to get my Core requirement fulfilled ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: What courses does Prof. Catherine Krull teach in Winter 2006 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Catherine Krull %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2006 ;

Q: In Spring-Summer 2000 , what courses does Prof. Lauren Sarringhaus teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Lauren Sarringhaus %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2000 ;

Q: In Fall 2008 , which courses are taught by Prof. Kyger Lohmann ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kyger Lohmann %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2008 ;

Q: Name the courses that Prof. Nilton Renno will teach in Summer 2001 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nilton Renno %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2001 ;

Q: Name the courses that are taught by Prof. James Lepkowski in Spring 2018 .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% James Lepkowski %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2018 ;

Q: Prof. Sultan Sharrief teaches in Spring-Summer 2017 what courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sultan Sharrief %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Prof. Thomas Delapa teaches which courses in Fall 2000 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Thomas Delapa %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2000 ;

Q: This Spring-Summer ( 2000 ) , what courses does Prof. Ami Antonucci teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ami Antonucci %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2000 ;

Q: What are the classes Prof. Gerald Carr teaches Fall 2007 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Gerald Carr %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: What classes does Prof. Ej Westlake teach in Spring 2005 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ej Westlake %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2005 ;

Q: What is the class schedule for Prof. Clara Verweij in Spring-Summer 2007 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Clara Verweij %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: What will Prof. Jordan Watkins be teaching in the Spring-Summer of 2016 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jordan Watkins %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses are worth 14 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 14 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: 10 credits are given for which courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 10 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are any of these courses worth 18 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 18 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any 8 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 8 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any courses available that provide 13 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 13 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any courses that are worth 6 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 6 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any courses worth 18 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 18 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there courses that will offer 10 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 10 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there courses worth 3 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 3 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Can I get 7 credits from taking any of these courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 7 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Can you give me a list of classes that result in 12 course credit ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Can you highlight the courses that grant 12 credits upon completion ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Can you list the courses that are worth 12 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Can you tell me the 14 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 14 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Can you tell me which courses count for 4 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 4 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Could you list me courses that helps me get 12 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Courses worth 11 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 11 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: For which classes could I earn 1 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 1 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: I 'm looking for courses worth 9 credits , which are they ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 9 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: I need 12 -credit courses , which courses should I take ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: I need to take 18 -credit courses so which ones are worth 18 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 18 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: I would like to know the names of courses that are worth 16 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 16 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: If I wanted to earn 13 credits per course , which courses should I select ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 13 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: If I wanted to get 5 credits , which courses should I sign up for ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 5 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: List some courses worth 11 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 11 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Name the 3 -credit courses .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 3 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Name the course worth 9 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 9 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Name the courses that are worth 16 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 16 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of all classes which ones offer 18 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 18 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of all courses , which ones are worth 4 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 4 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of all the courses , which are worth 14 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 14 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of all the courses , which ones are worth 7 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 7 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of all the courses which are worth 7 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 7 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of the courses I have to choose from , which ones are worth 15 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 15 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Please advise me regarding courses worth 9 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 9 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Please name some courses worth 3 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 3 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Please name the courses that provide 1 credits .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 1 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: To get 18 credits , which courses should I take ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 18 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What 8 -credit course are there ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 8 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What 12 -credit courses are available ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What are all of the 5 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 5 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What are names of 5 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 5 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What are the 8 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 8 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What are the 6 -credit courses offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 6 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What are the courses that are worth 2 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 2 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What are the courses which are worth 1 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 1 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What classes give you 4 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 4 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What classes on this list are for 8 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 8 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What course will get me 18 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 18 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses are 17 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 17 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses are worth 10 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 10 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses can I take that will give me 5 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 5 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses count as 15 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 15 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses give you 12 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 12 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses offer 7 -credit hours ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 17 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses provide 3 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 3 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses provide 1 / you with 2 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 2 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What courses should I take if I need 10 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 10 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What is the list of courses that are 17 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 17 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which 9 -credit courses are there ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 9 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which are the 5 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 5 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which classes are worth 11 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 11 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which classes give 2 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 2 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which courses are available that provide 16 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 16 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which courses can I take which provide 13 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 13 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which courses have a value of 14 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 14 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which of the courses are worth 7 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . CREDITS = 7 AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What classes do I need to take in order to declare a major in HISTORY ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% HISTORY %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there any classes I must take to be able to declare an AUTO major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% AUTO %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there prerequisite classes I should take before I declare a major in CZECH ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CZECH %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can I have a list of the prerequisites necessary to declare HJCS as my major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% HJCS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can you advise me of the courses that I should take to declare a major in ARABIC ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ARABIC %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Declaring a major in CLLING requires me to take which classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CLLING %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: I want to declare a major in ASIANPAM , what classes if any do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ASIANPAM %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: I want to declare my major as GEOG , what classes should I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% GEOG %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: If I want to declare JAZZ as my major , which classes am I going to have to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% JAZZ %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: If I want to declare a major in DHYGRACK , then what classes to do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% DHYGRACK %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: If I want to declare a major in GREEKMOD , what classes do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% GREEKMOD %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: If I were to declare a major in BIOMATLS , what classes would I need ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% BIOMATLS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In order to declare a major in DENT , what classes do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% DENT %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In order to declare a major in ANTHRCUL , what classes must I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ANTHRCUL %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In order to declare a major in REEES , which classes do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% REEES %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In order to declare a major in LAW what classes would I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LAW %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In order to declare my major as EHS , what classes do I need to have taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% EHS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To declare a major in MEMS , are there certain classes that I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% MEMS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To declare a major in OMS , what classes do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% OMS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To declare a major in HJCS , what classes must I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% HJCS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To declare a major in PHARMSCI , which classes are required ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% PHARMSCI %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To declare a major in INTMED which classes do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% INTMED %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To declare a major in THTREMUS which courses are required ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% THTREMUS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Were I to declare a major in WOMENSTD , which classes would I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% WOMENSTD %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What courses do I need to declare a major in PHIL ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% PHIL %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are prerequisites to declare a major in MEDCHEM ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% MEDCHEM %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the classes required to declare a major in TURKISH ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% TURKISH %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the prerequisite classes for the RCSSCI major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% RCSSCI %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes are necessary to declare a major in MODGREEK ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% MODGREEK %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes are required for me to declare STRATEGY as my major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% STRATEGY %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes are required in order to declare a major in NAVSCI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% NAVSCI %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes are required to declare JUDAIC as a major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% JUDAIC %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes are required to declare a major in CLARCH ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CLARCH %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes qualify me to declare a major in LATINOAM ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LATINOAM %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes should I enroll in in order to declare a major in SAC ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% SAC %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What courses must I take to declare a major in ENDODONT ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ENDODONT %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What will be the prerequisite courses to declare a major in SPACE ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% SPACE %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: When declaring BCS as a major what classes do I need to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% BCS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which are the classes required to declare a major in SOC ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% SOC %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are necessary for a declared major in LING ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LING %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are needed in order to declare a major in THEORY ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% THEORY %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are required to declare MODGREEK my major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% MODGREEK %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are required to declare a major in SWC ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% SWC %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes do I have to take for me to declare a major in LING ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LING %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes do I have to take to declare an CHEM major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CHEM %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes do I need to take in order to declare a major in ACABS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ACABS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes must I take in order to declare a major in COMP ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% COMP %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes would I need to take to declare a major in LAW ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LAW %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes can I use for my Core ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there any classes I can use for my PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For Core what classes do I need ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For my PreMajor , which classes are applicable ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For my MDE , which classes count toward it ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For my Core , which courses qualify ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Core requires what classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: My ULCS permits which courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the class requirements for my Other ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the classes that can be used for my MDE ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the classes that comprise PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes am I allowed to take for my Core ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes can be used for PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes have PreMajor in them ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What courses fulfill the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What useful classes are there for the PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are useful for my MDE ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes can I also use for my PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes should I take to use toward my Core ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: With regards to my Core , what classes will work ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Would MUSPERF 591 fulfill any requirements besides general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MUSPERF " AND COURSE alias0 . NUMBER = 591 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Although COMP 233 is a general elective , what other requirements would it fulfill ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " COMP " AND COURSE alias0 . NUMBER = 233 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are any other requirements fulfilled for POLISH 432 besides general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " POLISH " AND COURSE alias0 . NUMBER = 432 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there any non-general elective requirements that NATIVEAM 498 would fulfill for me ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NATIVEAM " AND COURSE alias0 . NUMBER = 498 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there other requirements that SAC 490 would fill besides the general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SAC " AND COURSE alias0 . NUMBER = 490 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Aside from general elective , does DUTCH 901 fulfill any requirements ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " DUTCH " AND COURSE alias0 . NUMBER = 901 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Besides a general elective , would RCSSCI 396 fulfill any requirements ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCSSCI " AND COURSE alias0 . NUMBER = 396 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Besides general elective , what requirements does GEOSCI 205 fulfill ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " GEOSCI " AND COURSE alias0 . NUMBER = 205 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Besides the general elective , does PHYSIOL 599 fulfill any other requirements ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " PHYSIOL " AND COURSE alias0 . NUMBER = 599 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Could RCNSCI 104 fulfill something other than a general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCNSCI " AND COURSE alias0 . NUMBER = 104 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Does ASTRO 112 fulfill requirements aside from general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 112 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Does CHE 528 only fulfill the general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CHE " AND COURSE alias0 . NUMBER = 528 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Other than as a general elective , would UP 425 satisfy any requirements ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " UP " AND COURSE alias0 . NUMBER = 425 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What requirement other than general elective would be fulfilled by MKT 750 ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MKT " AND COURSE alias0 . NUMBER = 750 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What requirements would HJCS 296 meet other than a general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " HJCS " AND COURSE alias0 . NUMBER = 296 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Will EMBA 603 help me fulfill any requirement besides general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EMBA " AND COURSE alias0 . NUMBER = 603 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Would any requirements be fulfilled by MKT 399 besides general elective ?
query: SELECT DISTINCT PROGRAM_COURSE alias0 . CATEGORY FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MKT " AND COURSE alias0 . NUMBER = 399 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: How many courses are taught by more than 2 professors ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: How many courses are not taught by a professor on their own ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: How many courses are there that 2 or more professors teach ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: If I want 2 or more professors for a course how many choices do I have ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: Many courses are taught by more than 2 professors , how many ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: More than 2 professors teach how many courses ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: Of the courses , how many are taught by more than 2 professors ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: Please tell me the number of courses that 2 or more faculty members teach .
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: What 's the number of courses taught by more than 2 professors ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: What is the number of courses that are taught by 3 or more professors ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: What is the number of courses which are being taught by more than 2 professors ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias2 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias2 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias1 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID AND OFFERING_INSTRUCTOR alias2 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID ;

Q: Are all the upper-level classes 3 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 3 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are 10 -credit classes the only option for upper level classes ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 10 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are 10 credits available for all upper-level classes ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 10 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are 8 credits given to all upper-level classes ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 8 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are 15 credits the only option for upper-level classes ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 15 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are the classes in the upper-levels all worth 11 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 11 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are the upper-level classes all 17 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 17 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there any upper-level classes other than 17 -credit classes ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 17 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are upper-level classes all 12 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 12 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do I earn 18 credits for the upper-level classes ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 18 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do all of the upper-level classes count for 13 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 13 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do all of the upper-level classes have 17 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 17 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do all upper-level classes have 15 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 15 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do the upper-level classes all offer 9 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 9 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is it true that all upper level classes are 14 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 14 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: The upper-level classes , are they all worth 1 credits ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> 1 AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which is easier , 282 or 460 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 282 OR COURSE alias0 . NUMBER = 460 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 282 OR COURSE alias1 . NUMBER = 460 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Between EECS 485 and 529 , which 1 is easier to get through ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 485 OR COURSE alias0 . NUMBER = 529 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 485 OR COURSE alias1 . NUMBER = 529 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Between EECS 519 and EECS 537 , which is easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 519 OR COURSE alias0 . NUMBER = 537 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 519 OR COURSE alias1 . NUMBER = 537 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Between EECS 588 and EECS 569 , which would be easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 588 OR COURSE alias0 . NUMBER = 569 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 588 OR COURSE alias1 . NUMBER = 569 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Between EECS 540 and EECS 628 ; which is the easiest ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 540 OR COURSE alias0 . NUMBER = 628 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 540 OR COURSE alias1 . NUMBER = 628 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Between EECS 545 and EECS 587 what is easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 545 OR COURSE alias0 . NUMBER = 587 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 545 OR COURSE alias1 . NUMBER = 587 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Between EECS 477 and EECS 570 which is easier than the other ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 477 OR COURSE alias0 . NUMBER = 570 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 477 OR COURSE alias1 . NUMBER = 570 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Comparing EECS 512 and EECS 490 , which is easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 512 OR COURSE alias0 . NUMBER = 490 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 512 OR COURSE alias1 . NUMBER = 490 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Do you find EECS 441 or EECS 381 easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 441 OR COURSE alias0 . NUMBER = 381 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 441 OR COURSE alias1 . NUMBER = 381 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: EECS 487 and EECS 521 , which 1 is easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 487 OR COURSE alias0 . NUMBER = 521 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 487 OR COURSE alias1 . NUMBER = 521 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: If you compared EECS 453 and EECS 592 , which would you consider to be least difficult ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 453 OR COURSE alias0 . NUMBER = 592 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 453 OR COURSE alias1 . NUMBER = 592 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Is EECS 282 easier , or EECS 767 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 282 OR COURSE alias0 . NUMBER = 767 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 282 OR COURSE alias1 . NUMBER = 767 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Is EECS 567 or EECS 529 easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 567 OR COURSE alias0 . NUMBER = 529 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 567 OR COURSE alias1 . NUMBER = 529 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Is either EECS 499 or EECS 441 easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 499 OR COURSE alias0 . NUMBER = 441 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 499 OR COURSE alias1 . NUMBER = 441 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Looking at EECS 598 and EECS 461 , which is the easier course ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 598 OR COURSE alias0 . NUMBER = 461 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 598 OR COURSE alias1 . NUMBER = 461 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of EECS 573 and EECS 512 , which is easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 573 OR COURSE alias0 . NUMBER = 512 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 573 OR COURSE alias1 . NUMBER = 512 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of EECS 578 and EECS 280 which is less difficult ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 578 OR COURSE alias0 . NUMBER = 280 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 578 OR COURSE alias1 . NUMBER = 280 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of the classes EECS 792 and EECS 568 , which is easier .
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 792 OR COURSE alias0 . NUMBER = 568 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 792 OR COURSE alias1 . NUMBER = 568 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of the following [ classes ] , EECS 698 and EECS 442 , which is easiest ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 698 OR COURSE alias0 . NUMBER = 442 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 698 OR COURSE alias1 . NUMBER = 442 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of the 2 , which is easier : EECS 571 and EECS 270 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 571 OR COURSE alias0 . NUMBER = 270 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 571 OR COURSE alias1 . NUMBER = 270 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of the 2 classes , which is easier , EECS 566 or EECS 792 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 566 OR COURSE alias0 . NUMBER = 792 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 566 OR COURSE alias1 . NUMBER = 792 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Of these 2 , which is less difficult : EECS 481 or EECS 575 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 481 OR COURSE alias0 . NUMBER = 575 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 481 OR COURSE alias1 . NUMBER = 575 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Out of EECS 545 and EECS 470 , which is easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 545 OR COURSE alias0 . NUMBER = 470 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 545 OR COURSE alias1 . NUMBER = 470 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Out of EECS 388 and EECS 301 , which 1 is more effortless ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 388 OR COURSE alias0 . NUMBER = 301 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 388 OR COURSE alias1 . NUMBER = 301 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: What 's easier out of these 2 : EECS 101 or EECS 510 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 101 OR COURSE alias0 . NUMBER = 510 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 101 OR COURSE alias1 . NUMBER = 510 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: What class is easier , EECS 537 or EECS 401 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 537 OR COURSE alias0 . NUMBER = 401 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 537 OR COURSE alias1 . NUMBER = 401 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: What class is easier if the choice is between EECS 555 and EECS 651 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 555 OR COURSE alias0 . NUMBER = 651 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 555 OR COURSE alias1 . NUMBER = 651 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: What is easier out of EECS 442 and EECS 552 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 442 OR COURSE alias0 . NUMBER = 552 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 442 OR COURSE alias1 . NUMBER = 552 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: What is easiest EECS 530 or EECS 413 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 530 OR COURSE alias0 . NUMBER = 413 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 530 OR COURSE alias1 . NUMBER = 413 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: What is the easier option , EECS 516 or EECS 552 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 516 OR COURSE alias0 . NUMBER = 552 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 516 OR COURSE alias1 . NUMBER = 552 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which class is easier , EECS 381 or EECS 591 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 381 OR COURSE alias0 . NUMBER = 591 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 381 OR COURSE alias1 . NUMBER = 591 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which class is easier : EECS 633 or EECS 498 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 633 OR COURSE alias0 . NUMBER = 498 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 633 OR COURSE alias1 . NUMBER = 498 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which class is easier out of EECS 353 and EECS 230 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 353 OR COURSE alias0 . NUMBER = 230 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 353 OR COURSE alias1 . NUMBER = 230 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which course is easier : EECS 512 or EECS 434 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 512 OR COURSE alias0 . NUMBER = 434 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 512 OR COURSE alias1 . NUMBER = 434 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which course is less difficult , EECS 597 or EECS 755 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 597 OR COURSE alias0 . NUMBER = 755 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 597 OR COURSE alias1 . NUMBER = 755 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is easier , EECS 530 or EECS 312 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 530 OR COURSE alias0 . NUMBER = 312 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 530 OR COURSE alias1 . NUMBER = 312 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is easier out of EECS 250 and EECS 566 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 250 OR COURSE alias0 . NUMBER = 566 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 250 OR COURSE alias1 . NUMBER = 566 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is easier EECS 546 or EECS 558 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 546 OR COURSE alias0 . NUMBER = 558 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 546 OR COURSE alias1 . NUMBER = 558 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is easier between EECS 597 and EECS 521 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 597 OR COURSE alias0 . NUMBER = 521 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 597 OR COURSE alias1 . NUMBER = 521 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is easiest out of EECS 995 and EECS 402 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 995 OR COURSE alias0 . NUMBER = 402 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 995 OR COURSE alias1 . NUMBER = 402 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is less demanding out of EECS 545 and EECS 562 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 545 OR COURSE alias0 . NUMBER = 562 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 545 OR COURSE alias1 . NUMBER = 562 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is less difficult , EECS 583 , or EECS 532 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 583 OR COURSE alias0 . NUMBER = 532 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 583 OR COURSE alias1 . NUMBER = 532 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which is less difficult , EECS 528 or EECS 425 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 528 OR COURSE alias0 . NUMBER = 425 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 528 OR COURSE alias1 . NUMBER = 425 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which of the 2 are easier , EECS 503 , or EECS 489 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 503 OR COURSE alias0 . NUMBER = 489 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 503 OR COURSE alias1 . NUMBER = 489 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which 1 is easier , EECS 557 or EECS 250 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 557 OR COURSE alias0 . NUMBER = 250 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 557 OR COURSE alias1 . NUMBER = 250 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which 1 is easier EECS 532 or EECS 481 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 532 OR COURSE alias0 . NUMBER = 481 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 532 OR COURSE alias1 . NUMBER = 481 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which 1 is easiest , EECS 634 or EECS 592 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 634 OR COURSE alias0 . NUMBER = 592 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 634 OR COURSE alias1 . NUMBER = 592 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Which 1 of the following classes is easier : EECS 638 or EECS 519 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 638 OR COURSE alias0 . NUMBER = 519 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 638 OR COURSE alias1 . NUMBER = 519 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Would taking EECS 695 be easier or would taking EECS 499 be easier ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( COURSE alias0 . NUMBER = 695 OR COURSE alias0 . NUMBER = 499 ) AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 695 OR COURSE alias1 . NUMBER = 499 ) AND COURSE alias1 . DEPARTMENT = " EECS " ) ;

Q: Does Carolyn Dekker teach any upper-level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Carolyn Dekker %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Among the upper-level courses are any taught by Yanay Israeli ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Yanay Israeli %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Are any upper-level courses taught by Peter Dempsey ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Peter Dempsey %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Are there any upper level courses taught by Julia Sonnevend ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Julia Sonnevend %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Are there any upper-level courses taught by Jeremy Bassis ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Jeremy Bassis %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Emily Mahan , does he teach any upper-level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Emily Mahan %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Does Jun Zhang give upper-level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Jun Zhang %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Does Christopher Peterson provide teaching for any upper-level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Christopher Peterson %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Does Prof. Alexander Thomas have any upper-level courses he teaches ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Alexander Thomas %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: For the upper-level courses , are there any taught by He Jang ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% He Jang %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: For the upper-level courses is the instuctor ever Bradley Hinesman ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Bradley Hinesman %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Is Belle Baxley teaching any of the upper-level classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Belle Baxley %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Is there an upper-level course taught by Michelle Orecchio ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Michelle Orecchio %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Of the upper-level courses are any taught by Kennedy Turner ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Kennedy Turner %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What upper level courses does Timothy Scott teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Timothy Scott %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What upper-level courses does Bhargav Bhatt teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Bhargav Bhatt %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Which upper-level courses are taught by Jillian Hardee ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Jillian Hardee %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Which upper-level courses does Deborah Keller-cohen teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Deborah Keller-cohen %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Which upper level courses does Loch-caruso teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Loch-caruso %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Does Sebens teach upper level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Sebens %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Which upper level courses are taught by Verma ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Verma %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Lempert teaches which upper level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Lempert %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: For upper level courses , which does Cremonini teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Cremonini %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Of the upper level courses , which does Atran teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Atran %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What courses does Banco teach that are upper level ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Banco %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Which of the upper level courses are taught by Rounds ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Rounds %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: for upper level courses , which ones does Byrd teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Byrd %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What upper level courses are taught by Roupenian ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Roupenian %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What are the upper level courses that Hutson teaches ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Hutson %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Goulbourne teaches what upper level courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE INSTRUCTOR alias0 . NAME LIKE "% Goulbourne %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: At what times of the week will 131 be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 131 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: 368 will be offered at what times of the week ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 368 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: 820 will be offered at which times of the week ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 820 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the week , what times will 183 be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 183 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: During what times of the week will you offer 612 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 612 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: During what times will 863 be offered each week ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 863 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For 867 , what times of the week will it be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 867 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the weekly schedule for 418 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 418 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When during the week will 683 be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 683 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is 847 being offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 847 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is 529 offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 529 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will 347 be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 347 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will 411 be offered during the week ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 411 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will 268 be offered this week ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 268 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When does 357 meet in the Summer ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 357 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: 197 meets in the Spring-Summer when ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 197 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do you know when 281 meets in the Summer ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 281 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does 351 meet in the Fall , if so when ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 351 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For 619 , when does it meet in the Summer ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 619 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Winter , when does 890 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 890 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Summer when does 900 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 900 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 's the schedule for 736 in the Fall ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 736 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the class time for course 991 during Fall term ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 991 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What time is course 246 held for Fall semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 246 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When , in the Fall , does 346 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 346 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When in the Summer does 518 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 518 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who has taught , is teaching , or will teach Dissertation-Candidacy ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Dissertation-Candidacy %" ;

Q: Mkt Mngmtin Sport were , are , or will be taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Mkt Mngmtin Sport %" ;

Q: Do you know who will teach , is teaching or has taught in the past Dance Workshop ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Dance Workshop %" ;

Q: For Reading Hebrew Literature , who has taught , is currently teaching or will teach the class ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Reading Hebrew Literature %" ;

Q: For the Directed Slavic Studies class , who taught it in the past , who is currently teaching it , and who will teach it in the future ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Directed Slavic Studies %" ;

Q: In Undergraduate Psychology , who has , is or will teach this ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Undergraduate Psychology %" ;

Q: In Transactional Drafting , who have all the teachers been past present and future ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Transactional Drafting %" ;

Q: In regard to Demotic Egyptian , who has , is or will teach it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Demotic Egyptian %" ;

Q: Tell me all who has , is , or will be teaching Research International Economics ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Research International Economics %" ;

Q: Who has , is , or will be teaching Regulatory Issues ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Regulatory Issues %" ;

Q: Who has taught , teaches or will teach New Media Writing ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% New Media Writing %" ;

Q: Who in the past has taught , currently is teaching or in the future will teach Special Applied Statistics ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Special Applied Statistics %" ;

Q: Who is , was , or will be teaching Information Industry ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Information Industry %" ;

Q: Who is the past , present or future Child Therapy teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Child Therapy %" ;

Q: Who is the previous , current or upcoming Entrepreneurial Business Fundamentals for Engineers and Scientists teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Entrepreneurial Business Fundamentals for Engineers and Scientists %" ;

Q: Who is the professor that teaches , has taught or will teach Reading the Rabbis ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Reading the Rabbis %" ;

Q: Who taught in the past , will be teaching in the future , or is currently teaching Prin Operative Dent ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Prin Operative Dent %" ;

Q: Who teaches Advanced Intergroup Relations ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Advanced Intergroup Relations %" ;

Q: Who has taught , is teaching , or will teach RCCORE 104 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCCORE " AND COURSE alias0 . NUMBER = 104 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: By whom is BIOLOGY 281 taught ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOLOGY " AND COURSE alias0 . NUMBER = 281 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you identify who teaches PATH 684 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 684 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you tell me the professor who is teaching LATIN 802 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LATIN " AND COURSE alias0 . NUMBER = 802 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you tell me who the AEROSP 533 teacher is ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AEROSP " AND COURSE alias0 . NUMBER = 533 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you tell me who the teacher is for ANTHRBIO 161 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ANTHRBIO " AND COURSE alias0 . NUMBER = 161 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Could you tell me which professor teaches ARMENIAN 101 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ARMENIAN " AND COURSE alias0 . NUMBER = 101 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do you know the teacher for EDUC 790 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EDUC " AND COURSE alias0 . NUMBER = 790 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do you know who the teacher is for INTLSTD 401 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " INTLSTD " AND COURSE alias0 . NUMBER = 401 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do you know who the teacher of STATS 550 is ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " STATS " AND COURSE alias0 . NUMBER = 550 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: DOC 806 , who teaches it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DOC " AND COURSE alias0 . NUMBER = 806 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: BIOMATLS 568 has who as a teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOMATLS " AND COURSE alias0 . NUMBER = 568 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: BIOINF 545 is taught by which professor ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOINF " AND COURSE alias0 . NUMBER = 545 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: UKRAINE 152 is taught by who ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " UKRAINE " AND COURSE alias0 . NUMBER = 152 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: CMPLXSYS 541 is taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CMPLXSYS " AND COURSE alias0 . NUMBER = 541 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: For LHSP 130 , who is teaching ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LHSP " AND COURSE alias0 . NUMBER = 130 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: For MKT 303 , who is the teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MKT " AND COURSE alias0 . NUMBER = 303 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: If I were to take EDCURINS 575 , who would be the instructor ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EDCURINS " AND COURSE alias0 . NUMBER = 575 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: In BCS 533 , would you happen to know who teaches ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BCS " AND COURSE alias0 . NUMBER = 533 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Name the professor or teacher teaching CICS 301 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CICS " AND COURSE alias0 . NUMBER = 301 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Of all the teachers , which 1 teaches PEDDENT 599 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PEDDENT " AND COURSE alias0 . NUMBER = 599 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Of the CHEM classes , who teaches 574 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CHEM " AND COURSE alias0 . NUMBER = 574 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: The DUTCH 492 teacher , who is it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DUTCH " AND COURSE alias0 . NUMBER = 492 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: The teacher for CMPLXSYS 608 is who ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CMPLXSYS " AND COURSE alias0 . NUMBER = 608 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: The teacher for PATH 643 is whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 643 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What is the instructors name that teaches CMPLXSYS 270 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CMPLXSYS " AND COURSE alias0 . NUMBER = 270 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What is the name of the PHYSIOL 684 class teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHYSIOL " AND COURSE alias0 . NUMBER = 684 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What is the name of the instructor for DHYGRACK 682 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DHYGRACK " AND COURSE alias0 . NUMBER = 682 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What is the teacher 's name for COMPLIT 260 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " COMPLIT " AND COURSE alias0 . NUMBER = 260 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What professor is teaching CJS 799 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CJS " AND COURSE alias0 . NUMBER = 799 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What professor teaches LACS 471 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LACS " AND COURSE alias0 . NUMBER = 471 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What teacher teaches DANCE 327 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 327 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which instructor teaches SOC 324 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SOC " AND COURSE alias0 . NUMBER = 324 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which person is the teacher of PSYCH 359 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PSYCH " AND COURSE alias0 . NUMBER = 359 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which professor teaches BIOLOGY 172 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOLOGY " AND COURSE alias0 . NUMBER = 172 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which teacher gives the class EPID 709 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EPID " AND COURSE alias0 . NUMBER = 709 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who instructs BCS 532 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BCS " AND COURSE alias0 . NUMBER = 532 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is AT 313 taught by ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AT " AND COURSE alias0 . NUMBER = 313 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is scheduled to teach MACROMOL 517 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MACROMOL " AND COURSE alias0 . NUMBER = 517 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is teaching PHIL 406 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHIL " AND COURSE alias0 . NUMBER = 406 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the SWC 105 professor ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SWC " AND COURSE alias0 . NUMBER = 105 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the CEE 520 teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CEE " AND COURSE alias0 . NUMBER = 520 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the instructor for ENGR 521 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENGR " AND COURSE alias0 . NUMBER = 521 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the instructor for course MATSCIE 360 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 360 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the professor for ANTHRCUL 524 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ANTHRCUL " AND COURSE alias0 . NUMBER = 524 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the teacher for FILMVID 401 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 401 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the teacher of PAT 331 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PAT " AND COURSE alias0 . NUMBER = 331 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who lectures MATH 497 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATH " AND COURSE alias0 . NUMBER = 497 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who teaches MO 990 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MO " AND COURSE alias0 . NUMBER = 990 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who teaches the CJS 799 class ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CJS " AND COURSE alias0 . NUMBER = 799 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Prof. Robert Donia teaching 452 next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 452 AND INSTRUCTOR alias0 . NAME LIKE "% Robert Donia %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Class 767 , is Prof. Valerie Laken teaching it next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 767 AND INSTRUCTOR alias0 . NAME LIKE "% Valerie Laken %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Does Prof. Bradley Smith teach 475 next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 475 AND INSTRUCTOR alias0 . NAME LIKE "% Bradley Smith %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: For 599 , is Prof. Elizabeth Mimms the teacher next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 599 AND INSTRUCTOR alias0 . NAME LIKE "% Elizabeth Mimms %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: In 509 class is Prof. Zhaohui Xu teaching next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 509 AND INSTRUCTOR alias0 . NAME LIKE "% Zhaohui Xu %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Is 441 being taught by Prof. Domenic Desocio next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 441 AND INSTRUCTOR alias0 . NAME LIKE "% Domenic Desocio %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Is next Winter 's 527 class taught by Prof. James Desimpelare ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 527 AND INSTRUCTOR alias0 . NAME LIKE "% James Desimpelare %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Is the 498 Winter class being taught by Prof. Gino Knodel ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 498 AND INSTRUCTOR alias0 . NAME LIKE "% Gino Knodel %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Winter , is Prof. Scott Hershovitz teaching 633 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 633 AND INSTRUCTOR alias0 . NAME LIKE "% Scott Hershovitz %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Winter , will Prof. Jiarui Fei be teaching 280 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 280 AND INSTRUCTOR alias0 . NAME LIKE "% Jiarui Fei %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Winter is Prof. Simon Wojczyszyn teaching 445 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 445 AND INSTRUCTOR alias0 . NAME LIKE "% Simon Wojczyszyn %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Will Prof. Anthony Collings be teaching 590 for next Winter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 590 AND INSTRUCTOR alias0 . NAME LIKE "% Anthony Collings %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: What upper-level electives are offered in the Fall and Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter , what are all the upper-level electives being offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter , what upper-level electives are being offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter , what upper-level electives are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: For Fall and Winter electives , are there any offerings that are considered upper level ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Fall and Winter , what upper-level electives are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall and Winter , what upper-level electives are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: Out of the upper-level electives , which ones are offered in the Fall and Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are all the upper-level electives being offered in the Fall and Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the upper-level elective options for the Fall and Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes during the Fall and Winter terms are upper-level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the Fall and Winter schedule for upper-level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper-level electives are offered in the Fall and Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any upper level classes that do not require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any classes at the upper level that I can do without number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there upper level classes that do n't have number0 as a prerequisite ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there upper-level classes for which number0 is not required ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Do any of the upper level classes not require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Do any upper level classes not require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Do any upper-level classes not have number0 as a prerequisite ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Do you offer any upper level classes that do not require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is number0 not a requirement for any of the upper level classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is number0 required in all upper level classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is there any class at the upper level , which does not require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Upper level classes , do any not require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Would there be any upper level classes that do n't require number0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is there a class about Physiology Masters Research Capstone ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Physiology Masters Research Capstone %" OR COURSE alias0 . NAME LIKE "% Physiology Masters Research Capstone %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Among the computer science classes offered , is there a class about Statistics and Econometrics ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Statistics and Econometrics %" OR COURSE alias0 . NAME LIKE "% Statistics and Econometrics %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any classes about Elementary African Languages ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Elementary African Languages %" OR COURSE alias0 . NAME LIKE "% Elementary African Languages %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there classes about Selected Topics Eng ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Selected Topics Eng %" OR COURSE alias0 . NAME LIKE "% Selected Topics Eng %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Do they offer a class about Molecular and Genomic Evolution ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Molecular and Genomic Evolution %" OR COURSE alias0 . NAME LIKE "% Molecular and Genomic Evolution %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Does a class about Chamber Music exist ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Chamber Music %" OR COURSE alias0 . NAME LIKE "% Chamber Music %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Does a Graduate REEES class exist ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Graduate REEES %" OR COURSE alias0 . NAME LIKE "% Graduate REEES %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Does Educ Multicult Soc have a class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Educ Multicult Soc %" OR COURSE alias0 . NAME LIKE "% Educ Multicult Soc %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is Biology and Management of Insects a class that is offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Biology and Management of Insects %" OR COURSE alias0 . NAME LIKE "% Biology and Management of Insects %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is there a class that focuses on Vocal Lit ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Vocal Lit %" OR COURSE alias0 . NAME LIKE "% Vocal Lit %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is there a Advanced Mathematical Methods for the Biological Sciences class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Advanced Mathematical Methods for the Biological Sciences %" OR COURSE alias0 . NAME LIKE "% Advanced Mathematical Methods for the Biological Sciences %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Of the classes , is there 1 about Art and Context ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Art and Context %" OR COURSE alias0 . NAME LIKE "% Art and Context %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Regarding The Nature of Science , is there a class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% The Nature of Science %" OR COURSE alias0 . NAME LIKE "% The Nature of Science %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: To learn about PhD Dissertation-Pre-Candidate , is there a class offered here ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% PhD Dissertation-Pre-Candidate %" OR COURSE alias0 . NAME LIKE "% PhD Dissertation-Pre-Candidate %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: What classes about Classical Studies Honors Seminar are there ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Classical Studies Honors Seminar %" OR COURSE alias0 . NAME LIKE "% Classical Studies Honors Seminar %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: With regards to classes , are there any about Evolution and Extinction ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Evolution and Extinction %" OR COURSE alias0 . NAME LIKE "% Evolution and Extinction %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Are there any other professors teaching Sports and Daily Ancient Rome besides Prof. Maguire ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Sports and Daily Ancient Rome %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Maguire %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Are there any professors who teach Survey Research , other than Prof. Hasson ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Survey Research %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Hasson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Aside from Prof. Oches , does anyone else teach Special Readings ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Special Readings %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Oches %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Besides Prof. Keppen , is there any other person teaching Analytical Archaeology ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Analytical Archaeology %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Keppen %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do any people besides Prof. Nardis teach Birds of the World ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Birds of the World %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Nardis %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do any professors besides Pinella teach The Writing of Poetry ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% The Writing of Poetry %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Pinella %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does Political Sociology have only 1 teacher , Prof. Men ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Political Sociology %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Men %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does anyone else teach Animation for non-Majors other than Prof. Lay ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Animation for non-Majors %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Lay %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does anyone teach Professional Communication Strategies besides Prof. Figuero ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Professional Communication Strategies %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Figuero %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does anyone teach teach Media Institutions aside from Prof. Lombard ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Media Institutions %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Lombard %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does only Prof. Routenberg teach Control Structures and Fluids ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Control Structures and Fluids %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Routenberg %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does someone besides Prof. Bencatel teach Individual Authors ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Individual Authors %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Bencatel %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Dr. Lara the only teacher of Research for the Social Sciences or Humanities ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Research for the Social Sciences or Humanities %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Lara %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Prof. Bodova the only professor available for Senior Creative Writing Tutorial ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Senior Creative Writing Tutorial %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Bodova %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Prof. Kubena the only teacher of Pd Anes Rotatn ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Pd Anes Rotatn %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Kubena %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Prof. Riseng the only teacher who teaches Digital Cultures ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Digital Cultures %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Riseng %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Joiner the only Seminar Series instructor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Seminar Series %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Joiner %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Sociocultural Anthropology only taught by Prof. Oetting ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Sociocultural Anthropology %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Oetting %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is A History of Modern Psychology only taught by 1 person , Professor . Hull ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% A History of Modern Psychology %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Hull %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is Nuclear Waste Management taught only by Prof. Toman ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Nuclear Waste Management %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Toman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is it true that Prof. Messer is the only person who teaches A History of the Economy ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% A History of the Economy %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Messer %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the Principles of Real Time Computing class only taught by Prof. Punathambekar ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Principles of Real Time Computing %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Punathambekar %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the class on Communication Networks only taught by Prof. Cieply ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Communication Networks %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Cieply %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the only Gender and Social Science professor Prof. Joyce ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Gender and Social Science %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Joyce %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the only 1 that teaches Anthropology and History Workshop/Reading Group Prof. Abbas ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Anthropology and History Workshop/Reading Group %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Abbas %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the only person teaching Biochem Res-Med Stu Prof. Corrigan ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Biochem Res-Med Stu %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Corrigan %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the only person who teaches Engr Prop Soil , Prof. Huffman ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Engr Prop Soil %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Huffman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is the only person who teaches Nutrition Prof. Pifer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Nutrition %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Pifer %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there another person besides Prof. Etzion that teaches Leading Non-Profit Organizations ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Leading Non-Profit Organizations %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Etzion %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there any other person besides Prof. Bagchi who teaches Advanced Writing for Graduate Students ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Advanced Writing for Graduate Students %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Bagchi %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there any professor other than Prof. Lindsay who teaches Livy ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Livy %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Lindsay %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there anyone else who teaches Medieval Literature besides Prof. Navvab ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Medieval Literature %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Navvab %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there anyone other than Prof. Sheffield that teaches The Holocaust ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% The Holocaust %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Sheffield %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Prof. Radosevich is the only person who teaches Medieval Music , correct ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Medieval Music %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Radosevich %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: The only person who teaches Mini Classical Civilization , is it Prof. Gone ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Mini Classical Civilization %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Gone %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: When is the next time Cheri Deng will teach 687 ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 687 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Cheri Deng %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: At what time will Steven Ceccio teach 885 ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 885 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Steven Ceccio %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: At what time will Katie Macdonald teach 453 next ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 453 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Katie Macdonald %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Samuel Epstein will teach 278 again when ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 278 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Samuel Epstein %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: What time is Geoffrey Bankowski next teaching 463 ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 463 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Geoffrey Bankowski %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When does Stephen Rassi teach 841 again ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 841 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Stephen Rassi %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When does the next 872 taught by Sara Holliday happen ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 872 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sara Holliday %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is Diarmaid O'foighil next scheduled to teach 461 ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 461 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Diarmaid O'foighil %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is Ching Lee teaching 783 next ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 783 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ching Lee %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is class 582 offered with Bozhong Li ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 582 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Bozhong Li %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is the next available class 519 with Michelle Robinette teaching ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 519 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Michelle Robinette %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is the next time 248 , taught by Ryan Kellogg be offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 248 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ryan Kellogg %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will 962 be taught by Finn Bell again ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 962 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Finn Bell %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will Craig Holden teach 930 again ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 930 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Craig Holden %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will Sarah Mcdowell teach 763 next ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 763 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sarah Mcdowell %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Will 732 be taught by Cheong-hee Chang in the future ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 732 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Cheong-hee Chang %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Will Kaia Olson teach 817 again ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 817 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kaia Olson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: I 'm thinking about taking a web technology course and want to know where I can start .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% web technology %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Can you give me a starting point for selecting a computing infrastructure class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Do you know anywhere that offers intelligent systems courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: For taking a web technology course , where can I start as I am thinking about it ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% web technology %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: I 'd like to take a computing infrastructure course , so where do you think I should start ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: I may wish to take a human computer interaction course and I 'm looking for suggestions as to where to begin .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: I might take a intelligent systems course , so where should I start ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: I want to take a software course and would like to know where I can start .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% software %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Where can I find a list of web technology courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% web technology %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Where can I start taking a computing infrastructure course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Where can I take a human computer interaction course as I 'm thinking of taking 1 .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Where should I begin if I want to take a computing infrastructure course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Where should I start if I am thinking about taking a theory course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% theory %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: What class can I take now that 's a prerequisite for most other classes ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What class can I take during this semester that 's a prerequisite for most other classes ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What class can I take this semester that 's a prerequisite for most other classes ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: I need to take a class this semester that will be a prerequisite for most other classes .
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: I need to take a class this semester that 's a prerequisite for most of the other classes .
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Is there a prerequisite for many other courses that I can take this semester ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: This semester , what class can I take that 's a prerequisite for most other classes ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What classes can I finish this semester that are a prerequisite for most other classes ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What is a good foundation class I can take this semester that will qualify me for other classes ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which prerequisite for most classes can I take this semester ?
query: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: How big is 482 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 482 ;

Q: 181 is how big ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 181 ;

Q: 483 is how large ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 483 ;

Q: 542 is what size ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 542 ;

Q: Exactly how big is 581 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 581 ;

Q: How big is course 574 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 574 ;

Q: How big is the 494 class ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 494 ;

Q: How huge is 540 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 540 ;

Q: How large do you think 591 is ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 591 ;

Q: How large is 570 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 570 ;

Q: How large is course 533 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 533 ;

Q: How large is the class 588 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 588 ;

Q: How many people are in 477 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 477 ;

Q: How many students in 575 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 575 ;

Q: How small is 549 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 549 ;

Q: Just how big do you think 579 is ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 579 ;

Q: That 515 exactly how big is it ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 515 ;

Q: The 414 class , how big is it ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 414 ;

Q: The 546 class - how big is it ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 546 ;

Q: What 's the size of 561 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 561 ;

Q: What 's the size of the 215 course ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 215 ;

Q: What is 320 's size ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 320 ;

Q: What is the size of 542 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 542 ;

Q: What is the size of the 445 class ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 445 ;

Q: What size is 230 ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 230 ;

Q: What size would 421 be ?
query: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 421 ;

Q: How often does the class meet for UKRAINE 452 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " UKRAINE " AND COURSE alias0 . NUMBER = 452 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Class PERSIAN 201 meets how often ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PERSIAN " AND COURSE alias0 . NUMBER = 201 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does RESTORA 748 meet often ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " RESTORA " AND COURSE alias0 . NUMBER = 748 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does the class meet for AERO 411 often ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " AERO " AND COURSE alias0 . NUMBER = 411 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For class RCIDIV 390 , how often does it meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " RCIDIV " AND COURSE alias0 . NUMBER = 390 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How frequently does THTREMUS 370 meet for class ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " THTREMUS " AND COURSE alias0 . NUMBER = 370 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How frequently does the class meet for MEMS 333 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MEMS " AND COURSE alias0 . NUMBER = 333 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many time a week does the class meet for MUSTHTRE 141 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MUSTHTRE " AND COURSE alias0 . NUMBER = 141 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many times does the class meet for RELIGION 467 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " RELIGION " AND COURSE alias0 . NUMBER = 467 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often does STRATEGY 502 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " STRATEGY " AND COURSE alias0 . NUMBER = 502 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often does the CHEMBIO 599 class meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CHEMBIO " AND COURSE alias0 . NUMBER = 599 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often does the class YIDDISH 531 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " YIDDISH " AND COURSE alias0 . NUMBER = 531 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often does the class convene for ASTRO 104 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 104 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often does the course POLSCI 659 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " POLSCI " AND COURSE alias0 . NUMBER = 659 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often during the semester does the class meet for ARABAM 204 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ARABAM " AND COURSE alias0 . NUMBER = 204 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How often is class held for JAZZ 302 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " JAZZ " AND COURSE alias0 . NUMBER = 302 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In RCCORE 103 how regularly does the class meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " RCCORE " AND COURSE alias0 . NUMBER = 103 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: The BIOINF 668 class meets how often ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BIOINF " AND COURSE alias0 . NUMBER = 668 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there an department0 level0 -level course that is worth credit0 credits ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any department0 level0 -level courses that are credit0 credits ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can you tell me if there is a credit0 -credit department0 level0 -level course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the credit0 -credit courses are there any department0 level0 -level ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a credit0 -credit department0 level0 -level course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a credit0 -credit department0 class that is level level0 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a credit0 -credit course that is department0 level0 -level ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a credit0 -credit course that is a level0 -level department0 course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a level level0 , c400redit0 -credit department0 course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there an department0 level0 -level class that is credit0 -credit ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there an department0 level0 -level course that contains credit0 credits ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Tell me if there are any credit0 -credit courses in the department0 level0 -level .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper level CS classes are offered next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any upper level CS classes offered next semester , which are they ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In next semester which upper level CS classes are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what are the available upper level CS classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what upper level CS classes will there be ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the upper level CS classes provided in next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the upper level CS classes that are available next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the upper level CS course list for next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What upper level CS classes are available next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What upper level CS classes are offered next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper level CS classes are offered this upcoming semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper level CS courses are offered next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper level CS courses are offered this following semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there PIBS 14 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " PIBS " COURSE alias0 . CREDITS = 14 ;

Q: Are any courses in GERMAN for 3 -credit ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " GERMAN " COURSE alias0 . CREDITS = 3 ;

Q: Are there 16 -credit LATINOAM courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LATINOAM " COURSE alias0 . CREDITS = 16 ;

Q: Are there 11 -credit courses for NEAREAST ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NEAREAST " COURSE alias0 . CREDITS = 11 ;

Q: Are there 4 -credit courses that are BIOLCHEM ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " COURSE alias0 . CREDITS = 4 ;

Q: Are there PEDDENT courses that are 8 -credit ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " PEDDENT " COURSE alias0 . CREDITS = 8 ;

Q: Are there any 12 -credit SPACE classes ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SPACE " COURSE alias0 . CREDITS = 12 ;

Q: Are there any 3 -credit courses for CCS ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CCS " COURSE alias0 . CREDITS = 3 ;

Q: Are there any courses for 1 -credit in BIOLCHEM ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " COURSE alias0 . CREDITS = 11 ;

Q: Are there any 16 -credit SM classes ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SM " COURSE alias0 . CREDITS = 16 ;

Q: Does INSTHUM have any 11 -credit classes ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " INSTHUM " COURSE alias0 . CREDITS = 11 ;

Q: Does ES offer 9 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ES " COURSE alias0 . CREDITS = 9 ;

Q: Does APPPHYS offer any courses worth 5 -credit ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " APPPHYS " COURSE alias0 . CREDITS = 15 ;

Q: Is DANCE offering a 11 -credit class ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " DANCE " COURSE alias0 . CREDITS = 11 ;

Q: Is there such a thing as an NEUROSCI 4 -credit course ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NEUROSCI " COURSE alias0 . CREDITS = 4 ;

Q: Which courses are SI 6 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SI " COURSE alias0 . CREDITS = 6 ;

Q: What are the ASIANLAN courses that are worth 2 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ASIANLAN " COURSE alias0 . CREDITS = 2 ;

Q: GERMAN 10 -credit courses are what courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " GERMAN " COURSE alias0 . CREDITS = 10 ;

Q: What are the courses that are HISTART 8 -credit Courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " HISTART " COURSE alias0 . CREDITS = 8 ;

Q: Can you explain which are the courses that are WOMENSTD 12 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " WOMENSTD " COURSE alias0 . CREDITS = 12 ;

Q: The 13 -credit CHEM classes are which ones ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CHEM " COURSE alias0 . CREDITS = 13 ;

Q: Which courses in LATIN can be taken for 3 credits ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LATIN " COURSE alias0 . CREDITS = 3 ;

Q: Which 16 -credit courses are NERS ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NERS " COURSE alias0 . CREDITS = 16 ;

Q: What AMCULT 3 -credit courses are there ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " AMCULT " COURSE alias0 . CREDITS = 3 ;

Q: What GREEK 12 -credit courses are available ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " GREEK " COURSE alias0 . CREDITS = 12 ;

Q: Can you point me in the direction of the SOC 18 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SOC " COURSE alias0 . CREDITS = 18 ;

Q: Out of all of the courses which are JUDAIC 16 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " JUDAIC " COURSE alias0 . CREDITS = 16 ;

Q: What are the THTREMUS 3 -credit courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " THTREMUS " COURSE alias0 . CREDITS = 3 ;

Q: For ARCH 13 -credit courses , what are the available courses ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ARCH " COURSE alias0 . CREDITS = 13 ;

Q: Is STDABRD 306 section 354 offered in the Summer 2003 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 354 AND COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 306 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2003 ;

Q: Are they offering ANTHRARC 494 section 692 in the Spring 2019 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 692 AND COURSE alias0 . DEPARTMENT = " ANTHRARC " AND COURSE alias0 . NUMBER = 494 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2019 ;

Q: In the Spring-Summer 2001 semester , will RCLANG 156 section 293 be offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 293 AND COURSE alias0 . DEPARTMENT = " RCLANG " AND COURSE alias0 . NUMBER = 156 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . YEAR = 2001 ;

Q: In the Spring 2010 semester is SURVMETH 995 section 790 offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 790 AND COURSE alias0 . DEPARTMENT = " SURVMETH " AND COURSE alias0 . NUMBER = 995 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2010 ;

Q: Is LHC 510 section 688 available in the Winter 2000 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 688 AND COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 510 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . YEAR = 2000 ;

Q: Is GEOSCI 511 section 202 being offered in the Summer 2013 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 202 AND COURSE alias0 . DEPARTMENT = " GEOSCI " AND COURSE alias0 . NUMBER = 511 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2013 ;

Q: Is DANCE 103 section 496 going to be offered in the Fall 2017 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 496 AND COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 103 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2017 ;

Q: Is RCARTS 385 section 269 offered this Summer 2014 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 269 AND COURSE alias0 . DEPARTMENT = " RCARTS " AND COURSE alias0 . NUMBER = 385 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2014 ;

Q: Is GREEK 441 section 825 provided in the Winter 2007 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 825 AND COURSE alias0 . DEPARTMENT = " GREEK " AND COURSE alias0 . NUMBER = 441 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . YEAR = 2007 ;

Q: Is the class RCHUMS 217 section 313 offered in the Winter 2019 semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE_OFFERING alias0 . SECTION_NUMBER = 313 AND COURSE alias0 . DEPARTMENT = " RCHUMS " AND COURSE alias0 . NUMBER = 217 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . YEAR = 2019 ;

Q: How many sections are there for PHYSIOL 576 ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PHYSIOL " AND COURSE alias0 . NUMBER = 576 ;

Q: For UKR 320 , how many sections are included ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " UKR " AND COURSE alias0 . NUMBER = 320 ;

Q: For BIOINF 801 how many sections are there ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " BIOINF " AND COURSE alias0 . NUMBER = 801 ;

Q: How many SWC 102 sections are there ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " SWC " AND COURSE alias0 . NUMBER = 102 ;

Q: How many sections are there for course SPANISH 830 ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " SPANISH " AND COURSE alias0 . NUMBER = 830 ;

Q: How many sections does CLIMATE 451 contain ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " CLIMATE " AND COURSE alias0 . NUMBER = 451 ;

Q: How many sections does MEDADM 401 have ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MEDADM " AND COURSE alias0 . NUMBER = 401 ;

Q: How many sections does CDB 502 include ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " CDB " AND COURSE alias0 . NUMBER = 502 ;

Q: How much sections are there for 518 BA ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " BA " AND COURSE alias0 . NUMBER = 518 ;

Q: How much sections are there for ES 627 ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ES " AND COURSE alias0 . NUMBER = 627 ;

Q: In WRITING 993 how many sections are there ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " WRITING " AND COURSE alias0 . NUMBER = 993 ;

Q: What is the number of sections available for HBEHED 610 ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " HBEHED " AND COURSE alias0 . NUMBER = 610 ;

Q: What number of sections are there for PHYSED 425 ?
query: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 425 ;

Q: Has Christo Sevov ever taught MCDB 436 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MCDB " AND COURSE alias0 . NUMBER = 436 AND INSTRUCTOR alias0 . NAME LIKE "% Christo Sevov %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Did Michele Papucci ever teach SURVMETH 616 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SURVMETH " AND COURSE alias0 . NUMBER = 616 AND INSTRUCTOR alias0 . NAME LIKE "% Michele Papucci %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do you know if Robert Ziff has ever been the instructor for CONDUCT 506 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CONDUCT " AND COURSE alias0 . NUMBER = 506 AND INSTRUCTOR alias0 . NAME LIKE "% Robert Ziff %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does Sanghyun Lee ever teach LAW 740 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LAW " AND COURSE alias0 . NUMBER = 740 AND INSTRUCTOR alias0 . NAME LIKE "% Sanghyun Lee %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does Nathan Platte teach ITALIAN 660 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ITALIAN " AND COURSE alias0 . NUMBER = 660 AND INSTRUCTOR alias0 . NAME LIKE "% Nathan Platte %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does Dmitriy Stolyarov teach MATSCIE 242 ever ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 242 AND INSTRUCTOR alias0 . NAME LIKE "% Dmitriy Stolyarov %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does Dennis Capozza teach the class ENVIRON 377 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENVIRON " AND COURSE alias0 . NUMBER = 377 AND INSTRUCTOR alias0 . NAME LIKE "% Dennis Capozza %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: LHC 399 is taught by Stephen Lusmann ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 399 AND INSTRUCTOR alias0 . NAME LIKE "% Stephen Lusmann %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has PERIODON 789 been taught by David Canter ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERIODON " AND COURSE alias0 . NUMBER = 789 AND INSTRUCTOR alias0 . NAME LIKE "% David Canter %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has LACS 400 ever been taught by Serena Ng ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LACS " AND COURSE alias0 . NUMBER = 400 AND INSTRUCTOR alias0 . NAME LIKE "% Serena Ng %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has Lawrence Sanna ever taught the class ORALBIOL 852 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORALBIOL " AND COURSE alias0 . NUMBER = 852 AND INSTRUCTOR alias0 . NAME LIKE "% Lawrence Sanna %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has Judith Lynch-sauer ever taught the course NESLANG 499 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NESLANG " AND COURSE alias0 . NUMBER = 499 AND INSTRUCTOR alias0 . NAME LIKE "% Judith Lynch-sauer %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has the class PEDDENT 593 been taught by anyone else , specifically Lutgarde Raskin ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PEDDENT " AND COURSE alias0 . NUMBER = 593 AND INSTRUCTOR alias0 . NAME LIKE "% Lutgarde Raskin %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has the person Anuj Kumar ever taught the class BIOPHYS 521 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOPHYS " AND COURSE alias0 . NUMBER = 521 AND INSTRUCTOR alias0 . NAME LIKE "% Anuj Kumar %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is RCHUMS 371 is instructed by Jaclyn Johnson ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCHUMS " AND COURSE alias0 . NUMBER = 371 AND INSTRUCTOR alias0 . NAME LIKE "% Jaclyn Johnson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is there a time that Sandeepan Gupta taught BUDDHST 511 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BUDDHST " AND COURSE alias0 . NUMBER = 511 AND INSTRUCTOR alias0 . NAME LIKE "% Sandeepan Gupta %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Of all the courses , has John Nanos ever taught CHE 485 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CHE " AND COURSE alias0 . NUMBER = 485 AND INSTRUCTOR alias0 . NAME LIKE "% John Nanos %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Was ENVIRON 310 ever taught by Craig Wuthrich ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENVIRON " AND COURSE alias0 . NUMBER = 310 AND INSTRUCTOR alias0 . NAME LIKE "% Craig Wuthrich %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Was SAC 375 taught by Yan-chun Tung ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SAC " AND COURSE alias0 . NUMBER = 375 AND INSTRUCTOR alias0 . NAME LIKE "% Yan-chun Tung %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is WOMENSTD 499 essential to my graduation ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " WOMENSTD " AND COURSE alias0 . NUMBER = 499 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do I have to take CLLING 637 in order to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CLLING " AND COURSE alias0 . NUMBER = 637 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do I need UKR 351 to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " UKR " AND COURSE alias0 . NUMBER = 351 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do I need to take ARTDES 181 in order to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ARTDES " AND COURSE alias0 . NUMBER = 181 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For my graduation is LHC 750 essential ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 750 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: How important is it to take SOC 895 in order to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SOC " AND COURSE alias0 . NUMBER = 895 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: IS EARTH 147 a required class for me to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EARTH " AND COURSE alias0 . NUMBER = 147 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In order for me to graduate will I need to take LAW 682 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LAW " AND COURSE alias0 . NUMBER = 682 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is EDUC 831 a required course for my major ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EDUC " AND COURSE alias0 . NUMBER = 831 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is ACC 502 definitely needed for my graduation ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ACC " AND COURSE alias0 . NUMBER = 502 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is UC 421 needed for me to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " UC " AND COURSE alias0 . NUMBER = 421 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is it essential that I have ORALPATH 699 for my graduation ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ORALPATH " AND COURSE alias0 . NUMBER = 699 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is it mandatory for graduation for me to take KINESLGY 995 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " KINESLGY " AND COURSE alias0 . NUMBER = 995 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To complete my graduation is MEDCHEM 532 necessary ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MEDCHEM " AND COURSE alias0 . NUMBER = 532 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To graduate , do I need to take INTLSTD 389 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " INTLSTD " AND COURSE alias0 . NUMBER = 389 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Will I need KINESLGY 509 to graduate ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " KINESLGY " AND COURSE alias0 . NUMBER = 509 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: How many upper level classes have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: At the upper level , what number of classes are there that have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: For how many upper level classes are there labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: How many classes of the upper level have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: How many of the upper level classes have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Labs are in what number of upper level courses ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Labs are included in how many of the upper level classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Labs are part of how many classes at the upper level ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Labs are there in how many upper level classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Of all the upper level classes , how many have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Of the upper level classes , how many have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Out of all the upper level classes , what number have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Out of the upper level classes , how many have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Regarding upper level classes , what 's the count on the number that have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: There are labs for how many of the upper level classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: There are labs in how many upper level classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What amount of upper level classes have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What is the number of upper level classes that have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What is the total no . of upper level classes that have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What number of classes at the upper level have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What number of upper level classes have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What number of upper level courses have labs ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What courses are required for the major but not in the LING department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " LING " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Are there any courses required for the major that are not in the NAVSCI department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " NAVSCI " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Name the courses required for the major but not in the EDCURINS department .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " EDCURINS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Name the courses required to major but not in the CMPLXSYS department .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " CMPLXSYS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Name the courses that are mandotary for the major but not in the ROMLANG department .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " ROMLANG " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Name the courses that are required to major but not in the SOC department .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " SOC " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the courses required to major but not in the ARTDES department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " ARTDES " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the courses that are needed to major but not in the EDCURINS department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " EDCURINS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What courses are not in the SM department but are required for the major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " SM " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which are the courses required for the major but not in the CLIMATE department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " CLIMATE " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which courses are compulsory for the major but not in the MOVESCI department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " MOVESCI " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which non-ENGR courses are required for the major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " ENGR " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Without including the DANCE department , what are the required courses for the major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " DANCE " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Show me the requirements for a CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Can you show me the requirements for a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Could I see the requirements for a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Display requirements for a degree in CS-LSA .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Display the requirements to get a CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Display to me what is required for a CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Explain to me all the requirements of the CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: For a CS-LSA degree , show me the requirements ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: I need to know the requirements for a CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: I want to see the requirements for a CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Inform me of what 's needed for a CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Name the requirements for CS-LSA degree .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Show me CS-LSA degree requirements .
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: The CS-LSA degree has what requirements ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: To get a CS-LSA degree , what are the requirements ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: What are the requirements for a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: What are the requirements for getting a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: What are the requirements to get a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: What is required for a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: What requirements are there for a degree in CS-LSA ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: Which requirements do I need to meet for a CS-LSA degree ?
query: SELECT DISTINCT PROGRAM_REQUIREMENT alias0 . ADDITIONAL_REQ , PROGRAM_REQUIREMENT alias0 . CATEGORY , PROGRAM_REQUIREMENT alias0 . MIN_CREDIT , PROGRAM alias0 . NAME FROM PROGRAM AS PROGRAM alias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENT alias0 WHERE PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_REQUIREMENT alias0 . PROGRAM_ID ;

Q: What classes will be offered in the next 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: During the next 6 semesters which classes will be offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: In the next 6 semesters , what classes will be offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: In the next 6 semesters , what courses will be offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: In the next 6 semesters name the classes that are offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: In the next 6 semesters what are the classes offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Name the classes offered in the next 6 semesters .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Name the classes that will be offered in the next 6 semesters .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Name the classes that will be offered over the next 6 semester .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Of the classes offered , which will be available during the next 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Over the course of the next 6 semesters , what classes will be available ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Over the next 6 semesters , what classes will be offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Show me the next 6 semesters of classes .
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: The next 6 semesters , what classes will be offered ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: What are the courses that will be offered for the upcoming 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: What courses will be available during the upcoming 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which classes are going to be offered over the ensuing 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which classes are offered in the next 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which classes will the next 6 semesters have ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which courses are offered in the next 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which courses will be held in the next 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which courses will be offered during the next 6 semesters ?
query: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: How many credits is 595 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 595 ;

Q: 497 is how many credits ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 497 ;

Q: 546 is worth how many credits ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 546 ;

Q: Can I ask how many credits is 557 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 557 ;

Q: For EECS 478 , how many credits is it ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 478 ;

Q: How many credits do I get for 417 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 417 ;

Q: How many credits does 522 get ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 522 ;

Q: How many credits is 216 worth ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 216 ;

Q: How many credits is EECS 438 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 438 ;

Q: How many total credits do I receive for 353 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 353 ;

Q: If I take 699 , how many credits will I receive ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 699 ;

Q: The EECS 445 class is how many credits ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 445 ;

Q: What 's the number of credits for 540 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 540 ;

Q: What number of credits do I get for 425 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 425 ;

Q: What number of credits is EECS 634 ?
query: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 634 ;

Q: What are the prerequisites for GREEKMOD 499 and 101 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 499 OR COURSE alias1 . NUMBER = 101 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " GREEKMOD " ;

Q: Do you know the prerequisites for MEDADM 807 and 515 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 807 OR COURSE alias1 . NUMBER = 515 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MEDADM " ;

Q: PATH 585 and 520 have what prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 585 OR COURSE alias1 . NUMBER = 520 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " PATH " ;

Q: HISTART 504 and 433 need which prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 504 OR COURSE alias1 . NUMBER = 433 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " HISTART " ;

Q: For BIOPHYS 280 and 115 , what are the prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 280 OR COURSE alias1 . NUMBER = 115 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " BIOPHYS " ;

Q: For NAVARCH 570 and 620 what are the prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 570 OR COURSE alias1 . NUMBER = 620 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " NAVARCH " ;

Q: Name the prerequisites for CDB 990 and 580 .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 990 OR COURSE alias1 . NUMBER = 580 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CDB " ;

Q: Regarding MILSCI 102 and 201 , what are the prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 102 OR COURSE alias1 . NUMBER = 201 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MILSCI " ;

Q: Tell me the prerequisites for BIOMEDE 530 and 241 .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 530 OR COURSE alias1 . NUMBER = 241 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " BIOMEDE " ;

Q: The prerequisites for AT 300 and 360 are what ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 300 OR COURSE alias1 . NUMBER = 360 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " AT " ;

Q: To take CEE 621 and 611 , what prerequisites are necessary ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 621 OR COURSE alias1 . NUMBER = 611 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CEE " ;

Q: What are the CJS 592 and 281 prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 592 OR COURSE alias1 . NUMBER = 281 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CJS " ;

Q: What are the mandatory classes for BUDDHST 701 and 512 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 701 OR COURSE alias1 . NUMBER = 512 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " BUDDHST " ;

Q: What are the prerequisites for CCS 700 and CCS 650 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 700 OR COURSE alias1 . NUMBER = 650 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CCS " ;

Q: What do I need before taking SEAS 698 and 798 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 698 OR COURSE alias1 . NUMBER = 798 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " SEAS " ;

Q: What is required for MCDB 680 and 489 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 680 OR COURSE alias1 . NUMBER = 489 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MCDB " ;

Q: What prerequisites do I need for EHS 616 and 615 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 616 OR COURSE alias1 . NUMBER = 615 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EHS " ;

Q: Which prerequisites are necessary for GREEKMOD 599 and 101 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 599 OR COURSE alias1 . NUMBER = 101 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " GREEKMOD " ;

Q: Which prerequisites do BIOLCHEM 673 and 995 have ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 673 OR COURSE alias1 . NUMBER = 995 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " BIOLCHEM " ;

Q: Which prerequistes are required for ORALBIOL 773 and 853 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 773 OR COURSE alias1 . NUMBER = 853 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ORALBIOL " ;

Q: When is 511 offered next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 511 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 230 is offered next semester when ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 230 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 250 is offered when in next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 250 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 595 will be offered at what times during next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 595 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For next semester , when is 406 offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 406 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In next semester when is 480 offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 480 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is 398 offered next semester and when ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 398 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester when is 430 offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 430 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 's 501 's schedule next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 501 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the schedule of 564 next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 564 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What time is 497 offered the next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 497 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What time next semester is 311 offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 311 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is 510 being given next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 510 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is 588 going to be offered next semester ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 588 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 's my current GPA ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: As of right now , what 's my GPA ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Can you report my current GPA ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Can you tell me my GPA scale ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Can you tell me what my GPA is ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Currently , what is my GPA ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: How high is my current GPA ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: How much is my current GPA ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: My GPA is how much ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: My current GPA is ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Please remind me my GPA scale , please ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Tell me my current GPA .
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Tell me what my GPA is .
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: What is my GPA at present ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: What is my grade point average ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Where is my GPA now ?
query: SELECT DISTINCT STUDENT alias0 . TOTAL_GPA FROM STUDENT AS STUDENT alias0 WHERE STUDENT alias0 . STUDENT_ID = 1 ;

Q: Is 633 offered next term ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 633 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 427 is in next term ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 427 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 419 is offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 419 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can I take the 314 course next term ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 314 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For next term , is 203 offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 203 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In next term is 463 available ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 463 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In next term is 511 offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 511 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is 496 available next term ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 496 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is the 497 course available next term ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 497 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next term 519 is offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 519 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will 282 be offered next term ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 282 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are any upper elective courses offered for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: As upper level electives which courses count ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: CS majors are offered what upper level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS , what are the upper elective courses offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS , what upper electives courses are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS , which upper elective course are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS majors , what are the upper level electives available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS majors , what upper level electives are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS majors what are the upper level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS majors what are the upper level electives offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS majors who are interested in taking upper level electives , which ones are being offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For upper level electives , which courses count ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For upper level electives which are the courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the courses that count as upper level electives .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the courses that count for upper level electives .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the upper elective courses that are offered for CS .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the upper level electives courses .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the upper level electives which are offered for CS majors .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: To count as upper level elective , what courses can I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are all of the upper elective courses available for CS students ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the offerings of upper level electives for CS majors ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the upper elective courses for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the upper elective courses offered for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the upper level elective courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the upper level electives that are offered for CS majors ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What courses count as upper level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What electives are offered for CS majors that are upper level ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What is offered for CS majors that are upper level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What is offered for upper level electives for CS majors ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper elective courses are offered for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level elective courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level electives are offered for CS majors ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level electives are offered in the CS program ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which are the upper elective courses offered for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which courses count as upper level electives ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which ones are the upper level electives that CS majors can take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper elective classes are available for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper elective courses can CS students take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can you tell me if CS offers any upper elective courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS , will there be any upper elective courses available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Does the CS curriculum include any upper elective courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For CS , are there any upper elective courses offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Does CS have upper elective courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Does CS offer any upper elective courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there any upper elective courses offered for CS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can you tell me what upper level CS elective classes are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Will Prof. David Moon teach 597 next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 597 AND INSTRUCTOR alias0 . NAME LIKE "% David Moon %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 181 is being taught by Prof. Christopher Monk next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 181 AND INSTRUCTOR alias0 . NAME LIKE "% Christopher Monk %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 445 will be taught by Prof. Jia Tolentino next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 445 AND INSTRUCTOR alias0 . NAME LIKE "% Jia Tolentino %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does Prof. Sreyoshi Das teach 546 next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 546 AND INSTRUCTOR alias0 . NAME LIKE "% Sreyoshi Das %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For 499 , next semester , will Prof. Frank Anderson be teaching the class ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 499 AND INSTRUCTOR alias0 . NAME LIKE "% Frank Anderson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For 564 next semester , is the instructor Prof. James O'shea ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 564 AND INSTRUCTOR alias0 . NAME LIKE "% James O'shea %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In next semester does Prof. Erkut Ozbay teach 445 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 445 AND INSTRUCTOR alias0 . NAME LIKE "% Erkut Ozbay %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the following semester will Prof. Yeshi Gangne be in charge to teach 557 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 557 AND INSTRUCTOR alias0 . NAME LIKE "% Yeshi Gangne %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is Prof. Petra Kuppers going to be teaching 281 next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 281 AND INSTRUCTOR alias0 . NAME LIKE "% Petra Kuppers %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is Prof. Yves Atchade the head professor for 525 next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 525 AND INSTRUCTOR alias0 . NAME LIKE "% Yves Atchade %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is the professor who is teaching 570 next semester Prof. Jesse Gregory ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 570 AND INSTRUCTOR alias0 . NAME LIKE "% Jesse Gregory %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester for 661 , will the instructor be Prof. Andrew Nagy ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 661 AND INSTRUCTOR alias0 . NAME LIKE "% Andrew Nagy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester is Prof. Lauren Benjamin teaching 453 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 453 AND INSTRUCTOR alias0 . NAME LIKE "% Lauren Benjamin %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester will Prof. John Vandermeer teach 569 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 569 AND INSTRUCTOR alias0 . NAME LIKE "% John Vandermeer %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will 351 be taught by Prof. Jonathan Brumit next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 351 AND INSTRUCTOR alias0 . NAME LIKE "% Jonathan Brumit %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes are available this Fall that would count towards a CS major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For CS majors , name the classes that are available this Winter .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For a CS major , this Spring what classes are there that count ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For a CS major , what classes are available this Winter that would count towards that ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: If someone wanted to take classes this Fall , what is available for a CS major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In Summer , name the classes that are available that count towards CS major .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Name the classes available this Winter that would count toward a CS major .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Name the classes that are available this Fall that would count toward a CS major .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the classes offered this Fall , which count towards the CS major ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the Summer classes that are available to count for CS majors ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes that count towards the CS major will be available this Spring ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What options do CS majors have for classes this Fall ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What upper level electives are available next Summer after 21:00 A.M. ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 21:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: After 12:00 A.M. , what are the upper level electives that are available next Spring-Summer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 12:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: After 15:45 A.M. , what upper level electives are available next Spring-Summer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 15:45 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: After 17:00 A.M. next Spring what upper level electives are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 17:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: For next Summer , after 11:45 A.M. , what upper level electives will be available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 11:45 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: In next Summer after 21:45 A.M. , which upper level electives are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 21:45 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Name the upper level electives that are available next Spring after 12:30 A.M. .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 12:30 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Name the upper level electives that are offered next Summer after 08:45 A.M. .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 08:45 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Spring , what upper level electives are available after 09:30 A.M. ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 09:30 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Summer after 21:00 A.M. what upper level electives are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 21:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Fall what upper level electives will be available after 15:45 A.M. ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 15:45 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Next Spring-Summer which upper level electives will be up for taking any time after 18:45 A.M. ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 18:45 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Regarding the upper level electives for next Spring-Summer , which ones will be offered after 16:00 in the morning ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 16:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Regarding upper level electives for next Winter after 12:00 A.M. , which ones will be available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 12:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Which upper level electives are available after 21:15 in the morning , next Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME > " 21:15 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Which upper level elective classes next semester do not meet on Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any upper level elective courses that do n't meet on Fridays next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there upper elective classes next semester that do not meet on Friday ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For upper level elective classes offered next semester , which ones do n't meet on Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , which upper elective classes will have Fridays off ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , which upper level elective classes are not meeting on Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , which upper level elective classes do not meet on Friday ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , which upper level elective classes only meet Monday , Tuesday , Wednesday and / or Thursday ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester are their any upper level elective classes that do not meet on Friday ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the upper level elective classes that are taking place next semester , which ones do n't meet on Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: WHich upper elective classes will not be meeting on Fridays next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the upper level options next semester that do not meet on Friday ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What upper level classes next semester will not have to meet on Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which elective classes next semester are upper level and do not meet on Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper level elective classes next semester meet on days other than Fridays ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which upper level electives do n't meet on Friday next term ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . FRIDAY = " N " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What prerequisites have I already fulfilled for CDB 582 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CDB " AND COURSE alias1 . NUMBER = 582 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: For HISTART 481 , what prerequisites have I fulfilled ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " HISTART " AND COURSE alias1 . NUMBER = 481 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: For AOSS 320 , which prerequisites have I already completed ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " AOSS " AND COURSE alias1 . NUMBER = 320 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: For UC 327 what prerequistes do I have already ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " UC " AND COURSE alias1 . NUMBER = 327 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: I have fulfilled what prerequisites for REEES 695 already ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " REEES " AND COURSE alias1 . NUMBER = 695 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: List the prerequisites I 've finished for GREEKMOD 501 .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " GREEKMOD " AND COURSE alias1 . NUMBER = 501 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the prerequisites , what have I already fulfilled for CHE 517 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CHE " AND COURSE alias1 . NUMBER = 517 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are the prerequisites that I have met for SOCADMIN 570 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " SOCADMIN " AND COURSE alias1 . NUMBER = 570 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What prerequisites for AEROSP 740 have I already fulfilled ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " AEROSP " AND COURSE alias1 . NUMBER = 740 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What requirements have I fulfilled for ACC 560 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ACC " AND COURSE alias1 . NUMBER = 560 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which prerequisites for CSP 101 have I already fulfilled ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CSP " AND COURSE alias1 . NUMBER = 101 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which prerequisites have I already completed for ASIAN 539 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ASIAN " AND COURSE alias1 . NUMBER = 539 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which prerequisites have I already fulfilled for JUDAIC 550 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " JUDAIC " AND COURSE alias1 . NUMBER = 550 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which prerequisites have I completed for FILMVID 309 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " FILMVID " AND COURSE alias1 . NUMBER = 309 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: How many professors teach AAPTIS 838 in Winter 2006 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AAPTIS " AND COURSE alias0 . NUMBER = 838 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2006 ;

Q: Are there multiple professors who teach ECON 631 in Spring-Summer 2003 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ECON " AND COURSE alias0 . NUMBER = 631 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: Do you know how many teachers taught AT 352 during the Spring-Summer of 2003 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AT " AND COURSE alias0 . NUMBER = 352 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: Do you know the number of professors who teach RCNSCI 270 in Spring-Summer 2010 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCNSCI " AND COURSE alias0 . NUMBER = 270 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2010 ;

Q: During the 2007 Spring-Summer , how many professors teach PIBS 501 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PIBS " AND COURSE alias0 . NUMBER = 501 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: During the Spring of 2019 how many professors teach LATIN 993 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LATIN " AND COURSE alias0 . NUMBER = 993 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: ENVIRON 255 courses will be taught by how many professors in Fall 2008 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENVIRON " AND COURSE alias0 . NUMBER = 255 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2008 ;

Q: MEDADM 571 in Winter 2013 , how many professors teach these ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MEDADM " AND COURSE alias0 . NUMBER = 571 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2013 ;

Q: ENVIRON 455 is taught be how many professors in the Winter of 2001 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENVIRON " AND COURSE alias0 . NUMBER = 455 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2001 ;

Q: ARTDES 210 is taught by how many professors during Spring-Summer 2017 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ARTDES " AND COURSE alias0 . NUMBER = 210 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: GTBOOKS 191 is taught by how many professors in Winter 2003 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " GTBOOKS " AND COURSE alias0 . NUMBER = 191 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: GEOG 201 will be taught by how many professors in 2001 Spring ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " GEOG " AND COURSE alias0 . NUMBER = 201 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2001 ;

Q: MODGREEK 105 will have how many professors Spring 2017 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MODGREEK " AND COURSE alias0 . NUMBER = 105 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: For Spring 2019 , how many professors teach WOMENSTD 498 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " WOMENSTD " AND COURSE alias0 . NUMBER = 498 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: How many different people taught CICS 301 in the Winter of 2020 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CICS " AND COURSE alias0 . NUMBER = 301 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2020 ;

Q: How many different professors teach LHC 561 in Spring 2015 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 561 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2015 ;

Q: How many options are there for professors of BA 554 in Summer 2016 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BA " AND COURSE alias0 . NUMBER = 554 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many professors are employed to teach SPACE 582 in Spring-Summer 2009 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SPACE " AND COURSE alias0 . NUMBER = 582 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2009 ;

Q: How many professors are teaching ACABS 591 in Winter 2005 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ACABS " AND COURSE alias0 . NUMBER = 591 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2005 ;

Q: How many professors in Winter 2014 are teaching SEAS 798 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SEAS " AND COURSE alias0 . NUMBER = 798 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2014 ;

Q: How many professors teach the ECON 667 course in the Spring-Summer of 2019 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ECON " AND COURSE alias0 . NUMBER = 667 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: How many professors will be teaching ROMLANG 500 in the Spring of 2020 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ROMLANG " AND COURSE alias0 . NUMBER = 500 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2020 ;

Q: How many professors will teach FILMVID 455 during the Winter semester of 2016 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 455 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many professors will teach ENDODONT 660 in the Summer of 2003 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENDODONT " AND COURSE alias0 . NUMBER = 660 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: How many total professors during the Fall 2018 semester teach ORALPATH 693 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORALPATH " AND COURSE alias0 . NUMBER = 693 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2018 ;

Q: In 2004 Spring , EEB 801 will have how many professors teaching it ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 801 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: In Winter 2004 , how many LAW 755 professors are there ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LAW " AND COURSE alias0 . NUMBER = 755 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: In Winter 2017 , how many professors are teaching CHEMBIO 990 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CHEMBIO " AND COURSE alias0 . NUMBER = 990 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: In Spring-Summer 2011 , how many professors taught BIT 644 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIT " AND COURSE alias0 . NUMBER = 644 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2011 ;

Q: In Winter 2002 , how many professors teach MENAS 462 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MENAS " AND COURSE alias0 . NUMBER = 462 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2002 ;

Q: In Winter 2007 , how many professors will teach CONDUCT 501 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CONDUCT " AND COURSE alias0 . NUMBER = 501 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: In Spring-Summer 2001 how many professors teach LING 446 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LING " AND COURSE alias0 . NUMBER = 446 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2001 ;

Q: In Fall 2001 what number of professors will teach ORALSURG 752 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORALSURG " AND COURSE alias0 . NUMBER = 752 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2001 ;

Q: In Summer of 2009 , how many professors taught CHEMBIO 502 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CHEMBIO " AND COURSE alias0 . NUMBER = 502 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2009 ;

Q: In Spring-Summer of 2016 how many professors teach ANTHRCUL 373 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ANTHRCUL " AND COURSE alias0 . NUMBER = 373 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall 2007 semester , PUBPOL 580 is taught by how many professors ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PUBPOL " AND COURSE alias0 . NUMBER = 580 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: In the Fall of 2002 , how many professors teach ROMLANG 377 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ROMLANG " AND COURSE alias0 . NUMBER = 377 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2002 ;

Q: In the Fall of 2017 how many professors will teach MICRBIOL 995 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MICRBIOL " AND COURSE alias0 . NUMBER = 995 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: The CLIMATE 105 in Spring 2012 is taught by what number of professors ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CLIMATE " AND COURSE alias0 . NUMBER = 105 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2012 ;

Q: The Fall 2005 CMBIOL 995 classes are taught by how many professors ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CMBIOL " AND COURSE alias0 . NUMBER = 995 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2005 ;

Q: The professors teaching AUTO 512 in Spring-Summer 2007 , how many are they ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AUTO " AND COURSE alias0 . NUMBER = 512 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: Was CMBIOL 685 offered by more than 1 teacher during the Summer of 2011 , if so how many ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CMBIOL " AND COURSE alias0 . NUMBER = 685 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2011 ;

Q: What 's the number of professors teaching SEAS 502 in Summer 2005 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SEAS " AND COURSE alias0 . NUMBER = 502 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2005 ;

Q: What 's the number of professors that teach ANATOMY 613 in Spring-Summer 2019 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ANATOMY " AND COURSE alias0 . NUMBER = 613 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: What 's the number of professors who teach BIOLCHEM 551 in Winter 2012 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 551 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2012 ;

Q: What is the number of instructors who taught GEOSCI 503 during the Summer 2011 semester ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " GEOSCI " AND COURSE alias0 . NUMBER = 503 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2011 ;

Q: What is the number of professors I could choose from for SLAVIC 481 in Spring 2004 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SLAVIC " AND COURSE alias0 . NUMBER = 481 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: What is the number of professors teaching RACKHAM 571 in Winter 2020 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RACKHAM " AND COURSE alias0 . NUMBER = 571 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2020 ;

Q: What is the total number of professors for ASTRO 105 in Spring 2003 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 105 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: What number of professors teach LACS 349 in Winter 2004 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LACS " AND COURSE alias0 . NUMBER = 349 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: What number of professors will be teaching FRENCH 378 in Spring 2003 ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FRENCH " AND COURSE alias0 . NUMBER = 378 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: Who are the professors teaching PHYSED 336 in the Summer 2020 semester ?
query: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 336 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2020 ;

Q: Is there a 16 -credit upper level class in Summer 2012 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 16 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2012 ;

Q: Are any 2 -credit upper level classes offered in Winter 2007 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 2 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: Are there any 6 -credit upper level classes in Summer 2015 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 6 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2015 ;

Q: For Fall 2017 , is there a 1 -credit upper level class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 1 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: For Winter 2019 , is there an offering for a 7 -credit upper level class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 7 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: I need a 15 -credit upper level class in Spring-Summer 2003 - is there 1 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 15 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: In Winter 2019 , is there a 13 -credit upper level class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 13 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: In the Summer of 2004 , will there be a 6 -credit upper level class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 6 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: Is a 18 -credit upper level class offered in Spring 2004 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 18 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: Is there , in Summer 2002 , a 4 -credit upper level class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 4 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2002 ;

Q: Of the 17 -credit upper classes , is there 1 in Summer 2018 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 17 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2018 ;

Q: Fall 2010 , is there a 1 -credit upper level class ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 1 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2010 ;

Q: Will there be a 1 -credit upper level class for Fall 2016 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 1 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will there be a 3 -credit upper level class in Winter 2018 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 3 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2018 ;

Q: Which HMP classes can be counted as Other ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% HMP %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Among NEUROSCI classes , which are the ones that can be counted as PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% NEUROSCI %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For ULCS , which MEDADM classes can be counted ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% MEDADM %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For fulfilling the Core which EDCURINS classes are acceptable ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% EDCURINS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For the Core requirement , which ROMLING class fulfills it ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ROMLING %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: From all the LING classes , which ones are considered to be ULCS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LING %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What RCARTS classes are counted as ULCS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% RCARTS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What PERIODON classes can be counted as ULCS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% PERIODON %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the names of KINESLGY classes that are considered to be Other ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% KINESLGY %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the names of the HISTORY classes that count as PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% HISTORY %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What options do I have for my Core in ORTHO ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ORTHO %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which CSP classes are PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CSP %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which SURVMETH classes can be considered PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% SURVMETH %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which are the CCS classes that are counted as PreMajor ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CCS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which of the NEAREAST classes can be used as MDE ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% NEAREAST %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which of the GREEK classes count as Core ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% GREEK %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: How many upper-level 16 -credit NEAREAST classes are offered this Fall ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 16 AND COURSE alias0 . DEPARTMENT = " NEAREAST " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can you tell me the number of upper-level ITALIAN classes that will be offered for 11 credits this Spring ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 11 AND COURSE alias0 . DEPARTMENT = " ITALIAN " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many upper-level 15 -credit classes in ACC will there be this Spring ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 15 AND COURSE alias0 . DEPARTMENT = " ACC " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many upper-level 1 -credit courses will there be in this Spring for ELI ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 1 AND COURSE alias0 . DEPARTMENT = " ELI " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Winter semester , how many upper level UC class offerings will be 5 -credit classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 5 AND COURSE alias0 . DEPARTMENT = " UC " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Spring-Summer , how many upper-level 14 -credit SPACE classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 14 AND COURSE alias0 . DEPARTMENT = " SPACE " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Fall , how many upper-level 8 -credit ASIAN classes are offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 8 AND COURSE alias0 . DEPARTMENT = " ASIAN " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Upper-level 10 -credit INSTHUM classes , how many are offered this Summer ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 10 AND COURSE alias0 . DEPARTMENT = " INSTHUM " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the class count for upper-level 17 -credit PATH classes in the Spring course catalog ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 17 AND COURSE alias0 . DEPARTMENT = " PATH " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the number of upper-level 7 -credit UC classes that are offered this Summer ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 7 AND COURSE alias0 . DEPARTMENT = " UC " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What number of 10 -credit upper-level NEAREAST classes are being offered this Spring-Summer ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . CREDITS = 10 AND COURSE alias0 . DEPARTMENT = " NEAREAST " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Did Prof. Wayne High teach PATH 699 in Summer 2015 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 699 AND INSTRUCTOR alias0 . NAME LIKE "% Wayne High %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2015 ;

Q: Courses for Spring-Summer 2011 included Prof. Xiaoyang Li for HISTORY 773 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HISTORY " AND COURSE alias0 . NUMBER = 773 AND INSTRUCTOR alias0 . NAME LIKE "% Xiaoyang Li %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2011 ;

Q: Did Prof. David Remy in Spring-Summer 2000 teach MATSCIE 480 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 480 AND INSTRUCTOR alias0 . NAME LIKE "% David Remy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2000 ;

Q: For SPANISH 485 , did Prof. Stephen Lett teach in Winter 2016 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SPANISH " AND COURSE alias0 . NUMBER = 485 AND INSTRUCTOR alias0 . NAME LIKE "% Stephen Lett %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: I understand that Prof. Susanne Vees-gulani taught MATH 513 in the Spring 2018 semester , is that correct ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATH " AND COURSE alias0 . NUMBER = 513 AND INSTRUCTOR alias0 . NAME LIKE "% Susanne Vees-gulani %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2018 ;

Q: In Fall 2002 , did Prof. Christopher Odato teach UKRAINE 451 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " UKRAINE " AND COURSE alias0 . NUMBER = 451 AND INSTRUCTOR alias0 . NAME LIKE "% Christopher Odato %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2002 ;

Q: In Winter 2004 , was Prof. Alicia Stevers teaching TURKISH 102 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " TURKISH " AND COURSE alias0 . NUMBER = 102 AND INSTRUCTOR alias0 . NAME LIKE "% Alicia Stevers %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: Was REES 795 taught by Prof. Vanessa Gezari in Spring-Summer 2017 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " REES " AND COURSE alias0 . NUMBER = 795 AND INSTRUCTOR alias0 . NAME LIKE "% Vanessa Gezari %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: Was Prof. Hyosang Kang the person who taught NESLANG 420 in the Fall of 2019 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NESLANG " AND COURSE alias0 . NUMBER = 420 AND INSTRUCTOR alias0 . NAME LIKE "% Hyosang Kang %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2019 ;

Q: Who taught DENTED 602 in Spring-Summer 2014 , was it Prof. Henry Sodano ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DENTED " AND COURSE alias0 . NUMBER = 602 AND INSTRUCTOR alias0 . NAME LIKE "% Henry Sodano %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2014 ;

Q: Is STATS 350 a prerequisite for STATS 415 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " STATS " AND COURSE alias0 . NUMBER = 350 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " STATS " AND COURSE alias1 . NUMBER = 415 ;

Q: Before I take SEAS 502 , do I need to take SEAS 698 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " SEAS " AND COURSE alias0 . NUMBER = 698 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " SEAS " AND COURSE alias1 . NUMBER = 502 ;

Q: Do I need to take SCAND 349 before taking SCAND 103 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " SCAND " AND COURSE alias0 . NUMBER = 349 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " SCAND " AND COURSE alias1 . NUMBER = 103 ;

Q: Do I need to take EMBA 640 to take EMBA 604 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EMBA " AND COURSE alias0 . NUMBER = 640 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EMBA " AND COURSE alias1 . NUMBER = 604 ;

Q: Does LHSP 130 have 200 as a prerequisite ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " LHSP " AND COURSE alias0 . NUMBER = 200 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " LHSP " AND COURSE alias1 . NUMBER = 130 ;

Q: Does THTREMUS 370 require THTREMUS 250 as a prerequisite ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " THTREMUS " AND COURSE alias0 . NUMBER = 250 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " THTREMUS " AND COURSE alias1 . NUMBER = 370 ;

Q: For GREEK 560 , is GREEK 801 a prerequisite ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " GREEK " AND COURSE alias0 . NUMBER = 801 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " GREEK " AND COURSE alias1 . NUMBER = 560 ;

Q: For MUSPERF 591 is MUSPERF 200 is necessary ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " MUSPERF " AND COURSE alias0 . NUMBER = 200 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MUSPERF " AND COURSE alias1 . NUMBER = 591 ;

Q: For NESLANG 451 is NESLANG 499 required ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " NESLANG " AND COURSE alias0 . NUMBER = 499 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " NESLANG " AND COURSE alias1 . NUMBER = 451 ;

Q: Is NERS 518 always required before NERS 299 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 518 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " NERS " AND COURSE alias1 . NUMBER = 299 ;

Q: Is THEORY 590 needed for THEORY 438 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " THEORY " AND COURSE alias0 . NUMBER = 590 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " THEORY " AND COURSE alias1 . NUMBER = 438 ;

Q: Is WRITING 120 needed to take WRITING 340 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " WRITING " AND COURSE alias0 . NUMBER = 120 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " WRITING " AND COURSE alias1 . NUMBER = 340 ;

Q: Is MATSCIE 360 required before MATSCIE 554 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 360 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MATSCIE " AND COURSE alias1 . NUMBER = 554 ;

Q: Is RCARTS 285 required for RCARTS 289 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCARTS " AND COURSE alias0 . NUMBER = 285 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " RCARTS " AND COURSE alias1 . NUMBER = 289 ;

Q: Is DHYGRACK 685 required to take the course DHYGRACK 689 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " DHYGRACK " AND COURSE alias0 . NUMBER = 685 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " DHYGRACK " AND COURSE alias1 . NUMBER = 689 ;

Q: Is it a prerequisite for ENGR 996 to have ENGR 407 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENGR " AND COURSE alias0 . NUMBER = 407 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ENGR " AND COURSE alias1 . NUMBER = 996 ;

Q: To take HUMGEN 553 , is the prerequisite HUMGEN 632 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " HUMGEN " AND COURSE alias0 . NUMBER = 632 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " HUMGEN " AND COURSE alias1 . NUMBER = 553 ;

Q: Which classes are available this Spring ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are all classes available this Spring-Summer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall , what classes are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Winter semester , which classes are being offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For this upcoming Winter semester , what classes will be available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the classes , which are available this Summer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Summer , what classes are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Spring-Summer , which classes are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the available classes this Spring-Summer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the classes that are available this Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes can I take this Spring ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses are offered this Fall ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses will be offered this Fall ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What Spring classes are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes can be taken as ULCS next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can you name for me the classes that can be taken as MDE next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , which classes can be taken as Core ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the classes , which can be taken as Other next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the classes that can be taken as PreMajor next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What MDE classes are offered next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes are allowed for ULCS next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes are available to be taken as PreMajor next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes can serve as MDE next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes fulfill my Core requirement next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes will count as Other next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses can be taken for PreMajor next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which MDE classes can be taken next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes are allowed for PreMajor this coming semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes next semester can be taken as ULCS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses count for Other next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which of these classes can be taken as Other next semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many lecture sections are offered for PERSIAN 102 next semester ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERSIAN " AND COURSE alias0 . NUMBER = 102 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there many lecture sections offered for JAZZ 467 next semester ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " JAZZ " AND COURSE alias0 . NUMBER = 467 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: WOMENSTD 323 has how many lecture sections next semester ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " WOMENSTD " AND COURSE alias0 . NUMBER = 323 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For RUSSIAN 469 , how many lecture sections are offered next semester ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RUSSIAN " AND COURSE alias0 . NUMBER = 469 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the next semester , how many lecture sections are offered for HHCR 700 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HHCR " AND COURSE alias0 . NUMBER = 700 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many lecture sections are available for EARTH 148 next semester ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EARTH " AND COURSE alias0 . NUMBER = 148 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , are there a lot of lecture sections being offered for NRE 557 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NRE " AND COURSE alias0 . NUMBER = 557 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , how many lecture sections are offered for PSYCH 464 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PSYCH " AND COURSE alias0 . NUMBER = 464 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , how many lecture sections of AOSS 584 are offered ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 584 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What number of MODGREEK 318 lecture sections are offered next semester ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MODGREEK " AND COURSE alias0 . NUMBER = 318 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What number of lecture sections will there be next semester for FILMVID 340 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 340 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will HUMGEN 821 have more than 1 lecture section next semester , and if so , how many ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HUMGEN " AND COURSE alias0 . NUMBER = 821 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes has Dr. Stephen Miller taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Stephen Miller %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Are there any classes Dr. Stefan Cieply has taught before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Stefan Cieply %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you list all of the classes that Dr. Moira Gresham has taught to date ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Moira Gresham %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you list the classes that Dr. Ashley David has taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ashley David %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you state what classes Dr. Thore Bergman taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Thore Bergman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you tell me what classes Dr. Keith Christensen has taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Keith Christensen %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Could you tell me what classes Dr. Ashley Bisutti has taught before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ashley Bisutti %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Did Dr. Judith Levy teach any other classes before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Judith Levy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do you know what classes Dr. Hye-yoon Chung taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Hye-yoon Chung %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Do you know which class Dr. Yoshihiro Mochizuki has taught previously ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Yoshihiro Mochizuki %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Dr. Galina Grom , what classes has he taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Galina Grom %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Dr. Sebastian Diaz has taught what classes in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sebastian Diaz %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Dr. Yu-jui Huang has taught which classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Yu-jui Huang %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Dr. Matthew Jacobs has taught which classes in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Matthew Jacobs %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Dr. Kenneth Garner taught which classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kenneth Garner %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Dr. Christopher Love taught which classes in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Christopher Love %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: For what classes Dr. Nathan Buchanan has been the teacher before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nathan Buchanan %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: In the past , Dr. James Grotberg taught what classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% James Grotberg %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: In the past , what classes has Dr. Emily Peterson taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Emily Peterson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: In the past , which classes has Dr. Kathleen Baker taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kathleen Baker %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: In the past what classes has Dr. Jasmine Zheng taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jasmine Zheng %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: In the past what courses has Dr. Stephanie Goetz taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Stephanie Goetz %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Name all of the classes Dr. Amy Schrank has previously taught .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Amy Schrank %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Of all the classes Dr. Anne Murphy has taught in the past what were the subjects ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Anne Murphy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Prof. Jonathan Freedman has taught which courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jonathan Freedman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What are all the classes Dr. Jason Meyers has taught previously ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jason Meyers %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What are the classes that Dr. Patrick Seitzer has taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Patrick Seitzer %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What are the classes that Dr. Jonathan Marwil taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jonathan Marwil %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What are the past classes Dr. Nathanial Vaughn has taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nathanial Vaughn %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What classes does Dr. Michael Sawdy have experience teaching ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Michael Sawdy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What classes from the past has Dr. Silvana Papagerakis taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Silvana Papagerakis %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What classes has Dr. Steven Heeringa taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Steven Heeringa %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What classes have been taught by Dr. Yona Stamatis in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Yona Stamatis %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What classes have previously been taught by Dr. Elizabeth Hildinger ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Elizabeth Hildinger %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What courses has Dr. William Clark lectured in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% William Clark %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What courses has Dr. Nicole Koropatkin taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nicole Koropatkin %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What has Dr. Brian Zikmund-fisher taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Brian Zikmund-fisher %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What has Dr. Kerri Burchill taught before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kerri Burchill %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What has Dr. India Plough taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% India Plough %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What has Dr. Eugene Anderson taught previously ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Eugene Anderson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What other classes has Dr. Andrew Campbell taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Andrew Campbell %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What past classes has Dr. Nicole Appleberry taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nicole Appleberry %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes are educated by Dr. Linda Mokdad ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Linda Mokdad %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes are handled by Dr. Tanya Logan ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Tanya Logan %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes did Dr. Franke Varca teach in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Franke Varca %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes has Dr. Muthukrishnan Krishnamurthy historically taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Muthukrishnan Krishnamurthy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes has Dr. Kt Tomey taught before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kt Tomey %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes has Dr. Robert Rossana taught in the past ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Robert Rossana %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes has Dr. Frederick Conrad taught previously ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Frederick Conrad %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes were previously taught by Dr. Christopher Alderman ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Christopher Alderman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which classes were taught by Dr. John Ellis ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% John Ellis %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which courses did Dr. Rosa Angulo-barroso teach before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Rosa Angulo-barroso %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which courses has Dr. Walter Everett taught before ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Walter Everett %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which past classes has Dr. Allison Brooks taught ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Allison Brooks %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can BIOPHYS 619 be taken as MDE ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOPHYS " AND COURSE alias0 . NUMBER = 619 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can DESCI 501 be MDE class ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " DESCI " AND COURSE alias0 . NUMBER = 501 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can ARABIC 201 count as Other ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ARABIC " AND COURSE alias0 . NUMBER = 201 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can I take EHS 642 as MDE ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EHS " AND COURSE alias0 . NUMBER = 642 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can I take ENVIRON 102 for PreMajor ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ENVIRON " AND COURSE alias0 . NUMBER = 102 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can my MDE class be MACROMOL 790 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MACROMOL " AND COURSE alias0 . NUMBER = 790 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Could I take DESCI 990 for PreMajor ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " DESCI " AND COURSE alias0 . NUMBER = 990 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Could I take class HHCR 710 as Core ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " HHCR " AND COURSE alias0 . NUMBER = 710 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For Core , can you take DESCI 995 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " DESCI " AND COURSE alias0 . NUMBER = 995 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is RCNSCI 270 Core ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCNSCI " AND COURSE alias0 . NUMBER = 270 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is ARTDES 454 an option for Core ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ARTDES " AND COURSE alias0 . NUMBER = 454 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is NAVARCH 514 available as PreMajor ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NAVARCH " AND COURSE alias0 . NUMBER = 514 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is RCIDIV 224 good as Other ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCIDIV " AND COURSE alias0 . NUMBER = 224 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is LATINOAM 405 listed as Other ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LATINOAM " AND COURSE alias0 . NUMBER = 405 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is 1 of the MDE classes that I can take ROMLING 414 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ROMLING " AND COURSE alias0 . NUMBER = 414 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Would it be possible to take ENGLISH 351 as MDE ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ENGLISH " AND COURSE alias0 . NUMBER = 351 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What upper level classes do not require 546 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 546 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level classes is 550 not mandatory for ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 550 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes do n't have 545 as a prerequisite ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 545 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes do n't require 521 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 521 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes can I take without having 511 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 511 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Out of all the upper level classes , which ones don 't require 538 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 538 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: I haven 't taken 373 , which upper classes can I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 373 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: If I don 't take 579 , which upper level classes can I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 579 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes don 't need 381 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 381 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level classes don 't have 586 as a prerequisite ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 586 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes do not have 792 as a prerequisite ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 792 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which high level courses can I take without having taken 516 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 516 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level classes can I take even though I haven 't taken 461 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 461 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes do not require 519 as a prerequisite ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 519 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes do not require 496 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 496 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes don 't require 353 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 353 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Among upper level classes , which do not require 662 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 662 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes aren 't going to require 556 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 556 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: In which semester will 183 be offered next ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 183 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: 282 can be taken when ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 282 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: 554 is available when ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 554 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: 599 is offered when ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 599 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: 575 offered when ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 575 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Can I take 792 when ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 792 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Do you know when 501 is offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 501 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: EECS 560 is offered when next time ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 560 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: EECS 429 offered when next ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 429 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Next time when EECS 181 will be offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 181 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When 's the next time EECS 564 will be offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 564 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When can I take 421 ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 421 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When can I take EECS 574 ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 574 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is 628 available to take ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 628 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is 580 going to be offered again ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 580 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is 800 going to be offered next ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 800 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is 497 offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 497 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is EECS 101 being offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 101 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is the next time EECS 520 is offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 520 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When is the next time EECS 502 will be offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 502 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will EECS 582 be offered ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 582 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will EECS 632 be offered again ?
query: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 632 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: Is INTLSTD 301 more difficult than INTLSTD 205 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " INTLSTD " AND COURSE alias0 . NUMBER = 301 AND COURSE alias1 . DEPARTMENT = " INTLSTD " AND COURSE alias1 . NUMBER = 205 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Compared to HJCS 572 , is HJCS 591 more tough ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " HJCS " AND COURSE alias0 . NUMBER = 591 AND COURSE alias1 . DEPARTMENT = " HJCS " AND COURSE alias1 . NUMBER = 572 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Do you find that PSYCH 405 is more of a challenge than PSYCH 619 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " PSYCH " AND COURSE alias0 . NUMBER = 405 AND COURSE alias1 . DEPARTMENT = " PSYCH " AND COURSE alias1 . NUMBER = 619 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: For SURVMETH 641 , is SURVMETH 697 more difficult ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " SURVMETH " AND COURSE alias0 . NUMBER = 697 AND COURSE alias1 . DEPARTMENT = " SURVMETH " AND COURSE alias1 . NUMBER = 641 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Is RACKHAM 571 easier than RACKHAM 575 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " RACKHAM " AND COURSE alias0 . NUMBER = 575 AND COURSE alias1 . DEPARTMENT = " RACKHAM " AND COURSE alias1 . NUMBER = 571 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Is SCAND 351 a lot harder than SCAND 325 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " SCAND " AND COURSE alias0 . NUMBER = 351 AND COURSE alias1 . DEPARTMENT = " SCAND " AND COURSE alias1 . NUMBER = 325 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Is DANCE 131 harder than DANCE 695 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 131 AND COURSE alias1 . DEPARTMENT = " DANCE " AND COURSE alias1 . NUMBER = 695 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Is the AAPTIS 419 class considered more difficult than AAPTIS 153 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " AAPTIS " AND COURSE alias0 . NUMBER = 419 AND COURSE alias1 . DEPARTMENT = " AAPTIS " AND COURSE alias1 . NUMBER = 153 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: When comparing to ARTDES 182 , is ARTDES 181 more difficult ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " ARTDES " AND COURSE alias0 . NUMBER = 181 AND COURSE alias1 . DEPARTMENT = " ARTDES " AND COURSE alias1 . NUMBER = 182 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Would SAC 480 be easier than SAC 600 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " SAC " AND COURSE alias0 . NUMBER = 600 AND COURSE alias1 . DEPARTMENT = " SAC " AND COURSE alias1 . NUMBER = 480 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Would you say ACC 565 is harder to pass than ACC 471 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " ACC " AND COURSE alias0 . NUMBER = 565 AND COURSE alias1 . DEPARTMENT = " ACC " AND COURSE alias1 . NUMBER = 471 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Would you say that SPANISH 287 is more difficult that SPANISH 859 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE COURSE alias0 . DEPARTMENT = " SPANISH " AND COURSE alias0 . NUMBER = 287 AND COURSE alias1 . DEPARTMENT = " SPANISH " AND COURSE alias1 . NUMBER = 859 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD < PROGRAM_COURSE alias1 . WORKLOAD AND PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID ;

Q: Which course is harder between 480 and 541 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 480 OR COURSE alias0 . NUMBER = 541 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Among the courses 699 and 515 , which 1 is more difficult ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 699 OR COURSE alias0 . NUMBER = 515 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Between 429 and 311 , which course is harder ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 429 OR COURSE alias0 . NUMBER = 311 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Between 522 and 527 , which course is more difficult ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 522 OR COURSE alias0 . NUMBER = 527 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Given 452 and 473 , which course is harder ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 452 OR COURSE alias0 . NUMBER = 473 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Is course 573 or 215 harder ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 573 OR COURSE alias0 . NUMBER = 215 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Is course 504 or 531 more difficult ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 504 OR COURSE alias0 . NUMBER = 531 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Is course 492 or course 181 harder ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 492 OR COURSE alias0 . NUMBER = 181 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Which class is tougher among 498 and 552 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 498 OR COURSE alias0 . NUMBER = 552 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Which course among 402 and 370 is harder ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 402 OR COURSE alias0 . NUMBER = 370 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Which course do you think is more difficult , course 445 or course 699 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 445 OR COURSE alias0 . NUMBER = 699 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Which course has a higher workload - 579 or 411 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 579 OR COURSE alias0 . NUMBER = 411 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: Which course is tougher 632 or 532 ?
query: SELECT DISTINCT COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias0 . NUMBER = 632 OR COURSE alias0 . NUMBER = 532 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ORDER BY PROGRAM_COURSE alias0 . WORKLOAD DESC LIMIT 1 ;

Q: How many times has Prof. Xiuli Chao taught 920 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 920 AND INSTRUCTOR alias0 . NAME LIKE "% Xiuli Chao %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Class 746 has been taught by Prof. Beth Wilensky how many times ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 746 AND INSTRUCTOR alias0 . NAME LIKE "% Beth Wilensky %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Course 322 has been taught by Prof. Zuzana Srostlik how many times ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 322 AND INSTRUCTOR alias0 . NAME LIKE "% Zuzana Srostlik %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: For 542 , how many times has Prof. Pelham Barron taught ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 542 AND INSTRUCTOR alias0 . NAME LIKE "% Pelham Barron %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: For 435 , how many times has Prof. Fara Warner taught it ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 435 AND INSTRUCTOR alias0 . NAME LIKE "% Fara Warner %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has 154 been taught by Prof. Kristin Vaneyk many times ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 154 AND INSTRUCTOR alias0 . NAME LIKE "% Kristin Vaneyk %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Has Prof. Eric Calderwood taught 725 many times ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 725 AND INSTRUCTOR alias0 . NAME LIKE "% Eric Calderwood %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: How many classes has Prof. Alan Gosman taken for 421 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 421 AND INSTRUCTOR alias0 . NAME LIKE "% Alan Gosman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: How many semesters has Prof. Kartik Prasanna taught 724 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 724 AND INSTRUCTOR alias0 . NAME LIKE "% Kartik Prasanna %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: How many times has class 224 been taught by Prof. Amy Pienta ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 224 AND INSTRUCTOR alias0 . NAME LIKE "% Amy Pienta %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: How many times must Prof. Herbert Winful have taught 499 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 499 AND INSTRUCTOR alias0 . NAME LIKE "% Herbert Winful %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Prof. Arus Harutyunyan has taught 753 how many times ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 753 AND INSTRUCTOR alias0 . NAME LIKE "% Arus Harutyunyan %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What is the exact number of times that Prof. Joel Fish has taught course 141 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 141 AND INSTRUCTOR alias0 . NAME LIKE "% Joel Fish %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What is the number of times that Prof. Thomas Buchmueller has taught 386 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 386 AND INSTRUCTOR alias0 . NAME LIKE "% Thomas Buchmueller %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What number of times has Prof. Christopher Savage taught 328 ?
query: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 328 AND INSTRUCTOR alias0 . NAME LIKE "% Christopher Savage %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Is MUSICOL 566 offered every semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MUSICOL " AND COURSE alias0 . NUMBER = 566 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Can I take NERS 673 any semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 673 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Do you always offer FILMVID 604 every semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 604 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Do you offer NAVSCI 101 every semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NAVSCI " AND COURSE alias0 . NUMBER = 101 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: SPANISH 278 is offered every semester , correct ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SPANISH " AND COURSE alias0 . NUMBER = 278 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Every semester , will CAAS 601 be offered ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CAAS " AND COURSE alias0 . NUMBER = 601 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: For every semester , is DHYGRACK 682 offered ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DHYGRACK " AND COURSE alias0 . NUMBER = 682 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: For every semester is NEUROSCI 685 offered ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NEUROSCI " AND COURSE alias0 . NUMBER = 685 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: In every semester , can you take ENDODONT 651 ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENDODONT " AND COURSE alias0 . NUMBER = 651 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Is JAZZ 501 always offered ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " JAZZ " AND COURSE alias0 . NUMBER = 501 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Is SOCADMIN 995 available to take every semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SOCADMIN " AND COURSE alias0 . NUMBER = 995 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Is ORALBIOL 678 taught each semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORALBIOL " AND COURSE alias0 . NUMBER = 678 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Will PIBS 507 be advertised every semester ? .
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PIBS " AND COURSE alias0 . NUMBER = 507 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Will SM 217 be offered every semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SM " AND COURSE alias0 . NUMBER = 217 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Will I be able to take BIOSTAT 855 any semester ?
query: SELECT COUNT ( * ) > 0 FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER NOT IN ( SELECT DISTINCT SEMESTER alias1 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias1 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOSTAT " AND COURSE alias0 . NUMBER = 855 AND SEMESTER alias1 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ) ;

Q: Of all the MATSCIE 400 classes which ones are in the morning .
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 400 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the morning times for the RELIGION 465 course ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RELIGION " AND COURSE alias0 . NUMBER = 465 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What morning classes does HONORS 241 have ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HONORS " AND COURSE alias0 . NUMBER = 241 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When does RESTORA 883 meet in the mornings ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RESTORA " AND COURSE alias0 . NUMBER = 883 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which morning classes are for RCCORE 410 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCCORE " AND COURSE alias0 . NUMBER = 410 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which morning classes does PERSIAN 404 have ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERSIAN " AND COURSE alias0 . NUMBER = 404 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: The morning GEOSCI 550 course is at what time ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " GEOSCI " AND COURSE alias0 . NUMBER = 550 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When are the A.M. time slots for PHYSED 482 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 482 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is the CAAS 216 morning course ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CAAS " AND COURSE alias0 . NUMBER = 216 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When in the morning is the LAW 438 course ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LAW " AND COURSE alias0 . NUMBER = 438 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the AMCULT 485 course what are the morning times ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AMCULT " AND COURSE alias0 . NUMBER = 485 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: CAAS 438 is offered at what morning times ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CAAS " AND COURSE alias0 . NUMBER = 438 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the COMM 311 course , what are the morning times ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " COMM " AND COURSE alias0 . NUMBER = 311 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What time in the morning is the AAS 215 course ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AAS " AND COURSE alias0 . NUMBER = 215 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What times before noon is EDUC 565 offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EDUC " AND COURSE alias0 . NUMBER = 565 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: The course MEMS 381 takes place at what times in the morning ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MEMS " AND COURSE alias0 . NUMBER = 381 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What mornings does INTLSTD 489 meet ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " INTLSTD " AND COURSE alias0 . NUMBER = 489 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the morning , what times are there for the FRENCH 490 course ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FRENCH " AND COURSE alias0 . NUMBER = 490 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there times in the morning for the AOSS 521 course ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 521 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: At what times in the morning is the course WOMENSTD 698 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . START_TIME , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " WOMENSTD " AND COURSE alias0 . NUMBER = 698 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is BIOPHYS 495 being offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOPHYS " AND COURSE alias0 . NUMBER = 495 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can I take BUDDHST 501 next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BUDDHST " AND COURSE alias0 . NUMBER = 501 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do you know if SPANISH 299 is being offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SPANISH " AND COURSE alias0 . NUMBER = 299 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: SPACE 574 is being offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SPACE " AND COURSE alias0 . NUMBER = 574 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: DUTCH 351 will be offered next semester , wo n't it ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DUTCH " AND COURSE alias0 . NUMBER = 351 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: IS LING 997 a course offered during the next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LING " AND COURSE alias0 . NUMBER = 997 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: IS ORTHO 763 available next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORTHO " AND COURSE alias0 . NUMBER = 763 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In next semester , is BE 502 being offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BE " AND COURSE alias0 . NUMBER = 502 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is the ROMLING 450 course available in next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ROMLING " AND COURSE alias0 . NUMBER = 450 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , is ARABAM 311 available ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ARABAM " AND COURSE alias0 . NUMBER = 311 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , is SAC 306 being offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SAC " AND COURSE alias0 . NUMBER = 306 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , is ORALBIOL 853 course being offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORALBIOL " AND COURSE alias0 . NUMBER = 853 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , will STDABRD 368 be available ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 368 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will ACABS 470 be offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ACABS " AND COURSE alias0 . NUMBER = 470 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will NATIVEAM 389 be taught next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NATIVEAM " AND COURSE alias0 . NUMBER = 389 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will REEES 490 being offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " REEES " AND COURSE alias0 . NUMBER = 490 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will next semester 's offerings include DENT 753 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DENT " AND COURSE alias0 . NUMBER = 753 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will the course BIOMEDE 481 be offered next semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 481 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is ANTHRCUL 375 only offered in the Fall ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ANTHRCUL " AND COURSE alias0 . NUMBER = 375 AND SEMESTER alias0 . SEMESTER <> " Fall " ;

Q: Do you only offer the class POLISH 832 in the Winter semester ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " POLISH " AND COURSE alias0 . NUMBER = 832 AND SEMESTER alias0 . SEMESTER <> " Winter " ;

Q: Does PHARMSCI 570 get taught in the Winter only ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHARMSCI " AND COURSE alias0 . NUMBER = 570 AND SEMESTER alias0 . SEMESTER <> " Winter " ;

Q: BUDDHST 351 is only offered in the Fall , correct ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BUDDHST " AND COURSE alias0 . NUMBER = 351 AND SEMESTER alias0 . SEMESTER <> " Fall " ;

Q: Is MATSCIE 662 not offered in any semester other than the Fall ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 662 AND SEMESTER alias0 . SEMESTER <> " Fall " ;

Q: Is CMBIOL 682 taught only in the Summer ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CMBIOL " AND COURSE alias0 . NUMBER = 682 AND SEMESTER alias0 . SEMESTER <> " Summer " ;

Q: Is Winter the only time DENT 532 is offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " DENT " AND COURSE alias0 . NUMBER = 532 AND SEMESTER alias0 . SEMESTER <> " Winter " ;

Q: Is it true that CAAS 216 is only available in the Fall ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CAAS " AND COURSE alias0 . NUMBER = 216 AND SEMESTER alias0 . SEMESTER <> " Fall " ;

Q: Is the Spring-Summer the only time that INTMED 460 is offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " INTMED " AND COURSE alias0 . NUMBER = 460 AND SEMESTER alias0 . SEMESTER <> " Spring-Summer " ;

Q: Is the only time HISTORY 195 is offered , the Summer ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " HISTORY " AND COURSE alias0 . NUMBER = 195 AND SEMESTER alias0 . SEMESTER <> " Summer " ;

Q: The Spring is the only time NAVARCH 552 will be offered ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " NAVARCH " AND COURSE alias0 . NUMBER = 552 AND SEMESTER alias0 . SEMESTER <> " Spring " ;

Q: Which courses will Prof. Alexander Weinstein be teaching over the next year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Alexander Weinstein %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Do you have a list of the courses Prof. Michael Duff will be teaching next year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Michael Duff %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Next year , do you know which courses Prof. Bufford Ang will be teaching ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Bufford Ang %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Next year , which courses will Prof. Andrew Jones be teaching ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Andrew Jones %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Over the next year , what classes will Prof. Vikramaditya Khanna be teaching ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Vikramaditya Khanna %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Over the next year , what classes will Prof. Jing Xia teach ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jing Xia %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Over the next year , which courses is Prof. Rachel Rinaldo teaching ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Rachel Rinaldo %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Prof. Catherine Morse will be teaching which courses over the next year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Catherine Morse %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What are the names of Prof. James Lee taught classes this year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% James Lee %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What classes will Prof. Martin Murray be teaching this year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Martin Murray %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What classes will have Prof. Oleg Tsodikov instructing over the next year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Oleg Tsodikov %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What will Prof. Lindsey Lepley be teaching next year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Lindsey Lepley %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which classes will Prof. George Bornstein instruct this coming year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% George Bornstein %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which courses has Prof. Eduardo Matos-martin been assigned to teach for the coming year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Eduardo Matos-martin %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which courses is Prof. Julia Adler-milstein scheduled to teach over the next year ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Julia Adler-milstein %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which courses next year are taught by Prof. Macalester Bell ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Macalester Bell %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Who teaches ORGSTUDY 201 this Summer ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ORGSTUDY " AND COURSE alias0 . NUMBER = 201 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: FRENCH 656 is going to be taught by what professor this Spring-Summer ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " FRENCH " AND COURSE alias0 . NUMBER = 656 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: NATIVEAM 333 will be taught by which instructor this Fall ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " NATIVEAM " AND COURSE alias0 . NUMBER = 333 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For RCSSCI 330 , who is teaching it this Spring ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " RCSSCI " AND COURSE alias0 . NUMBER = 330 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For this Spring-Summer , who is going to teach ORALBIOL 990 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ORALBIOL " AND COURSE alias0 . NUMBER = 990 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Spring , who teaches CDB 683 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CDB " AND COURSE alias0 . NUMBER = 683 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Spring-Summer , ENGR 996 with be taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ENGR " AND COURSE alias0 . NUMBER = 996 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Winter , who is teaching EDCURINS 431 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EDCURINS " AND COURSE alias0 . NUMBER = 431 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Spring , who will teach BUDDHST 799 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BUDDHST " AND COURSE alias0 . NUMBER = 799 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who 's this Spring 's CZECH 142 teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CZECH " AND COURSE alias0 . NUMBER = 142 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who is teaching MICRBIOL 320 in the Spring ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MICRBIOL " AND COURSE alias0 . NUMBER = 320 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who is the teacher of ENDODONT 661 this Summer ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ENDODONT " AND COURSE alias0 . NUMBER = 661 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who will be teaching PHYSIOL 599 in Summer ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHYSIOL " AND COURSE alias0 . NUMBER = 599 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who will be teaching PUBPOL 312 this Fall ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PUBPOL " AND COURSE alias0 . NUMBER = 312 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who will teach PSYCH 348 this Fall ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PSYCH " AND COURSE alias0 . NUMBER = 348 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who would be the teacher this Spring-Summer for FILMVID 302 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 302 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who has taught CHEMBIO 995 most recently ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " CHEMBIO " AND COURSE alias0 . NUMBER = 995 ;

Q: DENTED 607 was taught by who most recently ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " DENTED " AND COURSE alias0 . NUMBER = 607 ;

Q: For NESLANG 435 , who was the most recent teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " NESLANG " AND COURSE alias0 . NUMBER = 435 ;

Q: In regards to RUSSIAN 859 , who taught it most recently ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " RUSSIAN " AND COURSE alias0 . NUMBER = 859 ;

Q: Most recently , who has taught SCAND 104 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " SCAND " AND COURSE alias0 . NUMBER = 104 ;

Q: Most recently , who taught NAVARCH 583 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " NAVARCH " AND COURSE alias0 . NUMBER = 583 ;

Q: Which professor taught RESTORA 880 most recently ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " RESTORA " AND COURSE alias0 . NUMBER = 880 ;

Q: Who , most recently , taught EARTH 159 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EARTH " AND COURSE alias0 . NUMBER = 159 ;

Q: Who is the most recent person that has taught BIOMATLS 577 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " BIOMATLS " AND COURSE alias0 . NUMBER = 577 ;

Q: Who was the most recent RCLANG 193 teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " RCLANG " AND COURSE alias0 . NUMBER = 193 ;

Q: Who was the most recent instructor for MEDCHEM 617 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " MEDCHEM " AND COURSE alias0 . NUMBER = 617 ;

Q: Who was the most recent instructor to teach CEE 651 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " CEE " AND COURSE alias0 . NUMBER = 651 ;

Q: Who has taught APPPHYS 550 in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " APPPHYS " AND COURSE alias0 . NUMBER = 550 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: FILMVID 490 has been taught by who in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 490 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: MICRBIOL 642 has been taught by whom in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MICRBIOL " AND COURSE alias0 . NUMBER = 642 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: In reference to EPID 813 , who has taught it in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EPID " AND COURSE alias0 . NUMBER = 813 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: In the past , who has taught SOC 463 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SOC " AND COURSE alias0 . NUMBER = 463 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: In the past , who taught WOMENSTD 300 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " WOMENSTD " AND COURSE alias0 . NUMBER = 300 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Tell me who taught ANTHRBIO 369 in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ANTHRBIO " AND COURSE alias0 . NUMBER = 369 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who are the people that have taught STDABRD 381 in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 381 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who has taught STATS 711 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " STATS " AND COURSE alias0 . NUMBER = 711 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who have been the past instructors for BIOMEDE 401 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 401 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who in the past has taught ARTDES 223 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ARTDES " AND COURSE alias0 . NUMBER = 223 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who was GEOG 795 taught by in the past ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " GEOG " AND COURSE alias0 . NUMBER = 795 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who was the past teacher for CMBIOL 685 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CMBIOL " AND COURSE alias0 . NUMBER = 685 AND NOT ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) ;

Q: Who teaches upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: For the upper-level classes , who is teaching them ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: In reference to upper-level classes , who would be teaching ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: In regardless to upper-level classes , who teaches them ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Upper-level classes are taught by what professors ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Upper-level classes will be taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: What professors teach upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Which people teach upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Which professor will be teaching upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who are the instructors for upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who are the teachers of upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who are the upper-level class teachers ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who are the upper-level classes taught by ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who are upper-level classes taught by ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who will teach upper-level classes ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Who were the GSIs for STATS 520 last semester ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " STATS " AND COURSE alias0 . NUMBER = 520 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Can you identify the GSIs from last semester for DENTED 605 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " DENTED " AND COURSE alias0 . NUMBER = 605 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Can you tell me who the GSIs were for last semester 's SEAS 698 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SEAS " AND COURSE alias0 . NUMBER = 698 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: During the last semester , who were the GSIs for MO 605 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MO " AND COURSE alias0 . NUMBER = 605 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: During the last semester in MODGREEK 302 , who were the GSIs ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MODGREEK " AND COURSE alias0 . NUMBER = 302 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: DENTHYG 220 had who for GSIs last semester ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " DENTHYG " AND COURSE alias0 . NUMBER = 220 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: For AAS 211 , who were the GSIs last semester ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " AAS " AND COURSE alias0 . NUMBER = 211 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: For GEOG 472 last semester , who were the GSIs ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " GEOG " AND COURSE alias0 . NUMBER = 472 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: For last semester 's ORGSTUDY 215 class , who were the GSIs ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ORGSTUDY " AND COURSE alias0 . NUMBER = 215 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Last semester , the GSIs for MUSED 490 were who ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MUSED " AND COURSE alias0 . NUMBER = 490 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Last semester , who were the GSIs for CHE 344 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CHE " AND COURSE alias0 . NUMBER = 344 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Last semester in CZECH 242 , who were the GSIs ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CZECH " AND COURSE alias0 . NUMBER = 242 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Last semester who were the GSIs for CONDUCT 801 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CONDUCT " AND COURSE alias0 . NUMBER = 801 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: Last year , who were the GSI 's for ASTRO 210 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 210 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: The GSIs for last semester 's COMP 601 were who ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " COMP " AND COURSE alias0 . NUMBER = 601 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: What are the names of the GSIs for last semester 's DANCE 229 ?
query: SELECT DISTINCT STUDENT alias0 . FIRSTNAME , STUDENT alias0 . LASTNAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 229 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2015 ;

Q: How many upper-level classes are 14 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 14 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: 8 -credit upper-level classes number how many ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 8 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: 3 credits are awarded for how many classes at the upper level ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 3 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: For 14 credits , how many upper-level classes are there ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 14 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many 9 -credit , upper-level classes are there ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 9 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many 3 -credit classes are in the upper level ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 3 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many 10 -credit classes are upper-level classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 10 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many 17 -credit upper-level classes are there ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 17 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many classes are upper-level and also 16 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 16 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many classes of the upper level are 1 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 1 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many of the 9 -credit classes are upper level ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 9 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: How many upper-level classes are 5 -credit hours ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 15 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Of the upper level classes what number are 14 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 14 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Of the upper-level classes , how many are 14 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 14 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What is the number of upper-level classes that are 6 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 6 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What is the quantity of upper-level classes that are 9 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 9 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What is the total no . of upper-level classes that are 1 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 1 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What number of upper-level classes are worth 17 credits ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = 17 AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: Does FILMVID 360 have class on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 360 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are Fridays a day where ENVIRON 116 is being taught ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ENVIRON " AND COURSE alias0 . NUMBER = 116 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there Friday classes for SM 470 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SM " AND COURSE alias0 . NUMBER = 470 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do the classes on Friday include CLCIV 326 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CLCIV " AND COURSE alias0 . NUMBER = 326 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is ENGR 996 having class on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ENGR " AND COURSE alias0 . NUMBER = 996 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is ROMLING 993 scheduled for any class on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ROMLING " AND COURSE alias0 . NUMBER = 993 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is Friday a class day for DANCE 496 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 496 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there BA 517 class on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BA " AND COURSE alias0 . NUMBER = 517 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a DUTCH 512 class on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " DUTCH " AND COURSE alias0 . NUMBER = 512 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there class for AEROSP 481 on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " AEROSP " AND COURSE alias0 . NUMBER = 481 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: On Friday , does CDB 582 have a class ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CDB " AND COURSE alias0 . NUMBER = 582 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: On Friday , does AUTO 503 have class ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " AUTO " AND COURSE alias0 . NUMBER = 503 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: On Friday , is there a MECHENG 501 class ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MECHENG " AND COURSE alias0 . NUMBER = 501 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: On Friday , is there class for SAC 305 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SAC " AND COURSE alias0 . NUMBER = 305 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: On Friday does REES 395 have class ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " REES " AND COURSE alias0 . NUMBER = 395 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Regarding the ANTHRARC 487 class , is there 1 on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ANTHRARC " AND COURSE alias0 . NUMBER = 487 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will MEDEDUC 599 be having class on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MEDEDUC " AND COURSE alias0 . NUMBER = 599 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will OMS 995 classes take place on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " OMS " AND COURSE alias0 . NUMBER = 995 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will an PATH 586 class be offered on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 586 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will there be a class for LATINOAM 601 on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " LATINOAM " AND COURSE alias0 . NUMBER = 601 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will there be any PATH 581 classes on Friday ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 581 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When Prof. Anne Greenberg teaches 663 are there classes on Friday ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 663 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Anne Greenberg %" ;

Q: Are there Friday classes for Prof. Liliana Borcea 's 828 class ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 828 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Liliana Borcea %" ;

Q: Are there Friday classes for Prof. Ian Fulcher 's 464 course ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 464 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Ian Fulcher %" ;

Q: Are there Friday classes when Prof. Joseph Gennaro teaches 751 ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 751 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Joseph Gennaro %" ;

Q: Are there classes on Friday for 941 with Prof. Midhat Farooq ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 941 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Midhat Farooq %" ;

Q: Are there classes on Friday for when Prof. Leon Gmeindl teaches 829 ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 829 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Leon Gmeindl %" ;

Q: Are there classes on Friday in 344 when Prof. Mercedez Dunn teaches ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 344 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Mercedez Dunn %" ;

Q: Are there classes on Friday when Prof. Wencan He teaches 569 ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 569 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Wencan He %" ;

Q: Does 203 have classes on Friday when Prof. Korey Sewell teaches it ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 203 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Korey Sewell %" ;

Q: Does Prof. Justin Schon teach 503 classes on Fridays ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 503 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Justin Schon %" ;

Q: For course 169 with Prof. James Blanton , is the class held Fridays ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 169 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% James Blanton %" ;

Q: On Friday , are there classes when Prof. Tom Blackwell teaches 402 ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 402 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Tom Blackwell %" ;

Q: When Prof. Soyoun Kim teaches 232 , will there be classes on Friday ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 232 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Soyoun Kim %" ;

Q: When Elaine Gazda is the instructor for 165 , does the class meet Fridays ?
query: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE alias0 . NUMBER = 165 AND COURSE_OFFERING alias0 . FRIDAY = " N " AND INSTRUCTOR alias0 . NAME LIKE "% Elaine Gazda %" ;

Q: Does 521 always have a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 521 ;

Q: 281 , does it have a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 281 ;

Q: 311 class has a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 311 ;

Q: 594 has a lab , does it ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 594 ;

Q: 498 has a lab , right ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 498 ;

Q: 588 has a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 588 ;

Q: A 800 lab , does 1 exist ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 800 ;

Q: And does 584 have a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 584 ;

Q: Are there additional laboratory requirements for the 495 course ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 495 ;

Q: Are there any labs in 381 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 381 ;

Q: Do I have to take a lab for 632 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 632 ;

Q: Do you have to take a lab with 523 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 523 ;

Q: Do you know if 800 has a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 800 ;

Q: Does 482 contain a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 482 ;

Q: Does 558 have a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 558 ;

Q: Does 800 have a lab as well ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 800 ;

Q: Does 566 include a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 566 ;

Q: Does 487 include any lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 487 ;

Q: Does 467 include lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 467 ;

Q: Does a 620 lab exist ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 620 ;

Q: Does the class 571 have lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 571 ;

Q: For 420 , is there a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 420 ;

Q: If I take 503 do I also have to complete a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 503 ;

Q: In 285 , does it have a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 285 ;

Q: In 549 , is there a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 549 ;

Q: In 560 is there a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 560 ;

Q: Is 420 among classes with lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 420 ;

Q: Is a lab included in 579 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 579 ;

Q: Is a lab required for 545 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 545 ;

Q: Is lab also included in 451 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 451 ;

Q: Is there a 250 lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 250 ;

Q: Is there a lab associated with the 502 -level course ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 502 ;

Q: Is there a lab component for 520 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 520 ;

Q: Is there a lab for 527 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 527 ;

Q: Is there a lab for the 458 class ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 458 ;

Q: Is there a lab in 525 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 525 ;

Q: Is there a lab involved in 353 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 353 ;

Q: Is there a lab portion for 398 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 398 ;

Q: Is there a lab required for the 518 course ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 518 ;

Q: Is there a lab requirement for 525 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 525 ;

Q: Is there a lab that accompanies 661 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 661 ;

Q: Is there a lab which belongs to 475 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 475 ;

Q: Is there a lab with 493 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 493 ;

Q: Is there any lab for 533 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 533 ;

Q: Is there lab for 543 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 543 ;

Q: What labs are associated with 594 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 594 ;

Q: Will 334 have a lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 334 ;

Q: Would there be a 285 lab ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = 285 ;

Q: Did Prof. Christopher Monk set an exam for 620 last time she taught it ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 620 AND INSTRUCTOR alias1 . NAME LIKE "% Christopher Monk %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 620 AND INSTRUCTOR alias0 . NAME LIKE "% Christopher Monk %" ;

Q: Did Prof. Janet Kinney make an examination for 634 last time she taught it ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 634 AND INSTRUCTOR alias1 . NAME LIKE "% Janet Kinney %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 634 AND INSTRUCTOR alias0 . NAME LIKE "% Janet Kinney %" ;

Q: For the last time she taught 497 , was an exam set by Prof. David Schoem ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 497 AND INSTRUCTOR alias1 . NAME LIKE "% David Schoem %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 497 AND INSTRUCTOR alias0 . NAME LIKE "% David Schoem %" ;

Q: In 539 is there an exam set up by Prof. Charles Peters ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 539 AND INSTRUCTOR alias1 . NAME LIKE "% Charles Peters %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 539 AND INSTRUCTOR alias0 . NAME LIKE "% Charles Peters %" ;

Q: Last time 414 was taught by Prof. Hossein Hashemi , did she set an exam ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 414 AND INSTRUCTOR alias1 . NAME LIKE "% Hossein Hashemi %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 414 AND INSTRUCTOR alias0 . NAME LIKE "% Hossein Hashemi %" ;

Q: Last time Prof. Kathleen Tipler taught 531 did she set an exam ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 531 AND INSTRUCTOR alias1 . NAME LIKE "% Kathleen Tipler %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 531 AND INSTRUCTOR alias0 . NAME LIKE "% Kathleen Tipler %" ;

Q: Last time she taught it , did Prof. Mijin Yoon set an exam for 181 ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 181 AND INSTRUCTOR alias1 . NAME LIKE "% Mijin Yoon %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 181 AND INSTRUCTOR alias0 . NAME LIKE "% Mijin Yoon %" ;

Q: Was an exam set for 280 by Prof. Umulisa Saidi last time she taught it ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 280 AND INSTRUCTOR alias1 . NAME LIKE "% Umulisa Saidi %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 280 AND INSTRUCTOR alias0 . NAME LIKE "% Umulisa Saidi %" ;

Q: Was an exam set for 562 the last time Prof. Alphonse Burdi taught the class ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 562 AND INSTRUCTOR alias1 . NAME LIKE "% Alphonse Burdi %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 562 AND INSTRUCTOR alias0 . NAME LIKE "% Alphonse Burdi %" ;

Q: Was there an exam for 443 the last time Prof. Barbra Meek taught it ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 443 AND INSTRUCTOR alias1 . NAME LIKE "% Barbra Meek %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 443 AND INSTRUCTOR alias0 . NAME LIKE "% Barbra Meek %" ;

Q: When she last taught 549 , did Prof. Tomoki Ohsawa set an exam ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERING alias0 INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . OFFERING_ID = COURSE_OFFERING alias1 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias1 ON OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID = INSTRUCTOR alias1 . INSTRUCTOR_ID WHERE COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 549 AND INSTRUCTOR alias1 . NAME LIKE "% Tomoki Ohsawa %" AND SEMESTER alias0 . YEAR < 2016 ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 549 AND INSTRUCTOR alias0 . NAME LIKE "% Tomoki Ohsawa %" ;

Q: At what times will Lean Manufacturing and Services be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Lean Manufacturing and Services %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In which hours will World Literatures in English be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% World Literatures in English %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Physiology Masters Research Project will be offered at what times ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Physiology Masters Research Project %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Regarding Marine Dynamics , what times will it be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Marine Dynamics %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the schedule for the Structure of Russian class to be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Structure of Russian %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What times will Community Development be offered at ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Community Development %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When can I take Applied Russian ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Applied Russian %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is Research Topics being offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Research Topics %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will Intensive Latin be offered ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Intensive Latin %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will they be offering Latin American Society and Culture ?
query: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Latin American Society and Culture %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Among the least difficult MDE courses , which has the largest class size ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " MDE " ) ) ) ;

Q: The largest class size belongs to which of the easier Core courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " Core " ) ) ) ;

Q: Which least difficult ULCS course has the largest class size ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " ULCS " ) ) ) ;

Q: Which class size is largest out of the least difficult Core courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " Core " ) ) ) ;

Q: For the least difficult Core classes , which 1 has the most students ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " Core " ) ) ) ;

Q: Which MDE course has the most attending that 's least hard ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " MDE " ) ) ) ;

Q: Which class has the largest size that is also 1 of the least difficult ULCS courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " ULCS " ) ) ) ;

Q: What is the least difficult ULCS course with the largest class size ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " ULCS " ) ) ) ;

Q: Which 1 of the easiest ULCS courses has the biggest class size ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " ULCS " ) ) ) ;

Q: Which of the least difficult PreMajor courses has the largest class size ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ) AND COURSE alias0 . NUM_ENROLLED = ( SELECT MAX ( COURSE alias1 . NUM_ENROLLED ) FROM COURSE AS COURSE alias1 WHERE COURSE alias1 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias2 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias2 WHERE PROGRAM_COURSE alias2 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias3 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias3 WHERE PROGRAM_COURSE alias3 . CATEGORY = " PreMajor " ) ) ) ;

Q: What is the average difficulty of PreMajor classes ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" ;

Q: For Other classes , what is the average difficulty ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" ;

Q: What is the difficulty based on averages of the ULCS classes ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: The average difficulty for Other class is ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" ;

Q: How hard is an average Core class ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" ;

Q: What is the mean difficulty of the classes that are PreMajor ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" ;

Q: On average , how hard are PreMajor courses ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" ;

Q: How difficult on average are MDE classes ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" ;

Q: How difficult on average are the PreMajor classes ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" ;

Q: On average , how difficult are the Other classes ?
query: SELECT AVG ( PROGRAM_COURSE alias0 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" ;

Q: Who teaches the easiest MDE course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: The easiest of all of the Core courses is taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which teacher teaches the easiest Core course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Which person teaches the easiest course in regards to ULCS ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% ULCS %" ) ;

Q: Who is the easiest MDE course taught by ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Easiest PreMajor course is taught by who ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: What teacher instructs the easiest MDE course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: What teacher has the easiest course for PreMajor ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: For the Core course , who is the easiest teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Core %" ) ;

Q: Whose course is it that happens to be the easiest PreMajor course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: The easiest MDE course is taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: PreMajor courses - who teaches the easiest ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% PreMajor %" ) ;

Q: For Other , who teaches the easiest course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% Other %" ) ;

Q: The course for MDE that is the easiest has who as a teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME , PROGRAM_COURSE alias0 . WORKLOAD FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% MDE %" ) ;

Q: Who teaches courses that fulfill a Core program requirement ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Core %" ;

Q: Which teachers offer courses that fulfill a Other program requirement ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Other %" ;

Q: Who instructs courses that satisfy a ULCS program necessity ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% ULCS %" ;

Q: Who are the teachers for the courses that fulfill the Core program requirement ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Core %" ;

Q: What teachers have courses that fulfill a Other program requirement ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Other %" ;

Q: The courses that fulfill Other program requirements are taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Other %" ;

Q: For the MDE program requirement , who teaches courses that fulfill it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% MDE %" ;

Q: To fulfill a Core program requirement , who teaches the courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Core %" ;

Q: Who is the teacher that teaches a course fulfilling a PreMajor program requirement ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% PreMajor %" ;

Q: Who exactly teaches courses that would satisfy my Core program requirement ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Core %" ;

Q: What is the name of the teacher who teaches a PreMajor program requirement fulfilling course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% PreMajor %" ;

Q: Core program requirements are taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE PROGRAM alias0 . NAME LIKE "% Core %" ;

Q: Who has taught a course in which a student minoring in EECS has gotten an B ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% B %" OR STUDENT_RECORD alias0 . GRADE LIKE "% B %" ) AND STUDENT alias0 . MINOR = " EECS " ;

Q: Has anyone taught an course where a A+ was given to a student minoring in ENGLISH ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% A+ %" OR STUDENT_RECORD alias0 . GRADE LIKE "% A+ %" ) AND STUDENT alias0 . MINOR = " ENGLISH " ;

Q: What is the name of the person who taught a class in which a student with an THTREMUS minor has received a C ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% C %" OR STUDENT_RECORD alias0 . GRADE LIKE "% C %" ) AND STUDENT alias0 . MINOR = " THTREMUS " ;

Q: Who is the teacher that gave a student a C while minoring in RELIGION ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% C %" OR STUDENT_RECORD alias0 . GRADE LIKE "% C %" ) AND STUDENT alias0 . MINOR = " RELIGION " ;

Q: Whose course were students minoring in STRATEGY in when they got B- 's ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% B- %" OR STUDENT_RECORD alias0 . GRADE LIKE "% B- %" ) AND STUDENT alias0 . MINOR = " STRATEGY " ;

Q: For a course in which a student minoring in CMPLXSYS has gotten a C+ , which professor has taught it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% C+ %" OR STUDENT_RECORD alias0 . GRADE LIKE "% C+ %" ) AND STUDENT alias0 . MINOR = " CMPLXSYS " ;

Q: Has a student minoring in EHS gotten a A- in a class you are teaching ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% A- %" OR STUDENT_RECORD alias0 . GRADE LIKE "% A- %" ) AND STUDENT alias0 . MINOR = " EHS " ;

Q: Are there any professors who have given a B to a student minoring in RCSSCI ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% B %" OR STUDENT_RECORD alias0 . GRADE LIKE "% B %" ) AND STUDENT alias0 . MINOR = " RCSSCI " ;

Q: For minoring students in ACABS , which professor taught a course where students received a B- ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% B- %" OR STUDENT_RECORD alias0 . GRADE LIKE "% B- %" ) AND STUDENT alias0 . MINOR = " ACABS " ;

Q: Which professors have given PSYCH minors a B- in their class ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% B- %" OR STUDENT_RECORD alias0 . GRADE LIKE "% B- %" ) AND STUDENT alias0 . MINOR = " PSYCH " ;

Q: Which teachers have taught a class in which an NRE minor has received a B+ ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID WHERE ( STUDENT_RECORD alias0 . GRADE LIKE "% B+ %" OR STUDENT_RECORD alias0 . GRADE LIKE "% B+ %" ) AND STUDENT alias0 . MINOR = " NRE " ;

Q: Who taught LHC 309 when Manuel Craig took it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 309 AND STUDENT alias0 . FIRSTNAME LIKE " Manuel " AND STUDENT alias0 . LASTNAME LIKE " Craig " ;

Q: Who was Michelle Ford 's teacher for PHYSICS 414 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PHYSICS " AND COURSE alias0 . NUMBER = 414 AND STUDENT alias0 . FIRSTNAME LIKE " Michelle " AND STUDENT alias0 . LASTNAME LIKE " Ford " ;

Q: When Annette Le took HEBREW 568 , who taught it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " HEBREW " AND COURSE alias0 . NUMBER = 568 AND STUDENT alias0 . FIRSTNAME LIKE " Annette " AND STUDENT alias0 . LASTNAME LIKE " Le " ;

Q: Who was the teacher of Michele Owen in ASIANPAM 548 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ASIANPAM " AND COURSE alias0 . NUMBER = 548 AND STUDENT alias0 . FIRSTNAME LIKE " Michele " AND STUDENT alias0 . LASTNAME LIKE " Owen " ;

Q: When Tina Stewart took WOMENSTD 511 who taught it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " WOMENSTD " AND COURSE alias0 . NUMBER = 511 AND STUDENT alias0 . FIRSTNAME LIKE " Tina " AND STUDENT alias0 . LASTNAME LIKE " Stewart " ;

Q: During the time Mike Carrillo took the course THTREMUS 501 , who is the instructor ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " THTREMUS " AND COURSE alias0 . NUMBER = 501 AND STUDENT alias0 . FIRSTNAME LIKE " Mike " AND STUDENT alias0 . LASTNAME LIKE " Carrillo " ;

Q: Ben Craig took EARTH 586 , taught by which professor ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EARTH " AND COURSE alias0 . NUMBER = 586 AND STUDENT alias0 . FIRSTNAME LIKE " Ben " AND STUDENT alias0 . LASTNAME LIKE " Craig " ;

Q: Who taught Margie Ruiz in HISTORY 543 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " HISTORY " AND COURSE alias0 . NUMBER = 543 AND STUDENT alias0 . FIRSTNAME LIKE " Margie " AND STUDENT alias0 . LASTNAME LIKE " Ruiz " ;

Q: What teacher taught Pamela Campbell when he took PAT 513 ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PAT " AND COURSE alias0 . NUMBER = 513 AND STUDENT alias0 . FIRSTNAME LIKE " Pamela " AND STUDENT alias0 . LASTNAME LIKE " Campbell " ;

Q: Ralph Mcguire took THEORY 698 , do you know who taught that class ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " THEORY " AND COURSE alias0 . NUMBER = 698 AND STUDENT alias0 . FIRSTNAME LIKE " Ralph " AND STUDENT alias0 . LASTNAME LIKE " Mcguire " ;

Q: When Tina Meyer took MATSCIE 270 , who taught that class ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 270 AND STUDENT alias0 . FIRSTNAME LIKE " Tina " AND STUDENT alias0 . LASTNAME LIKE " Meyer " ;

Q: When Connie Shaw took GREEK 695 , who was the teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " GREEK " AND COURSE alias0 . NUMBER = 695 AND STUDENT alias0 . FIRSTNAME LIKE " Connie " AND STUDENT alias0 . LASTNAME LIKE " Shaw " ;

Q: When Sharon Walters took EARTH 183 , who was his teacher ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EARTH " AND COURSE alias0 . NUMBER = 183 AND STUDENT alias0 . FIRSTNAME LIKE " Sharon " AND STUDENT alias0 . LASTNAME LIKE " Walters " ;

Q: When Rose Wheeler was taking the HISTORY 473 class , who was teaching it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " HISTORY " AND COURSE alias0 . NUMBER = 473 AND STUDENT alias0 . FIRSTNAME LIKE " Rose " AND STUDENT alias0 . LASTNAME LIKE " Wheeler " ;

Q: When Manuel Simon took ASIANLAN 551 , who taught the class ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ASIANLAN " AND COURSE alias0 . NUMBER = 551 AND STUDENT alias0 . FIRSTNAME LIKE " Manuel " AND STUDENT alias0 . LASTNAME LIKE " Simon " ;

Q: What are the prereqs for the course where Sidney Soto is the GSI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Sidney " AND STUDENT alias0 . LASTNAME LIKE " Soto " ;

Q: For the course where Francisco Macias is the GSI , are there prereqs ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Francisco " AND STUDENT alias0 . LASTNAME LIKE " Macias " ;

Q: For the class where Valerie Flowers is the GSI , which prerequisites are there ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Valerie " AND STUDENT alias0 . LASTNAME LIKE " Flowers " ;

Q: As far as pre-requisites , what are they for the class with Bobbie Holland as the GSI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Bobbie " AND STUDENT alias0 . LASTNAME LIKE " Holland " ;

Q: I want to sign up for Chris Buchanan 's class , so what are the prereqs for it ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Chris " AND STUDENT alias0 . LASTNAME LIKE " Buchanan " ;

Q: Pertaining to the pre-requisites , what are they exactly in the class that has Pauline Mccoy for GSI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Pauline " AND STUDENT alias0 . LASTNAME LIKE " Mccoy " ;

Q: What prereqs are there for the course where Pearl Kelly is the GSI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Pearl " AND STUDENT alias0 . LASTNAME LIKE " Kelly " ;

Q: What are the prerequisites for GSI Randall Payne 's course ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Randall " AND STUDENT alias0 . LASTNAME LIKE " Payne " ;

Q: For the course where Richard Dean is the GSI , what are the prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Richard " AND STUDENT alias0 . LASTNAME LIKE " Dean " ;

Q: What are the prereqs for Chester Castaneda 's course where he is the GSI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Chester " AND STUDENT alias0 . LASTNAME LIKE " Castaneda " ;

Q: What can I expect as prereqs for the course where Tim Howell is the GSI ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Tim " AND STUDENT alias0 . LASTNAME LIKE " Howell " ;

Q: In Ruby Hodges 's class where he is the GSI , what are the prerequisites needed ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS GSI alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " Ruby " AND STUDENT alias0 . LASTNAME LIKE " Hodges " ;

Q: What computing infrastructure courses are offered in Spring or Summer 2012 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2012 ;

Q: Tell me what theory courses are available , for Spring or Summer 2006 .
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% theory %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2006 ;

Q: What human computer interaction courses are there in Spring or Summer 2003 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2003 ;

Q: As far as hardware courses are concerned , are they offered for Spring or Summer 2014 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2014 ;

Q: What classes in software are being offered in Spring or Summer 2001 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% software %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2001 ;

Q: In Spring or Summer 2008 which hardware courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2008 ;

Q: In Spring or Summer 2011 , what are the course offerings for computing infrastructure ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2011 ;

Q: In Spring or Summer 2003 what hardware courses will be available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2003 ;

Q: In Spring or Summer of 2004 what courses on hardware are on offer ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2004 ;

Q: Would you tell me what computing infrastructure classes will be offered for Spring or Summer 2014 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2014 ;

Q: What is on offer in the way of hardware courses for Spring and Summer of 2019 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2019 ;

Q: This Spring or Summer 2012 what are the available human computer interaction classes that are open ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2012 ;

Q: In Spring or Summer 2004 , what courses are offered for human computer interaction ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2004 ;

Q: Which courses are offered in the Spring or Summer of 2007 that are in the hardware curriculum ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2007 ;

Q: What are the offerings for intelligent systems courses in Spring or Summer 2001 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2001 ;

Q: For either Spring or Summer 2016 term , what hardware classes will be meeting ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: For Spring or Summer 2019 , hardware courses are available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2019 ;

Q: Who teaches web technology courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% web technology %" ;

Q: As for human computer interaction courses , who will be teaching ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" ;

Q: Who instructs computing infrastructure courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" ;

Q: For the courses in computing infrastructure who are the teachers ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" ;

Q: What professor teaches computing infrastructure courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" ;

Q: Do you have a list of teachers for the human computer interaction courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" ;

Q: Who is responsible for teaching intelligent systems courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% intelligent systems %" ;

Q: Who will be teaching computing infrastructure courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" ;

Q: Who are the instructors for the hardware courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% hardware %" ;

Q: The software courses are taught by whom ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% software %" ;

Q: Who 's teaching computing infrastructure courses ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" ;

Q: Can you tell me who the teachers are for the courses in theory ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% theory %" ;

Q: Who is teaching the hardware course ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% hardware %" ;

Q: Who are the human computer interaction courses taught by ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" ;

Q: For the theory courses , who is it that teaches it ?
query: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% theory %" ;

Q: What prerequisites for 282 are theory courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% theory %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 282 ;

Q: What human computer interaction classes are prerequisites for 312 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 312 ;

Q: Which human computer interaction courses are prerequisites for 312 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 312 ;

Q: What intelligent systems courses are prerequisites for 590 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 590 ;

Q: Does 628 have any software course prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% software %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 628 ;

Q: For 453 prerequisites , which are human computer interaction courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 453 ;

Q: For 561 , which software courses are prerequisites ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% software %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 561 ;

Q: What intelligent systems classes are required prior to taking 463 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 463 ;

Q: For 550 , what among the prerequisites are computational science courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computational science %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 550 ;

Q: What software course prerequisites does 413 have ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% software %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 413 ;

Q: Are any of the courses I 've taken PreMajor courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: The classes that I took before did any of them consist of Core classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Were there PreMajor courses among the courses I 've taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are any of my last classes ULCS classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What course have I taken that are MDE courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are there any ULCS courses in the courses I 've taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Do any of my classes constitute PreMajor courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Out of the courses I 've had , are any MDE courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Were any of my previous courses ULCS courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I taken any ULCS courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are any of the classes I 've taken MDE classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of all the courses I 've taken , are any of them ULCS ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the courses I 've taken , are any Core courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I taken any Other courses among my courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are any of the courses I 've taken computing infrastructure courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Among the courses I 've taken , were any concerned with hardware ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% hardware %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are the classes that I took considered software classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% software %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I completed any hardware courses yet ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% hardware %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I taken any web technology courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% web technology %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Is computing infrastructure the basis of any of my previous courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Among the courses I 've taken , are any of them computing infrastructure courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are there any software courses amongst the ones that I 've already done ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% software %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the courses I 've taken , are any web technology courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% web technology %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Do any of my courses relate to human computer interaction ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are any of my past courses considered intelligent systems courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I taken any human computer interaction classes ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What courses that I 've taken are computing infrastructure courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: In what area have I gotten the most B+ 's ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " B+ " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " B+ " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: In which subject area have I been given the most A+ 's ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " A+ " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " A+ " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: In which subject area have I earned the most C+ 's ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " C+ " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " C+ " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: Which area is the 1 where I 've earned the most C+ 's ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " C+ " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " C+ " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: What area have I received the most C+ 's in ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " C+ " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " C+ " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: What area do I get B 's in the most ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " B " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " B " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: In which subject area have most of my C 's been earned ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " C " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " C " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: In which area have I earned the most B+ 's ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " B+ " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " B+ " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: Which area did I score the most C- 's in ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " C- " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " C- " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: In which area have most of my C 's been earned ?
query: SELECT DISTINCT DERIVED_TABLE alias0 . DERIVED_FIELD alias1 FROM ( SELECT AREA alias0 . AREA AS DERIVED_FIELD alias0 , COUNT ( * ) AS DERIVED_FIELD alias1 FROM AREA AS AREA alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE STUDENT_RECORD alias0 . GRADE LIKE " C " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 GROUP BY AREA alias0 . AREA ) AS DERIVED_TABLE alias0 WHERE DERIVED_TABLE alias0 . DERIVED_FIELD alias1 = ( SELECT COUNT ( * ) AS DERIVED_FIELD alias2 FROM AREA AS AREA alias1 , STUDENT_RECORD AS STUDENT_RECORD alias1 WHERE STUDENT_RECORD alias1 . COURSE_ID = AREA alias1 . COURSE_ID AND STUDENT_RECORD alias1 . GRADE LIKE " C " AND STUDENT_RECORD alias1 . STUDENT_ID = 1 GROUP BY AREA alias1 . AREA ORDER BY DERIVED_FIELD alias2 DESC LIMIT 1 ) ;

Q: What grades have I gotten in courses taught by Prof. Heather Southard ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Heather Southard %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: For the courses taught by Prof. Alston , what did I score ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Alston %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Prof. Randall gave me what grades in the courses he taught ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Randall %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which grades did I receive in Prof. Kieras taught courses ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Kieras %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: In the courses taught by Prof. Northouse , what grades did I get ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Northouse %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are the grades I 've received in classes taught by Prof. Farmer ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Farmer %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What grades did I get in Prof. Seward 's courses ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Seward %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What grades did I get in class from Prof. Bookstein ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Bookstein %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: In courses taught by Prof. Fraker , what grades have I gotten ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Fraker %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are my score in subjects taught by Prof. Sundararaghavan ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Sundararaghavan %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What grades have I earned in courses which Professor . Cargo taught ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Cargo %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What grades have I received in courses that Prof. Papagerakis has taught ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Papagerakis %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are the grades I 've been given in classes taught by Prof. Gallagher ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Gallagher %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are my grades for the courses taught by Prof. Aronoff ?
query: SELECT DISTINCT STUDENT_RECORD alias0 . GRADE FROM STUDENT_RECORD AS STUDENT_RECORD alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE LOWER ( INSTRUCTOR alias0 . NAME ) LIKE "% Aronoff %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which department is Upper-Level Writing in ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Upper-Level Writing %" ;

Q: What department houses Physical Activity Epidemiology ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Physical Activity Epidemiology %" ;

Q: Anthropology of Religion is in which department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Anthropology of Religion %" ;

Q: What 's the name of the department with Honors Anthropology ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Honors Anthropology %" ;

Q: Which department does The Good Life Fall under ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% The Good Life %" ;

Q: Clinical Science and Practice is a part of which department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Clinical Science and Practice %" ;

Q: What department is Mathematical Biology a part of ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Mathematical Biology %" ;

Q: Can you let me know what department includes Schenkerian Theory and Analysis ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Schenkerian Theory and Analysis %" ;

Q: Which department includes Research Colloquium Design Studies ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Research Colloquium Design Studies %" ;

Q: Can you tell me in which department Partial and Differential Equations can be found ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Partial and Differential Equations %" ;

Q: What department are New Astronomy for Advanced Students a part of ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% New Astronomy for Advanced Students %" ;

Q: Under which department is Media Chinese categorized in ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Media Chinese %" ;

Q: What 's the department that has Advanced Organic Chemistry ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Advanced Organic Chemistry %" ;

Q: In which department can I find Principles and Methods of Epidemiology ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Principles and Methods of Epidemiology %" ;

Q: Are any of the courses I 've taken among the hardest courses in the YIDDISH department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " YIDDISH " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " YIDDISH " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are the JAZZ classes that I have taken amongst the most difficult ones ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " JAZZ " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " JAZZ " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Among the hardest courses in the SI department , have I taken any ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " SI " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " SI " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I taken any courses that are among the most difficult in the NERS department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " NERS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " NERS " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the courses I 've taken , are any among the hardest in the ARMENIAN department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " ARMENIAN " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " ARMENIAN " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What courses that I 've taken are among the hardest in the AAPTIS department ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " AAPTIS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " AAPTIS " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the courses that I 've taken in the LAW department , are any of them among the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " LAW " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " LAW " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: in the CHE department , are any of the courses I 've taken among the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " CHE " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " CHE " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Have I taken any of the hardest UKR courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " UKR " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " UKR " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are any of my courses considered the hardest of the RCHUMS department 's courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " RCHUMS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " RCHUMS " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the hardest courses in the STDABRD department , have I taken any ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " STDABRD " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " STDABRD " ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the courses I 've taken , which is considered the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which course is considered the hardest out of the courses I 've taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What course would be the most difficult of the courses I 've taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Comparing all of the courses I have taken what was the hardest 1 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which is the hardest course out of the courses I 've taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What is the hardest course I 've taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of the classes I 've completed , which is considered most difficult ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which of the courses I 've taken is considered the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of all the courses I have completed , which was the most difficult ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which course that I 've taken is considered the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which of the courses that I 've taken is considered the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Out of the courses I have taken , Which 1 would be considered the hardest course to take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What is the most difficult class I have taken ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What course , out of all that I 've taken , is considered to be the hardest ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MAX ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias1 ON STUDENT_RECORD alias1 . COURSE_ID = PROGRAM_COURSE alias1 . COURSE_ID WHERE STUDENT_RECORD alias1 . STUDENT_ID = 1 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Does CMPLXSYS 391 have morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CMPLXSYS " AND COURSE alias0 . NUMBER = 391 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Any morning classes for ARMENIAN 171 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ARMENIAN " AND COURSE alias0 . NUMBER = 171 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are A.M. classes available for the HJCS 491 course ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HJCS " AND COURSE alias0 . NUMBER = 491 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are ARTDES 100 classes given in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ARTDES " AND COURSE alias0 . NUMBER = 100 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are any morning classes available for ENGR 151 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ENGR " AND COURSE alias0 . NUMBER = 151 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are any of the RCIDIV 318 classes before noon ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCIDIV " AND COURSE alias0 . NUMBER = 318 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are morning classes conducted in PERSIAN 101 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERSIAN " AND COURSE alias0 . NUMBER = 101 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there AOSS 555 morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 555 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any PHYSICS 510 classes in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHYSICS " AND COURSE alias0 . NUMBER = 510 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any morning CHEM 521 classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CHEM " AND COURSE alias0 . NUMBER = 521 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any morning classes for MFG 990 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MFG " AND COURSE alias0 . NUMBER = 990 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any morning classes in EHS 869 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EHS " AND COURSE alias0 . NUMBER = 869 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any morning sessions for MENAS 334 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MENAS " AND COURSE alias0 . NUMBER = 334 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there classes in the morning that are RELIGION 347 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RELIGION " AND COURSE alias0 . NUMBER = 347 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there morning class offerings for EHS 500 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EHS " AND COURSE alias0 . NUMBER = 500 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there morning classes for STDABRD 255 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 255 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there morning classes in FILMVID 455 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 455 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there morning classes of CICS 301 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CICS " AND COURSE alias0 . NUMBER = 301 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can I take the PERSIAN 201 class in the A.M. ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERSIAN " AND COURSE alias0 . NUMBER = 201 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do the morning classes include HISTART 100 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HISTART " AND COURSE alias0 . NUMBER = 100 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do we have morning classes for NERS 211 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 211 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do you know if DOC 848 has morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DOC " AND COURSE alias0 . NUMBER = 848 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does PHARMACY 694 have classes in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHARMACY " AND COURSE alias0 . NUMBER = 694 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does BIOLCHEM 530 have classes in the mornings ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 530 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does ES 623 have morning courses ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ES " AND COURSE alias0 . NUMBER = 623 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does GREEKMOD 201 meet in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " GREEKMOD " AND COURSE alias0 . NUMBER = 201 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does FIN 329 offer morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " FIN " AND COURSE alias0 . NUMBER = 329 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does the course BUDDHST 512 have any morning sessions ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BUDDHST " AND COURSE alias0 . NUMBER = 512 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For ORTHO 762 , are there morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORTHO " AND COURSE alias0 . NUMBER = 762 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: I 'm trying to find out if CLCIV 499 has morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CLCIV " AND COURSE alias0 . NUMBER = 499 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the morning , are any of the classes PERIODON 785 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERIODON " AND COURSE alias0 . NUMBER = 785 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is IOE 441 available as a morning class ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " IOE " AND COURSE alias0 . NUMBER = 441 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is MATSCIE 526 having morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 526 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is CLIMATE 102 included in the morning class list ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CLIMATE " AND COURSE alias0 . NUMBER = 102 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is LACS 456 offered in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LACS " AND COURSE alias0 . NUMBER = 456 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is STDABRD 485 scheduled for morning classes ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 485 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is ASTRO 255 taught in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 255 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is a morning class available for HISTORY 348 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " HISTORY " AND COURSE alias0 . NUMBER = 348 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a morning class for CDB 450 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CDB " AND COURSE alias0 . NUMBER = 450 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there an ACC 995 class in the morning ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ACC " AND COURSE alias0 . NUMBER = 995 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of all the NAVARCH 320 classes , are there any before noon ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NAVARCH " AND COURSE alias0 . NUMBER = 320 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the classes in the morning , are there any EEB 497 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE_OFFERING alias0 . START_TIME < " 12:00:00 " AND COURSE_OFFERING alias0 . START_TIME >= " 08:00:00 " AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 497 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses offered in Fall or Winter meet the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the courses that meet the Other requirement for Fall or Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: What available course can be taken in the Fall or Winter for the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall or Winter , what courses meet the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which ULCS requirement courses are available in the Fall or Winter
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses are to be offered in the Fall or Winter that would meet the PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses meet the Core requirement that are offered in Fall or Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses are available in the Fall or Winter that will meet the Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses would fulfill the ULCS requirement in the Fall or Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Core requirement , what courses are offered in Fall or Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: For Fall and Winter courses which ones meet the ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Regarding the Other requirement , which Fall or Winter courses meet it ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: In Fall or Winter , will there be any courses that would meet the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any courses in the Fall or Winter that meet the Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Other requirement classes , are there any offered in Fall or Winter ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall or Winter what courses are they offering to meet the MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses can I take in the Fall or Winter semester to satisfy my PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any courses I can take in the Fall or Winter semester to satisfy my ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: By taking which courses in Fall or Winter , my ULCS requirement will be satisfied ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need to satisfy my ULCS requirement , so what courses can I take in Fall or Winter semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In order to fulfill my PreMajor requirement , which Fall / Winter courses can I take ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of all the courses which 1 can I take in the Fall or Winter semester to satisfy my MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: To meet the Core requirement which courses can I take in the Fall or Winter semester ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses are available for me to take in Fall or Winter to meet my MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses can I take in the Fall or Winter semester to satisfy my MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses in Fall or Winter will satisfy my Core requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses offered in the Fall or Winter semester allow me to satisfy my PreMajor requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What Fall / Winter courses can I take to fulfill my MDE requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses can I take during the Fall or Winter semester to meet my ULCS requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which Fall or Winter classes can I take in order to meet my Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which Fall or Winter courses are available to meet my Other requirement ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many 300 -level classes are being offered in Spring and Summer term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many 200 -level classes are in the Spring or Summer term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the number of 400 -level classes that are being offered for Spring and Summer term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: how many 100 -level classes , in Spring and Summer term , are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Spring and Summer term , how many 100 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In Spring and Summer how many 300 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: in Spring and Summer term , how many 300 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For 200 -level classes in the Spring and Summer term , how many are offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Spring and Summer term how many 500 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the number of 400 -level classes offered in the Spring and Summer term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Spring and Summer terms , how many 400 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In Spring and Summer term how many 200 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Spring and Summer term , what is the number of 100 -level classes offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For Spring and Summer term , how many 200 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: I am wondering how many 100 level classes are avaliable in Spring and Summer semesters ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many 300 -level classes are being offered in Fall and Winter term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many 300 -level classes are in the Fall or Winter term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter term , how many 300 -level classes are you guys offering ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the number of 200 -level courses being offered in the Fall and Winter terms ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter term , how many 200 level classes are there ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter terms , how many 500 -level classes will be offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many classes in the Fall and Winter term are 500 -level classes ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall and Winter term how many 300 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the number of 100 -level classes available in Fall and Winter term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall and Winter terms , how many 200 -level classes are being offered ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What is the number of 100 -level classes being offered in the Fall and Winter term ?
query: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can I take PATH 585 over the Spring ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 585 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall can I take SOC 370 ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " SOC " AND COURSE alias0 . NUMBER = 370 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is UC 475 available for me during Spring ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " UC " AND COURSE alias0 . NUMBER = 475 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is it possible that in the Spring-Summer I can take NERS 575 ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 575 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is it possible for me to take the CLARCH 402 over the Fall ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " CLARCH " AND COURSE alias0 . NUMBER = 402 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need to take ORTHO 568 - will it be offered in the Spring-Summer ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " ORTHO " AND COURSE alias0 . NUMBER = 568 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is MEDCHEM 533 available for me in the Spring-Summer ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " MEDCHEM " AND COURSE alias0 . NUMBER = 533 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is FILMVID 503 available for me to take over the Fall ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " FILMVID " AND COURSE alias0 . NUMBER = 503 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is AEROSP 513 available to me in the Fall ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " AEROSP " AND COURSE alias0 . NUMBER = 513 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Will I be able to take SI 638 over the Winter ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " SI " AND COURSE alias0 . NUMBER = 638 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does the Spring-Summer curriculum allow me to take MFG 582 ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " MFG " AND COURSE alias0 . NUMBER = 582 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Am I eligible for ASIAN 594 in Spring semester ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " ASIAN " AND COURSE alias0 . NUMBER = 594 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is COMPLIT 483 available to me during the Spring-Summer ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " COMPLIT " AND COURSE alias0 . NUMBER = 483 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This Winter , will STRATEGY 398 be available for me ?
query: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " STRATEGY " AND COURSE alias0 . NUMBER = 398 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What computing infrastructure courses are offered in Winter or Fall 2012 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2012 ;

Q: Which classes on intelligent systems are offered in Fall or Winter of 2003 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2003 ;

Q: What classes for computational science will be available in the Winter or Fall 2006 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computational science %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2006 ;

Q: In Winter or Fall of 2011 , what theory courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% theory %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2011 ;

Q: In the Fall or Winter of 2001 , what computational science courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computational science %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2001 ;

Q: For Winter or Fall 2014 , what courses in software are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% software %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2014 ;

Q: For Winter or Fall 2007 , What computing infrastructure courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computing infrastructure %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2007 ;

Q: For the Winter or Fall 2011 term what computational science courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computational science %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2011 ;

Q: In the Winter or Fall of 2013 , what software courses are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% software %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2013 ;

Q: In 2010 are there computational science courses offered in Winter or Fall ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% computational science %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2010 ;

Q: What are they offering in Winter or Fall 2020 for human computer interaction courses ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% human computer interaction %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2020 ;

Q: What are the software courses that are offered for Fall or Winter 2012 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% software %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2012 ;

Q: What will be offered in the way of intelligent systems in Winter or Fall 2017 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% intelligent systems %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2017 ;

Q: What courses are available for theory for Winter or Fall 2002 ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% theory %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2002 ;

Q: What are the web technology courses being offered for the 2009 Winter and Fall session ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% web technology %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2009 ;

Q: What hardware courses in the Winter or Fall of 2002 are offered ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2002 ;

Q: What are the Fall or Winter 2000 hardware courses available ?
query: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% hardware %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2000 ;

Q: During the Spring-Summer 2003 will the CHE 995 class be available ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CHE " AND COURSE alias0 . NUMBER = 995 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2003 ;

Q: For Spring 2000 , will GEOSCI 321 be available ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " GEOSCI " AND COURSE alias0 . NUMBER = 321 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2000 ;

Q: Is ASIAN 252 available during Spring 2010 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ASIAN " AND COURSE alias0 . NUMBER = 252 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2010 ;

Q: In Fall 2007 , is it possible for me to take MCDB 457 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MCDB " AND COURSE alias0 . NUMBER = 457 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2007 ;

Q: Is MATH 185 available as a Summer class in 2004 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MATH " AND COURSE alias0 . NUMBER = 185 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2004 ;

Q: Is RCLANG 191 available in Fall 2013 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCLANG " AND COURSE alias0 . NUMBER = 191 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2013 ;

Q: Is WRITING 430 available in the Fall of 2015 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " WRITING " AND COURSE alias0 . NUMBER = 430 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2015 ;

Q: Is PATH 699 available Spring 2010 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PATH " AND COURSE alias0 . NUMBER = 699 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2010 ;

Q: Is BIOPHYS 417 available to take in Spring 2013 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOPHYS " AND COURSE alias0 . NUMBER = 417 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2013 ;

Q: Is LHC 688 offered in Fall 2000 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 688 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2000 ;

Q: Is SURVMETH 618 offered in the Spring 2012 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SURVMETH " AND COURSE alias0 . NUMBER = 618 AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2012 ;

Q: Is it possible to take LHC 310 during the Summer 2017 program ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " LHC " AND COURSE alias0 . NUMBER = 310 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2017 ;

Q: What is the possibility of being able to take ACC 990 in Winter of 2014 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ACC " AND COURSE alias0 . NUMBER = 990 AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2014 ;

Q: Will PEDDENT 594 be offered in the Summer of 2002 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PEDDENT " AND COURSE alias0 . NUMBER = 594 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2002 ;

Q: Will the NURS 556 course be offered in Spring-Summer 2002 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NURS " AND COURSE alias0 . NUMBER = 556 AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2002 ;

Q: Would it be possible to take AERO 202 in Fall 2006 ?
query: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AERO " AND COURSE alias0 . NUMBER = 202 AND SEMESTER alias0 . SEMESTER = " Fall " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2006 ;

