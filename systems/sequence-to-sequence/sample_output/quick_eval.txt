Accuracy on work/advising_data/query_split/dev/dev_decode.txt is 0.0000
Overall accuracy is 0.0000

==========WRONG==========
Q: What classes next semester are available as ULCS ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Any ULCS classes available next term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ULCS " AND COURSE alias0 . NUMBER = ULCS AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Any available ULCS next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are any classes available next semester for PreMajor fulfillment ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any classes available next semester as MDE ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For PreMajor , what classes can I take next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the next semester which classes are available as ULCS ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Name the classes next semester which are available as MDE ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what ULCS courses are available ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what classes are available as PreMajor ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what classes can I take that are Core ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester which classes are available as PreMajor ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes available as MDE are there for next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes are available as Other from the classes next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes are available as PreMajor next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which of next semester 's classes can be taken as MDE ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE alias0 . DEPARTMENT , COURSE alias0 . NUMBER ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes do n't have lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: Are there any classes that do n't have lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: As far as labs go , are there any classes without them ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Do any classes not have lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: For classes , which ones do n't have labs ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: If I do n't want to have a lab session , which classes should I take ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Is there a list of classes that do n't have lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: List classes without lab sessions .
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: Of these classes , which do n't have lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: What classes do not have sessions in the lab ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = the ;

Q: What classes have no lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: What courses are not in the lab ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = the ;

Q: Which classes do n't have any labs ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which classes do not have lab components ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = components ;

Q: Which classes do not require a lab session ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% networks %" OR COURSE alias0 . NAME LIKE "% networks %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Which of the classes do n't have lab sessions ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " N " AND ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . HAS_LAB = " Y " AND COURSE alias0 . NUMBER = sessions ;

Q: Tell me more about UKR 450 .
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " UKR " AND COURSE alias0 . NUMBER = 450 ;
System: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " UKR " AND COURSE alias0 . NUMBER = 450 ;

Q: 160 THEORY is about ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " THEORY " AND COURSE alias0 . NUMBER = 160 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " THEORY " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can you tell me more about LHSP 229 ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LHSP " AND COURSE alias0 . NUMBER = 229 ;
System: SELECT DISTINCT COURSE alias0 . CREDITS FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LHSP " AND COURSE alias0 . NUMBER = 229 ;

Q: Could you tell me about NERS 583 ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 583 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NERS " COURSE alias0 . CREDITS = 583 ;

Q: MECHENG 499 is ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MECHENG " AND COURSE alias0 . NUMBER = 499 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MECHENG " AND COURSE alias0 . NUMBER = 499 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: BIOMATLS 990 is what ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOMATLS " AND COURSE alias0 . NUMBER = 990 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOMATLS " AND COURSE alias0 . NUMBER = 990 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ;

Q: Explain what NATIVEAM 405 contains .
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " NATIVEAM " AND COURSE alias0 . NUMBER = 405 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% NATIVEAM 405 %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% . %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Tell me about ANATOMY 541 .
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ANATOMY " AND COURSE alias0 . NUMBER = 541 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ANATOMY " AND COURSE alias0 . NUMBER = 541 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ;

Q: What 's RCARTS 389 about ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCARTS " AND COURSE alias0 . NUMBER = 389 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCARTS " AND COURSE alias0 . NUMBER = 389 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " ;

Q: What 's there in EDUC 401 ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EDUC " AND COURSE alias0 . NUMBER = 401 ;
System: SELECT DISTINCT COURSE alias0 . NUM_ENROLLED FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EDUC " AND COURSE alias0 . NUMBER = 401 ;

Q: What does ACABS 498 cover ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ACABS " AND COURSE alias0 . NUMBER = 498 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ACABS " COURSE alias0 . CREDITS = 498 ;

Q: What does STRATEGY 564 entail ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " STRATEGY " AND COURSE alias0 . NUMBER = 564 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " STRATEGY " AND COURSE alias0 . NUMBER = 564 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " STRATEGY " AND COURSE alias1 . NUMBER = 564 ;

Q: What is MILSCI 101 about ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 101 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 101 OR COURSE alias1 . NUMBER = 101 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MILSCI " ;

Q: What is the BIOMEDE 556 course about ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 556 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOMEDE " COURSE alias0 . CREDITS = 556 ;

Q: What is the class CICS 301 about ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CICS " AND COURSE alias0 . NUMBER = 301 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CICS " COURSE alias0 . CREDITS = 301 ;

Q: What is the topic of MEDEDUC 505 ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MEDEDUC " AND COURSE alias0 . NUMBER = 505 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE STUDENT alias0 . CATEGORY LIKE "% MEDEDUC %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What kinds of things will I learn in HEBREW 203 ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " HEBREW " AND COURSE alias0 . NUMBER = 203 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " HEBREW " AND COURSE alias0 . NUMBER = 203 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What material does SW 642 go over ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SW " AND COURSE alias0 . NUMBER = 642 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 642 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What materials are covered in ACABS 860 ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ACABS " AND COURSE alias0 . NUMBER = 860 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ACABS %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What subjects does COMM 490 cover ?
Gold: SELECT DISTINCT COURSE alias0 . DESCRIPTION , COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " COMM " AND COURSE alias0 . NUMBER = 490 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " COMM " AND COURSE alias0 . NUMBER = 490 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Are 300 -level classes offered in Spring term or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any 100 -level courses in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can 500 -level classes be taken in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Spring or Summer term are there 500 -level classes available to take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is it possible to take 100 -level classes in Spring or Summer ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 100 AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 400 -level courses offered Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Spring or Summer are 500 -level classes available ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Spring and Summer terms are 500 -level classes offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any 500 -level classes offered in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can a student take 300 -level classes Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During Spring or Summer term , are there 400 -level classes offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there 300 -level courses in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 500 -level classes are offered in the Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 500 -level classes offered in Spring or Summer ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 200 -level classes available in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: The 200 -level classes , are they available in Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do the Spring terms have the 500 -level classes , or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What other courses does Prof. Ayaka Sogabe teach besides 424 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 424 AND INSTRUCTOR alias0 . NAME LIKE "% Ayaka Sogabe %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Ayaka Sogabe %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Apart from 551 , what courses does Prof. James Crowfoot teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 551 AND INSTRUCTOR alias0 . NAME LIKE "% James Crowfoot %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% James Crowfoot %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Besides 515 , what other courses does Prof. Anne Greenberg teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 515 AND INSTRUCTOR alias0 . NAME LIKE "% Anne Greenberg %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Anne Greenberg %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Besides 492 what classes does Prof. Barry Fishman teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 492 AND INSTRUCTOR alias0 . NAME LIKE "% Barry Fishman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Barry Fishman %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Can you list the courses other than 627 that Prof. Brendan Goff teaches ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 627 AND INSTRUCTOR alias0 . NAME LIKE "% Brendan Goff %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Brendan Goff %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Does Prof. Thomas Petersen only teach 101 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 101 AND INSTRUCTOR alias0 . NAME LIKE "% Thomas Petersen %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 101 AND INSTRUCTOR alias0 . NAME LIKE "% Thomas Petersen %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does Prof. William Iii teach other courses besides 646 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 646 AND INSTRUCTOR alias0 . NAME LIKE "% William Iii %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% William Iii %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% William %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Other than 957 , what courses does Prof. Pedro Monaville teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 957 AND INSTRUCTOR alias0 . NAME LIKE "% Pedro Monaville %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Other %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Prof. Catherine Sanok teaches what other courses besides 468 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 468 AND INSTRUCTOR alias0 . NAME LIKE "% Catherine Sanok %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Catherine Sanok %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What courses , besides 524 , does Prof. Saumuy Puchala teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 524 AND INSTRUCTOR alias0 . NAME LIKE "% Saumuy Puchala %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Saumuy Puchala %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Saumuy %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What courses does Prof. Paul Shearer teach , excluding 183 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 183 AND INSTRUCTOR alias0 . NAME LIKE "% Paul Shearer %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE_OFFERING alias0 . SEMESTER < ( SELECT SEMESTER alias0 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Paul Paul %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What courses does Prof. Rachel Croskery-roberts teach besides 329 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 329 AND INSTRUCTOR alias0 . NAME LIKE "% Rachel Croskery-roberts %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Rachel Croskery-roberts %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What other courses , besides 129 , does Prof. Ruth Caston teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 129 AND INSTRUCTOR alias0 . NAME LIKE "% Ruth Caston %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER = 129 AND INSTRUCTOR alias0 . NAME LIKE "% Ruth Caston %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Which courses besides 218 are available with Prof. Jorge Martinez ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 218 AND INSTRUCTOR alias0 . NAME LIKE "% Jorge Martinez %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Jorge Martinez %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which courses does Prof. Shelly Alilunas teach in addition to 672 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NUMBER <> 672 AND INSTRUCTOR alias0 . NAME LIKE "% Shelly Alilunas %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Shelly Alilunas %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: When will Developmental Disturbances of Childhood be offered next ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Developmental Disturbances of Childhood %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Childhood AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: At what point will Practicum Kines be offered ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Practicum Kines %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Practicum Practicum %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: The Teaching Percussion Instruments course will be offered when ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Teaching Percussion Instruments %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: What is the upcoming availability for Multidisciplinary Engineering Design ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Multidisciplinary Engineering Design %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Multidisciplinary Engineering Design %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is Construction Management Information System going to be offered next ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Construction Management Information System %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Management AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is the next offering of Computational Economics ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Computational Economics %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% of Computational Economics %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When is the next time the Pharmacotherapeutics will be offered ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Pharmacotherapeutics %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Pharmacotherapeutics AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will I have the opportunity to take Business Systems Consulting again ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Business Systems Consulting %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% take Business Business %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will The Academic Paradox be offered again ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% The Academic Paradox %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Paradox AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will Early Renaiss Music next be offered ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Early Renaiss Music %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Music AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: When will the class `` Statistical Models and Numerical Human Genetics '' be offered ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Statistical Models and Numerical Human Genetics %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Human Genetics '' %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will the next `` Utilization of Nursing Advanced Practice '' class take place ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Utilization of Nursing Advanced Practice %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Nursing Advanced Practice %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will the next Worksite Wellness class be offered ?
Gold: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Worksite Wellness %" AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ;
System: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Wellness AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: What time will 516 and 795 be over as I need to leave by 5:00 P.M. each day to get to work on time .
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 516 OR COURSE alias0 . NUMBER = 795 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% 516 516 795 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need to get going to my job at 5:00 P.M. in order to get there on time ; when will 400 and 327 end for the day ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 400 OR COURSE alias0 . NUMBER = 327 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME ; COURSE_OFFERING alias0 . SUNDAY ; COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% 400 400 327 end %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = ; ;

Q: What time will 210 and 139 be over , given that I need to get to work on time each day by leaving by 5:00 P.M. ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 210 OR COURSE alias0 . NUMBER = 139 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% 5:00 210 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Since I need to leave by 5:00 P.M. each day to get to work on time , what time will 153 and 149 be over ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 153 OR COURSE alias0 . NUMBER = 149 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% will 153 and %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need to know when 145 and 630 will be as I need to get going by 5:00 P.M. if I want to be to work on time .
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 145 OR COURSE alias0 . NUMBER = 630 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% . %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: In order to be on work on time I need to leave by 5:00 P.M. , can you tell me when 596 and 851 will be over ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 596 OR COURSE alias0 . NUMBER = 851 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = P.M. AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When will 794 and 345 be over if I need to get to work on time before 5:00 P.M. .
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 794 OR COURSE alias0 . NUMBER = 345 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% . 5:00 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What time will 595 and 853 be over as I need to leave by 5:00 P.M. each day to get to work on time ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 595 OR COURSE alias0 . NUMBER = 853 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% 595 595 853 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: I have to leave by 5:00 P.M. in order to arrive at work on time , what time will 464 and 384 finish up ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 464 OR COURSE alias0 . NUMBER = 384 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% 464 464 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need to leave by 5:00 P.M. every day so what time will 205 and 344 end ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 205 OR COURSE alias0 . NUMBER = 344 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% and 205 344 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Since I need to leave by 5:00 P.M. to be on time for work every day , can I ask what time 362 and 779 are over ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 362 OR COURSE alias0 . NUMBER = 779 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% 362 362 and %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: If I need to leave at 5:00 P.M. , can you tell me when 877 and 729 end ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 877 OR COURSE alias0 . NUMBER = 729 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Since I have to leave by 5:00 P.M. to get to work on time every day , what time will 416 and 336 be over ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND ( COURSE alias0 . NUMBER = 416 OR COURSE alias0 . NUMBER = 336 ) AND COURSE_OFFERING alias0 . END_TIME < " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% and and 336 %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Show me courses that involve parts of Senior Comparative Literature and Advanced Historical Research .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Advanced Historical Research %" OR COURSE alias0 . DESCRIPTION LIKE "% Advanced Historical Research %" OR COURSE alias0 . NAME LIKE "% Advanced Historical Research %" ) AND ( AREA alias0 . AREA LIKE "% Senior Comparative Literature %" OR COURSE alias0 . DESCRIPTION LIKE "% Senior Comparative Literature %" OR COURSE alias0 . NAME LIKE "% Senior Comparative Literature %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = Research AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are there courses that involve parts of Applied Regression Analysis and Interdisciplinary the Middle Ages .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Interdisciplinary the Middle Ages %" OR COURSE alias0 . DESCRIPTION LIKE "% Interdisciplinary the Middle Ages %" OR COURSE alias0 . NAME LIKE "% Interdisciplinary the Middle Ages %" ) AND ( AREA alias0 . AREA LIKE "% Applied Regression Analysis %" OR COURSE alias0 . DESCRIPTION LIKE "% Applied Regression Analysis %" OR COURSE alias0 . NAME LIKE "% Applied Regression Analysis %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% Applied Regression Analysis %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = Analysis ;

Q: Can you show me which courses involve parts of Modern Dance and Restoration Ecology .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Restoration Ecology %" OR COURSE alias0 . DESCRIPTION LIKE "% Restoration Ecology %" OR COURSE alias0 . NAME LIKE "% Restoration Ecology %" ) AND ( AREA alias0 . AREA LIKE "% Modern Dance %" OR COURSE alias0 . DESCRIPTION LIKE "% Modern Dance %" OR COURSE alias0 . NAME LIKE "% Modern Dance %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = Restoration AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Display courses that involve any parts of Elementary Modern Greek and Distributed Systems .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Elementary Modern Greek %" OR COURSE alias0 . DESCRIPTION LIKE "% Elementary Modern Greek %" OR COURSE alias0 . NAME LIKE "% Elementary Modern Greek %" ) AND ( AREA alias0 . AREA LIKE "% Distributed Systems %" OR COURSE alias0 . DESCRIPTION LIKE "% Distributed Systems %" OR COURSE alias0 . NAME LIKE "% Distributed Systems %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " Elementary " AND COURSE alias1 . NUMBER = Distributed AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: I want to see any courses that have something to do with Molecular Biology of Pain and Sensation and Tactical Approach to Invasion Games .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Tactical Approach to Invasion Games %" OR COURSE alias0 . DESCRIPTION LIKE "% Tactical Approach to Invasion Games %" OR COURSE alias0 . NAME LIKE "% Tactical Approach to Invasion Games %" ) AND ( AREA alias0 . AREA LIKE "% Molecular Biology of Pain and Sensation %" OR COURSE alias0 . DESCRIPTION LIKE "% Molecular Biology of Pain and Sensation %" OR COURSE alias0 . NAME LIKE "% Molecular Biology of Pain and Sensation %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " Molecular " AND COURSE alias1 . NUMBER = Biology AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: I want to see only those courses which involves part of Senior Sociology and Technical Communication for Electrical and Computer Science .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Technical Communication for Electrical and Computer Science %" OR COURSE alias0 . DESCRIPTION LIKE "% Technical Communication for Electrical and Computer Science %" OR COURSE alias0 . NAME LIKE "% Technical Communication for Electrical and Computer Science %" ) AND ( AREA alias0 . AREA LIKE "% Senior Sociology %" OR COURSE alias0 . DESCRIPTION LIKE "% Senior Sociology %" OR COURSE alias0 . NAME LIKE "% Senior Sociology %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . NAME LIKE "% Senior Sociology Computer Science %" ;

Q: Name the courses that include parts of Space-time Symmetries and the Representations and The Graphic Narrative .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% The Graphic Narrative %" OR COURSE alias0 . DESCRIPTION LIKE "% The Graphic Narrative %" OR COURSE alias0 . NAME LIKE "% The Graphic Narrative %" ) AND ( AREA alias0 . AREA LIKE "% Space-time Symmetries and the Representations %" OR COURSE alias0 . DESCRIPTION LIKE "% Space-time Symmetries and the Representations %" OR COURSE alias0 . NAME LIKE "% Space-time Symmetries and the Representations %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Graphic AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Of all the courses show me the ones that involve parts of Information Industry and Sociocultural Planning and Architecture .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Sociocultural Planning and Architecture %" OR COURSE alias0 . DESCRIPTION LIKE "% Sociocultural Planning and Architecture %" OR COURSE alias0 . NAME LIKE "% Sociocultural Planning and Architecture %" ) AND ( AREA alias0 . AREA LIKE "% Information Industry %" OR COURSE alias0 . DESCRIPTION LIKE "% Information Industry %" OR COURSE alias0 . NAME LIKE "% Information Industry %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " Sociocultural " AND COURSE alias1 . NUMBER = Industry AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Show me any courses that cover parts of Contemporary Social Southeast Asia and Utilization of Nursing Advanced Practice .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Contemporary Social Southeast Asia %" OR COURSE alias0 . DESCRIPTION LIKE "% Contemporary Social Southeast Asia %" OR COURSE alias0 . NAME LIKE "% Contemporary Social Southeast Asia %" ) AND ( AREA alias0 . AREA LIKE "% Utilization of Nursing Advanced Practice %" OR COURSE alias0 . DESCRIPTION LIKE "% Utilization of Nursing Advanced Practice %" OR COURSE alias0 . NAME LIKE "% Utilization of Nursing Advanced Practice %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% Nursing Advanced Advanced Practice %" OR COURSE alias0 . NAME LIKE "% Nursing Advanced Practice Practice %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: Show me classes that involve parts of Plant Physiological Ecology and Collat Conseq of Crim Conv .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Collat Conseq of Crim Conv %" OR COURSE alias0 . DESCRIPTION LIKE "% Collat Conseq of Crim Conv %" OR COURSE alias0 . NAME LIKE "% Collat Conseq of Crim Conv %" ) AND ( AREA alias0 . AREA LIKE "% Plant Physiological Ecology %" OR COURSE alias0 . DESCRIPTION LIKE "% Plant Physiological Ecology %" OR COURSE alias0 . NAME LIKE "% Plant Physiological Ecology %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Crim AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Show me courses that include any parts of Digital Communication Signals and Systems and Devising Theatre .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Devising Theatre %" OR COURSE alias0 . DESCRIPTION LIKE "% Devising Theatre %" OR COURSE alias0 . NAME LIKE "% Devising Theatre %" ) AND ( AREA alias0 . AREA LIKE "% Digital Communication Signals and Systems %" OR COURSE alias0 . DESCRIPTION LIKE "% Digital Communication Signals and Systems %" OR COURSE alias0 . NAME LIKE "% Digital Communication Signals and Systems %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = Communication AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Show me courses that incorporate Preliminary Exam and Viscous Flow .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Viscous Flow %" OR COURSE alias0 . DESCRIPTION LIKE "% Viscous Flow %" OR COURSE alias0 . NAME LIKE "% Viscous Flow %" ) AND ( AREA alias0 . AREA LIKE "% Preliminary Exam %" OR COURSE alias0 . DESCRIPTION LIKE "% Preliminary Exam %" OR COURSE alias0 . NAME LIKE "% Preliminary Exam %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = Exam OR COURSE alias1 . NUMBER = Flow ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " ;

Q: Show me courses which involve parts of Marine Structures and Writing Poetry .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Writing Poetry %" OR COURSE alias0 . DESCRIPTION LIKE "% Writing Poetry %" OR COURSE alias0 . NAME LIKE "% Writing Poetry %" ) AND ( AREA alias0 . AREA LIKE "% Marine Structures %" OR COURSE alias0 . DESCRIPTION LIKE "% Marine Structures %" OR COURSE alias0 . NAME LIKE "% Marine Structures %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = and OR COURSE alias1 . NUMBER = Poetry ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " Marine " ;

Q: What are the courses that involve parts of Conversation through Film and Popular Music and Lighting Design ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Lighting Design %" OR COURSE alias0 . DESCRIPTION LIKE "% Lighting Design %" OR COURSE alias0 . NAME LIKE "% Lighting Design %" ) AND ( AREA alias0 . AREA LIKE "% Conversation through Film and Popular Music %" OR COURSE alias0 . DESCRIPTION LIKE "% Conversation through Film and Popular Music %" OR COURSE alias0 . NAME LIKE "% Conversation through Film and Popular Music %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = Music OR COURSE alias1 . NUMBER = Design ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " Music " ;

Q: What classes involve Special Naval Architecture and Marine Engineering and Orthodontics Practice Management and Transitions ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Orthodontics Practice Management and Transitions %" OR COURSE alias0 . DESCRIPTION LIKE "% Orthodontics Practice Management and Transitions %" OR COURSE alias0 . NAME LIKE "% Orthodontics Practice Management and Transitions %" ) AND ( AREA alias0 . AREA LIKE "% Special Naval Architecture and Marine Engineering %" OR COURSE alias0 . DESCRIPTION LIKE "% Special Naval Architecture and Marine Engineering %" OR COURSE alias0 . NAME LIKE "% Special Naval Architecture and Marine Engineering %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% Special Orthodontics Practice Transitions %" AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = Management ;

Q: Which courses involve parts of Integ Microsys Lab and Health Care Markets and Public Policies , can you show me ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE ( AREA alias0 . AREA LIKE "% Health Care Markets and Public Policies %" OR COURSE alias0 . DESCRIPTION LIKE "% Health Care Markets and Public Policies %" OR COURSE alias0 . NAME LIKE "% Health Care Markets and Public Policies %" ) AND ( AREA alias0 . AREA LIKE "% Integ Microsys Lab %" OR COURSE alias0 . DESCRIPTION LIKE "% Integ Microsys Lab %" OR COURSE alias0 . NAME LIKE "% Integ Microsys Lab %" ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% Public %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% me %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the easiest courses ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% courses %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% the %" ) ;

Q: The easiest courses are ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% The %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% The %" ) ;

Q: What are the easiest classes ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% classes %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% easiest %" ) ;

Q: What are the simplest courses ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% simplest %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% simplest %" ) ;

Q: Which classes are easiest ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ? %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% are %" ) ;

Q: Which classes are the least difficult ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "%

Q: Which courses are easiest ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ? %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "% are %" ) ;

Q: Which courses are the least difficult ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "%

Q: Which courses are least difficult ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "%

Q: Which courses are the least difficult ?
Gold: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , PROGRAM_COURSE alias0 . WORKLOAD FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . COURSE_ID IN ( SELECT PROGRAM_COURSE alias0 . COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 WHERE PROGRAM_COURSE alias1 . CATEGORY LIKE "%

Q: What is the name of PHRMACOL 616 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " PHRMACOL " AND COURSE alias0 . NUMBER = 616 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " PHRMACOL " COURSE alias0 . CREDITS = 616 ;

Q: MILSCI 302 name is ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 302 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 302 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What 's BIOLCHEM 712 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 712 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 712 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " BIOLCHEM " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ;

Q: What class is BIOLCHEM 576 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 576 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% BIOLCHEM 576 AND COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 576 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR DESC LIMIT 1 ;

Q: What course name does LACS 483 have ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LACS " AND COURSE alias0 . NUMBER = 483 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% LACS 483 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% 483 %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What is MATSCIE 489 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 489 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 489 OR COURSE alias1 . NUMBER = 489 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . DEPARTMENT = " MATSCIE " AND COURSE alias0 . NUMBER = 489 ;

Q: What is CJS 592 really called ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CJS " AND COURSE alias0 . NUMBER = 592 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 592 OR COURSE alias1 . NUMBER = 592 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " CJS " AND COURSE alias1 . NUMBER = 592 ;

Q: What is the actual name of ELI 530 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ELI " AND COURSE alias0 . NUMBER = 530 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% ELI 530 %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% actual %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What is the course CSP 100 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CSP " AND COURSE alias0 . NUMBER = 100 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN 100 AS 100 alias0 ON 100 alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = 100 alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " CSP " AND SEMESTER alias0 . YEAR = 100 ;

Q: What is the course name for CCS 597 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CCS " AND COURSE alias0 . NUMBER = 597 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% CCS 597 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% 597 %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What is the course name of BIT 399 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIT " AND COURSE alias0 . NUMBER = 399 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " BIT " COURSE alias0 . CREDITS = 11 ;

Q: What is the full name of course MCDB 501 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MCDB " AND COURSE alias0 . NUMBER = 501 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MCDB " COURSE alias0 . CREDITS = 501 ;

Q: What is the name of the RCLANG 290 class ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCLANG " AND COURSE alias0 . NUMBER = 290 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% RCLANG %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% RCLANG %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What is the title of MATH 216 ?
Gold: SELECT DISTINCT COURSE alias0 . NAME FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MATH " AND COURSE alias0 . NUMBER = 216 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MATH " AND COURSE alias0 . NUMBER = 216 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which programs require LATIN 195 ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " LATIN " AND COURSE alias0 . NUMBER = 195 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 195 OR COURSE alias1 . NUMBER = 195 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " LATIN " AND COURSE alias1 . NUMBER = 195 ;

Q: In what programs is it necessary to take EEB 485 ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 485 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 485 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EEB " AND COURSE alias1 . NUMBER = 485 ;

Q: In which programs is RESTORA 744 a requirement ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " RESTORA " AND COURSE alias0 . NUMBER = 744 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% RESTORA %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: YIDDISH 101 is a prerequisite for which programs ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " YIDDISH " AND COURSE alias0 . NUMBER = 101 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " YIDDISH " AND COURSE alias0 . NUMBER = 101 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: ORGSTUDY 202 is a requirement in which programs ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " ORGSTUDY " AND COURSE alias0 . NUMBER = 202 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ORGSTUDY " AND COURSE alias0 . NUMBER = 202 AND SEMESTER alias0 . SEMESTER <> " 202 " ;

Q: BIOLCHEM 416 is compulsory in which programs ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 416 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% BIOLCHEM %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% 416 %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: MO 617 is required by which programs ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " MO " AND COURSE alias0 . NUMBER = 617 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MO " AND COURSE alias0 . NUMBER = 617 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: PORTUG 301 is required for which programs ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " PORTUG " AND COURSE alias0 . NUMBER = 301 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 301 AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the programs for which ORGSTUDY 299 is a requirement ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " ORGSTUDY " AND COURSE alias0 . NUMBER = 299 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ORGSTUDY " AND COURSE alias0 . NUMBER = 299 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are the programs that require EARTH 423 ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " EARTH " AND COURSE alias0 . NUMBER = 423 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% EARTH %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% EARTH %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which degrees require STRATEGY 411 ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " STRATEGY " AND COURSE alias0 . NUMBER = 411 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " STRATEGY " AND COURSE alias0 . NUMBER = 411 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which programs have ASTRO 160 as a prerequisite ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 160 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ASTRO " AND COURSE alias1 . NUMBER = 160 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which programs require you to take SM 444 ?
Gold: SELECT DISTINCT PROGRAM alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM AS PROGRAM alias0 ON PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID WHERE COURSE alias0 . DEPARTMENT = " SM " AND COURSE alias0 . NUMBER = 444 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " SM " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What 's the difference between SI 523 and SI 546 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " SI " AND COURSE alias0 . NUMBER = 523 ) OR ( COURSE alias0 . DEPARTMENT = " SI " AND COURSE alias0 . NUMBER = 546 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 523 OR COURSE alias1 . NUMBER = 546 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " SI " ;

Q: Between ARABIC 202 and ARABIC 401 , how are they different ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " ARABIC " AND COURSE alias0 . NUMBER = 401 ) OR ( COURSE alias0 . DEPARTMENT = " ARABIC " AND COURSE alias0 . NUMBER = 202 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias1 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN 202 AS 401 alias0 ON 401 alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = 202 alias0 . STUDENT_ID WHERE STUDENT alias0 . FIRSTNAME LIKE " ARABIC " AND STUDENT alias0 . LASTNAME LIKE " 202 " ;

Q: Can you tell me what 's different between THTREMUS 442 and THTREMUS 360 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " THTREMUS " AND COURSE alias0 . NUMBER = 442 ) OR ( COURSE alias0 . DEPARTMENT = " THTREMUS " AND COURSE alias0 . NUMBER = 360 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 442 OR COURSE alias1 . NUMBER = 360 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " THTREMUS " ;

Q: Differentiate between DANCE 213 and DANCE 335 .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 335 ) OR ( COURSE alias0 . DEPARTMENT = " DANCE " AND COURSE alias0 . NUMBER = 213 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 213 OR COURSE alias1 . NUMBER = 335 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " DANCE " ;

Q: How are AOSS 574 and AOSS 321 different ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 574 ) OR ( COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 321 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 321 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " AOSS " AND COURSE alias1 . NUMBER = 574 ;

Q: How does BIOMEDE 590 differ from BIOMEDE 990 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 590 ) OR ( COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 990 ) ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 990 AND COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 990 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR FROM SEMESTER AS SEMESTER alias0 WHERE SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ;

Q: How is DHYGRACK 688 different from DHYGRACK 683 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " DHYGRACK " AND COURSE alias0 . NUMBER = 688 ) OR ( COURSE alias0 . DEPARTMENT = " DHYGRACK " AND COURSE alias0 . NUMBER = 683 ) ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DHYGRACK " AND COURSE alias0 . NUMBER = 683 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Name the difference between LAW 441 and LAW 946 .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " LAW " AND COURSE alias0 . NUMBER = 441 ) OR ( COURSE alias0 . DEPARTMENT = " LAW " AND COURSE alias0 . NUMBER = 946 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 441 OR COURSE alias1 . NUMBER = 441 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " LAW " ;

Q: Tell me the difference between courses PSYCH 877 and PSYCH 533 .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " PSYCH " AND COURSE alias0 . NUMBER = 877 ) OR ( COURSE alias0 . DEPARTMENT = " PSYCH " AND COURSE alias0 . NUMBER = 533 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " PSYCH " AND COURSE alias1 . NUMBER = 533 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . WORKLOAD = ( SELECT MIN ( PROGRAM_COURSE alias1 . WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSE alias1 INNER JOIN COURSE AS COURSE alias1 ON PROGRAM_COURSE alias1 . COURSE_ID = COURSE alias1 . COURSE_ID WHERE ( COURSE alias1 . NUMBER = 877 OR COURSE alias1 . NUMBER = 533 ) AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Tell me the differences between ARABIC 600 and ARABIC 101 .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " ARABIC " AND COURSE alias0 . NUMBER = 600 ) OR ( COURSE alias0 . DEPARTMENT = " ARABIC " AND COURSE alias0 . NUMBER = 101 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 600 OR COURSE alias1 . NUMBER = 101 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ARABIC " ;

Q: What 's different between the ANAT 504 class and the ANAT 499 class ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " ANAT " AND COURSE alias0 . NUMBER = 504 ) OR ( COURSE alias0 . DEPARTMENT = " ANAT " AND COURSE alias0 . NUMBER = 499 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 504 OR COURSE alias1 . NUMBER = 499 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " ;

Q: What 's the difference between STDABRD 475 and STDABRD 456 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 456 ) OR ( COURSE alias0 . DEPARTMENT = " STDABRD " AND COURSE alias0 . NUMBER = 475 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 475 OR COURSE alias1 . NUMBER = 456 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " STDABRD " AND COURSE alias1 . NUMBER = 456 ;

Q: What 's the difference between courses RCNSCI 104 and RCNSCI 232 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " RCNSCI " AND COURSE alias0 . NUMBER = 104 ) OR ( COURSE alias0 . DEPARTMENT = " RCNSCI " AND COURSE alias0 . NUMBER = 232 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " RCNSCI " AND COURSE alias0 . NUMBER = 232 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What are the major differences between ARCH 466 and ARCH 591 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " ARCH " AND COURSE alias0 . NUMBER = 466 ) OR ( COURSE alias0 . DEPARTMENT = " ARCH " AND COURSE alias0 . NUMBER = 591 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " ARCH " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What is the difference between the courses PHYSED 414 and PHYSED 142 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . DESCRIPTION , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 414 ) OR ( COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 142 ) ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% PHYSED 414 %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which courses does Prof. Stephen Cooper teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Stephen Cooper %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Stephen Cooper %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Are there any courses taught by Prof. Nicholas Gaudio ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nicholas Gaudio %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Nicholas Nicholas %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: List the courses Professor . Yen Lin teaches .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Yen Lin %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Yen Yen %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ;

Q: Name the courses taught by Prof. Bradley Moore .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Bradley Moore %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Bradley Moore %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Prof. Sebouh Aslanian teaches what classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sebouh Aslanian %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . NAME LIKE "% Sebouh Aslanian %" AND INSTRUCTOR alias0 . NAME NOT LIKE "% Sebouh %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Prof. Emily Harrington teaches what courses ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Emily Harrington %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Emily Harrington %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Prof. Wilhelm Piskorowski teaches which courses ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Wilhelm Piskorowski %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Wilhelm Piskorowski %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: The names of Prof. Annette Masson 's courses ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Annette Masson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Annette Masson %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What are all the courses Prof. Marta Kondratyuk teaches ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Marta Kondratyuk %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Marta Kondratyuk %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What are the names of the courses Prof. Trevor Legassick teaches ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Trevor Legassick %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Trevor Legassick %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What classes will Prof. Mary Simoni be teaching ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Mary Simoni %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Mary Mary %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What courses are taught by Prof. Sarah Miller ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sarah Miller %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Sarah Miller %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What courses is Prof. Earl Werner the teacher of ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Earl Werner %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Earl Werner %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: What does Prof. Kristina Daugirdas teach ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kristina Daugirdas %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Kristina Daugirdas %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which courses have Prof. Danielle Czarnecki as the teacher ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Danielle Czarnecki %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Danielle Czarnecki %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: Which courses is Prof. Matthew Ronfeldt teaching ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Matthew Ronfeldt %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND INSTRUCTOR alias0 . NAME LIKE "% Matthew Ronfeldt %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) ) ;

Q: How many lectures does REES 410 have each week ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " REES " AND COURSE alias0 . NUMBER = 410 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN GSI AS OFFERING_INSTRUCTOR alias0 ON GSI alias0 . COURSE_OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = GSI alias0 . STUDENT_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " REES " AND COURSE alias0 . NUMBER = 410 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: AOSS 411 has how many lectures a week ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 411 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " AOSS " AND COURSE alias0 . NUMBER = 411 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: SPACE 101 has how many lectures every week ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SPACE " AND COURSE alias0 . NUMBER = 101 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SPACE " AND COURSE alias0 . NUMBER = 101 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: NERS 421 has how many lectures per week ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 421 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " NERS " AND COURSE alias0 . NUMBER = 421 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Each week , how many lectures does SURVMETH 742 have ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " SURVMETH " AND COURSE alias0 . NUMBER = 742 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SURVMETH " AND COURSE alias0 . NUMBER = 742 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Every week , how many lectures are offered by MEDADM 515 ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MEDADM " AND COURSE alias0 . NUMBER = 515 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MEDADM " AND COURSE alias0 . NUMBER = 515 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many MILSCI 202 lectures are there each week ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 202 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 202 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many lectures are there for REEES 801 every week ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " REEES " AND COURSE alias0 . NUMBER = 801 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " REEES " AND COURSE alias0 . NUMBER = 801 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many lectures each week does CDB 598 have ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CDB " AND COURSE alias0 . NUMBER = 598 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CDB " AND COURSE alias0 . NUMBER = 598 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many times a week does AERO 202 meet ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AERO " AND COURSE alias0 . NUMBER = 202 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " AERO " AND COURSE alias0 . NUMBER = 202 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 's the number of weekly lectures for AAPTIS 289 ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AAPTIS " AND COURSE alias0 . NUMBER = 289 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AAPTIS " AND COURSE alias0 . NUMBER = 289 AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What 's the total number of weekly lectures for MACROMOL 412 ?
Gold: SELECT M + T + W + TH + F + S + SU FROM ( SELECT SUM ( CASE WHEN DERIVED_TABLE alias0 . FRIDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias0 , SUM ( CASE WHEN DERIVED_TABLE alias0 . MONDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias1 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SATURDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias2 , SUM ( CASE WHEN DERIVED_TABLE alias0 . SUNDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias3 , SUM ( CASE WHEN DERIVED_TABLE alias0 . THURSDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias4 , SUM ( CASE WHEN DERIVED_TABLE alias0 . TUESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias5 , SUM ( CASE WHEN DERIVED_TABLE alias0 . WEDNESDAY = " Y " THEN 1 ELSE 0 END ) AS DERIVED_FIELD alias6 FROM ( SELECT COURSE_OFFERING alias0 . * FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MACROMOL " AND COURSE alias0 . NUMBER = 412 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLE alias1 ) AS DERIVED_TABLE alias1 ;
System: SELECT COUNT ( DISTINCT INSTRUCTOR alias0 . INSTRUCTOR_ID ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MACROMOL " AND COURSE alias0 . NUMBER = MACROMOL AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: What are the PreMajor classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can you tell me the PreMajor classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Core classes are ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Core %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the ULCS classes .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name the MDE classes .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Of all the classes , which are the ULCS ones ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Regarding Other classes , which are they ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: The PreMajor classes are ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the Other classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the names of the MDE classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What Other classes are there ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which all are the MDE classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which are the Other classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are ULCS classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes are the MDE ones ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which ones are the PreMajor classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can you tell me all of the PreMajor classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: All of the PreMajor classes are ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Could you please name all of the PreMajor classes for me ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: PreMajor classes are ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: May I know all of the MDE classes from you ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name all MDE classes for me .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% MDE %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name all the ULCS classes for me .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name for me all PreMajor classes .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Name for me all the ULCS classes .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Please tell me , what are all the ULCS classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are all of the PreMajor classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are all the courses for Other ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Other %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What are the all of the PreMajor classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% PreMajor %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Would you mind informing me what all of the ULCS classes are ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Can I see my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Am I able to view my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% transcript %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Bring up my transcript .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Can I view my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Can you show me my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: I need to see my transcript .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% my %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: I want to see my transcripts .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% . %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcripts %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: I would like to see my transcript .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% . %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is it possible to see my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = transcript AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is my transcript something that 's available for me to see ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% see %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: May I look at my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: May I please see my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: May I see my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: May I view my transcript ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON STUDENT_RECORD alias0 . COURSE_ID = PROGRAM_COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: My transcript , can I see it ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% My %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Please let me see my transcript .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% transcript %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Show me my transcript .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR , STUDENT_RECORD alias0 . GRADE FROM COURSE AS COURSE alias0 , SEMESTER AS SEMESTER alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% my %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the course prerequisites for ANTHRCUL 272 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ANTHRCUL " AND COURSE alias0 . NUMBER = 272 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ANTHRCUL " AND COURSE alias1 . NUMBER = 272 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Are there any courses that are prerequisites for MOVESCI 489 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MOVESCI " AND COURSE alias0 . NUMBER = 489 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 489 OR COURSE alias1 . NUMBER = 489 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MOVESCI " ;

Q: Can you tell me what the course prerequisites are for BIOMEDE 523 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 523 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOMEDE " AND COURSE alias0 . NUMBER = 523 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Does EEB 453 have any prereqs ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 453 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 453 AND INSTRUCTOR alias0 . NAME LIKE "% EEB 453 %" AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Does MODGREEK 201 have any prerequisite courses ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MODGREEK " AND COURSE alias0 . NUMBER = 201 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " MODGREEK " AND COURSE alias0 . NUMBER = 201 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MODGREEK " AND COURSE alias1 . NUMBER = 201 ;

Q: RUSSIAN 550 has which courses as prerequisites ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " RUSSIAN " AND COURSE alias0 . NUMBER = 550 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% RUSSIAN 550 %" OR COURSE alias0 . NAME LIKE "% RUSSIAN 550 %" ) AND COURSE alias0 . DEPARTMENT = " RUSSIAN " ;

Q: For BIOPHYS 995 , what are the prerequisites ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " BIOPHYS " AND COURSE alias0 . NUMBER = 995 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIOPHYS " AND COURSE alias0 . NUMBER = 995 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: For MKT 601 what are the course prerequisites ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MKT " AND COURSE alias0 . NUMBER = 601 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " MKT " AND COURSE alias0 . NUMBER = 601 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For TURKISH 102 which are the prerequisites courses ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " TURKISH " AND COURSE alias0 . NUMBER = 102 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " TURKISH " AND COURSE alias0 . NUMBER = 102 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Name the courses required for PORTUG 232 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PORTUG " AND COURSE alias0 . NUMBER = 232 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " PORTUG " AND COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Name the courses that are mandatory for SI 546 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " SI " AND COURSE alias0 . NUMBER = 546 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " SI " AND COURSE alias1 . NUMBER = 546 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Off all the courses which ones are prerequisites for ANTHRCUL 338 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ANTHRCUL " AND COURSE alias0 . NUMBER = 338 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " ANTHRCUL " AND COURSE alias1 . NUMBER = 338 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Required courses for BE 619 are ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " BE " AND COURSE alias0 . NUMBER = 619 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " BE " AND COURSE alias0 . NUMBER = 619 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER = " BE " AND SEMESTER alias0 . YEAR = 2016 ;

Q: The course prerequisites for PHYSED 425 are ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 425 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " PHYSED " AND COURSE alias1 . NUMBER = 425 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: The prerequisite courses for PERIODON 793 are ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PERIODON " AND COURSE alias0 . NUMBER = 793 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " PERIODON " AND COURSE alias0 . NUMBER = 793 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are MKT 322 's course prerequisite requirements ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MKT " AND COURSE alias0 . NUMBER = 322 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " MKT " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the course requirements for THEORY 721 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " THEORY " AND COURSE alias0 . NUMBER = 721 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% THEORY %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% THEORY %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What classes need to be taken before ENS 350 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ENS " AND COURSE alias0 . NUMBER = 350 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 350 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What course prerequisites does GEOSCI 452 have ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " GEOSCI " AND COURSE alias0 . NUMBER = 452 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " GEOSCI " AND COURSE alias1 . NUMBER = 452 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What exactly are the prerequisites for the course ORTHO 767 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ORTHO " AND COURSE alias0 . NUMBER = 767 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " ORTHO " AND COURSE alias0 . NUMBER = 767 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: What prerequisites are required for ENSCEN 451 ?
Gold: SELECT DISTINCT COURSE alias1 . DEPARTMENT , COURSE alias1 . NAME , COURSE alias1 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ENSCEN " AND COURSE alias0 . NUMBER = 451 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 451 AND STUDENT_RECORD alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ;

Q: Which days of the week is BIT 630 taught ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BIT " AND COURSE alias0 . NUMBER = 630 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 630 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: About BIOLCHEM 398 , do you know what days it 's taught on exactly ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 398 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BIOLCHEM " AND COURSE alias0 . NUMBER = 398 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can you tell me the days of the week that TCHNCLCM 380 is taught ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " TCHNCLCM " AND COURSE alias0 . NUMBER = 380 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 380 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: PHYSED 415 is offered on which days ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 415 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 415 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: MEMS 382 is taught in which days of the week ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " MEMS " AND COURSE alias0 . NUMBER = 382 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MEMS " AND COURSE alias0 . NUMBER = 382 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: CLARCH 856 is taught on what days of the week ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CLARCH " AND COURSE alias0 . NUMBER = 856 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CLARCH " AND COURSE alias0 . NUMBER = 856 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: CHE 489 is taught on which days of the week ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CHE " AND COURSE alias0 . NUMBER = 489 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " CHE " AND COURSE alias0 . NUMBER = 489 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: ANAT 403 is taught when in the week ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ANAT " AND COURSE alias0 . NUMBER = 403 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 403 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: In regards to PHYSED 265 , what days during the week is the class held ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 265 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHYSED " AND COURSE alias0 . NUMBER = 265 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Name the days of the week HUMGEN 553 is taught .
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " HUMGEN " AND COURSE alias0 . NUMBER = 553 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " HUMGEN " AND COURSE alias0 . NUMBER = 553 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Name the days when CONDUCT 415 is taught .
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " CONDUCT " AND COURSE alias0 . NUMBER = 415 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " CONDUCT " AND COURSE alias0 . NUMBER = 415 AND COURSE_OFFERING alias0 . SEMESTER = SEMESTER alias0 . SEMESTER_ID AND SEMESTER alias0 . SEMESTER_ID > ( SELECT SEMESTER alias1 . SEMESTER_ID FROM SEMESTER AS SEMESTER alias1 WHERE SEMESTER alias1 . SEMESTER = " WN " AND SEMESTER alias1 . YEAR = 2016 ) ORDER BY SEMESTER alias0 . SEMESTER_ID ASC LIMIT 1 ;

Q: On what days of the week are the SWC 300 classes ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " SWC " AND COURSE alias0 . NUMBER = 300 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " SWC " AND COURSE alias0 . NUMBER = 300 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What days is ROMLING 450 going on ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ROMLING " AND COURSE alias0 . NUMBER = 450 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ROMLING " AND COURSE alias0 . NUMBER = 450 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What days of the week does PHIL 157 meet ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " PHIL " AND COURSE alias0 . NUMBER = 157 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PHIL " AND COURSE alias0 . NUMBER = 157 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When are the COMPLIT 374 classes in the week .
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " COMPLIT " AND COURSE alias0 . NUMBER = 374 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 374 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: When does the class meet for RCHUMS 218 ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " RCHUMS " AND COURSE alias0 . NUMBER = 218 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " RCHUMS " AND COURSE alias0 . NUMBER = 218 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which days is BCS 232 taught ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " BCS " AND COURSE alias0 . NUMBER = 232 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID WHERE COURSE_OFFERING alias0 . SEMESTER = ( SELECT MAX ( SEMESTER alias0 . SEMESTER_ID ) FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias1 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias1 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias1 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BCS " AND COURSE alias0 . NUMBER = 232 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which days is ECON 621 taught in a week ?
Gold: SELECT DISTINCT COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ECON " AND COURSE alias0 . NUMBER = 621 ORDER BY SEMESTER alias0 . YEAR DESC ;
System: SELECT DISTINCT COURSE_OFFERING alias0 . END_TIME , COURSE_OFFERING alias0 . FRIDAY , COURSE_OFFERING alias0 . MONDAY , COURSE_OFFERING alias0 . SATURDAY , COURSE_OFFERING alias0 . START_TIME , COURSE_OFFERING alias0 . SUNDAY , COURSE_OFFERING alias0 . THURSDAY , COURSE_OFFERING alias0 . TUESDAY , COURSE_OFFERING alias0 . WEDNESDAY FROM SEMESTER AS SEMESTER alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ECON " AND COURSE alias0 . NUMBER = 621 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does ANATOMY 571 count for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ANATOMY " AND COURSE alias0 . NUMBER = 571 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ANATOMY " AND COURSE alias0 . NUMBER = 571 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can ORALPATH 696 be used for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ORALPATH " AND COURSE alias0 . NUMBER = 696 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ORALPATH " AND COURSE alias0 . NUMBER = 696 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Can I take MUSICOL 478 for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MUSICOL " AND COURSE alias0 . NUMBER = 478 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MUSICOL " AND COURSE alias0 . NUMBER = 478 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Do I count AAS 458 for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " AAS " AND COURSE alias0 . NUMBER = 458 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " AAS " AND COURSE alias0 . NUMBER = 458 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Does ANAT 403 work for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ANAT " AND COURSE alias0 . NUMBER = 403 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: SI 629 counts for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " SI " AND COURSE alias0 . NUMBER = 629 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " SI " AND COURSE alias0 . NUMBER = 629 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: HJCS 405 counts for a ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " HJCS " AND COURSE alias0 . NUMBER = 405 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " HJCS " AND COURSE alias0 . NUMBER = 405 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For ULCS , does REEES 695 count ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " REEES " AND COURSE alias0 . NUMBER = 695 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% REEES %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For ULCS does COMP 425 count ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " COMP " AND COURSE alias0 . NUMBER = 425 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " COMP " AND COURSE alias0 . NUMBER = 425 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: For a ULCS does MEDEDUC 499 count ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MEDEDUC " AND COURSE alias0 . NUMBER = 499 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " MEDEDUC " AND COURSE alias0 . NUMBER = 499 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is PUBPOL 571 accepted as ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PUBPOL " AND COURSE alias0 . NUMBER = 571 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " PUBPOL " AND COURSE alias0 . NUMBER = 571 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is LHSP 229 applicable for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " LHSP " AND COURSE alias0 . NUMBER = 229 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " LHSP " AND COURSE alias0 . NUMBER = 229 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is EHS 869 counted towards ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EHS " AND COURSE alias0 . NUMBER = 869 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EHS " AND COURSE alias0 . NUMBER = 869 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Will CMBIOL 681 count towards the ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " CMBIOL " AND COURSE alias0 . NUMBER = 681 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " CMBIOL " AND COURSE alias0 . NUMBER = 681 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Would RCIDIV 351 count towards ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " RCIDIV " AND COURSE alias0 . NUMBER = 351 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RCIDIV " AND COURSE alias0 . NUMBER = 351 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Would MODGREEK 305 fit the ULCS requirements ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MODGREEK " AND COURSE alias0 . NUMBER = 305 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% MODGREEK 305 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Would EEB 412 qualify for ULCS ?
Gold: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = 412 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " EEB " AND COURSE alias0 . NUMBER = EEB AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Are there any 200 -level classes in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 100 -level classes , are they offered in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Any 400 -level classes held in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 100 -level classes available in either the Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 500 -level classes available in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are any 100 -level classes being offered in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any Spring or Summer classes available for the 100 -level ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% 100 %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 100 ;

Q: Can 200 -level classes be taken in Spring or Summer ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can the 300 -level classes be taken in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do any 100 -level classes occur in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do you know if 500 -level classes are being held in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does the Spring or Summer term offer any 100 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Spring or Summer terms , are any 400 -level classes being offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Spring or Summer term , are there any 500 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In Spring or Summer term are there any 100 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Spring or Summer term are there 200 -level classes available to take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Spring or Summer term are there any 400 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 300 -level classes do you have available for the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 200 -level courses are available in Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which 300 -level classes are being taught in Spring and Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which 100 -level classes are there for Spring or Summer terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN AREA AS AREA alias0 ON COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE AREA alias0 . AREA LIKE "% 100 %" AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SU " , " SS " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many sections of PORTUG 235 are there ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PORTUG " AND COURSE alias0 . NUMBER = 235 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 235 ;

Q: BIT 311 contains how many sections ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " BIT " AND COURSE alias0 . NUMBER = 311 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " BIT " AND COURSE alias0 . NUMBER = 311 ;

Q: EPID 788 has how many sections ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EPID " AND COURSE alias0 . NUMBER = 788 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EPID " AND COURSE alias0 . NUMBER = 788 ;

Q: For ITALIAN 425 , how many section are there ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ITALIAN " AND COURSE alias0 . NUMBER = 425 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " ITALIAN " AND COURSE alias0 . NUMBER = 425 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For PHIL 460 , how many sections are there ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHIL " AND COURSE alias0 . NUMBER = 460 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " PHIL " AND COURSE alias0 . NUMBER = 460 ;

Q: For INSTHUM 611 , what is the number of sections available ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " INSTHUM " AND COURSE alias0 . NUMBER = 611 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " INSTHUM " AND COURSE alias0 . NUMBER = 611 ;

Q: How many sections does IOE 801 have ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " IOE " AND COURSE alias0 . NUMBER = 801 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " IOE " AND COURSE alias0 . NUMBER = 801 ;

Q: How many sections does MILSCI 499 include ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 499 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 499 ;

Q: How many sections make up DENT 533 ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " DENT " AND COURSE alias0 . NUMBER = 533 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " DENT " AND COURSE alias0 . NUMBER = 533 ;

Q: Of ASTRO 389 , how many sections are there ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 389 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ASTRO " AND COURSE alias0 . NUMBER = 389 ;

Q: What is the quantity of MILSCI 401 sections ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 401 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " MILSCI " AND COURSE alias0 . NUMBER = 401 ;

Q: What is total number of ARABAM 405 sections ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " ARABAM " AND COURSE alias0 . NUMBER = 405 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " ARABAM " AND COURSE alias0 . NUMBER = 405 ;

Q: What number of sections of AERO 311 are there ?
Gold: SELECT COUNT ( * ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " AERO " AND COURSE alias0 . NUMBER = 311 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE_OFFERING alias0 . SECTION_NUMBER ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " AERO " AND COURSE alias0 . NUMBER = 311 ;

Q: What 300 -level classes are offered next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 300 -level classes offered next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 300 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can you list the 300 -level courses for next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For our next semester , will 300 -level classes be offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need a list of the 300 -level classes offered next semester .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: In the next semester , which 300 -level courses will be available ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: In the next semester if 300 -level classes are offered what kind of classes can be taken ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% kind %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is there a list for next semester of 300 -level courses being offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what 300 -level classes are offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what 300 -level classes are there ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what 300 -level classes will be offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what are the 300 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , what classes are offered at 300 -level ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Next semester , which 300 -level classes are available ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 300 -level classes can I anticipate next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 300 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are next semester 's 300 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 300 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes at the 300 -level are offered next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which 300 -level classes are offered for next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which 300 -level classes will be offered next semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER , SEMESTER alias0 . YEAR FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2017 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2018 ) OR ( SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2019 ) ) AND COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR , SEMESTER alias0 . SEMESTER ;

Q: Which 300 -level courses are presented after this semester ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What courses are only offered in the Winter ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any courses that are only offered in Spring ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there courses that are only available in the Spring-Summer ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the courses offered , which ones are only available in the Spring ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What are the courses which are only offered in the Winter ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes are only available in the Spring-Summer ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring-Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes can I only take in the Spring ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes can I take only in the Summer ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Summer " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Summer " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses are only available during Spring ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Spring " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which courses can I only take in Winter ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which Winter courses are only offered then ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " Winter " AND ( SELECT COUNT ( DISTINCT SEMESTER alias1 . SEMESTER ) FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . COURSE_ID = COURSE alias1 . COURSE_ID ) = 1 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% Winter %" AND SEMESTER alias0 . SEMESTER IN ( " WN " , " FA " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes will I be able to take once I take MUSPERF 990 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " MUSPERF " AND COURSE alias1 . NUMBER = 990 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " MUSPERF " AND COURSE alias0 . NUMBER = 990 AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " MUSPERF " AND COURSE alias1 . NUMBER = 990 ;

Q: After GREEK 550 what courses can I take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " GREEK " AND COURSE alias1 . NUMBER = 550 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% GREEK %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Are there any courses that I can take that RCARTS 268 is a pre-requisite for ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " RCARTS " AND COURSE alias1 . NUMBER = 268 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE AREA alias0 . AREA LIKE "% RCARTS 268 %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: For which classes is PHARMSCI 761 a prerequisite ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " PHARMSCI " AND COURSE alias1 . NUMBER = 761 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% PHARMSCI %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: If I take PHARMACY 426 , what classes will I be able to take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " PHARMACY " AND COURSE alias1 . NUMBER = 426 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " PHARMACY " AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Once I take RUSSIAN 201 , what classes will I be able to take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " RUSSIAN " AND COURSE alias1 . NUMBER = 201 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " RUSSIAN " AND COURSE alias0 . NUMBER = 201 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% Once %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What are the additional classes that I can take after finishing GERMAN 171 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " GERMAN " AND COURSE alias1 . NUMBER = 171 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " GERMAN " AND COURSE alias0 . NUMBER = 171 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What classes am I eligible for after completing PAT 102 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " PAT " AND COURSE alias1 . NUMBER = 102 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% PAT 102 %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: What courses are available for me to participate in once I finish AUTO 563 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " AUTO " AND COURSE alias1 . NUMBER = 563 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " AUTO " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What courses open up after taking BUDDHST 512 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " BUDDHST " AND COURSE alias1 . NUMBER = 512 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 512 OR COURSE alias1 . NUMBER = 512 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " BUDDHST " ;

Q: Which classes will I be able to take once I complete ELI 533 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " ELI " AND COURSE alias1 . NUMBER = 533 ;
System: SELECT COUNT ( * ) > 0 FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " ELI " AND COURSE alias0 . NUMBER = 533 AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% 533 %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . NAME LIKE "% CS-LSA %" AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Which courses are available after taking HJCS 277 ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 ON COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID INNER JOIN COURSE AS COURSE alias1 ON COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID WHERE COURSE alias1 . DEPARTMENT = " HJCS " AND COURSE alias1 . NUMBER = 277 ;
System: SELECT DISTINCT COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE COURSE alias0 . DEPARTMENT = " HJCS " COURSE alias0 . CREDITS = 11 ;

Q: Which upper-level classes have projects but no exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Are there upper level classes that have projects but no exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Are there upper-level classes that have projects but do not have exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there upper-level classes that have projects without exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> projects AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do any upper-level classes exist that have projects but no exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Is there any upper-level classes without exams that have projects ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What classes in the upper-level have projects but no exams .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . CREDITS = exams AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;

Q: What upper level classes are offered that do n't require exams but have projects ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = projects AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper level classes can I take to avoid exams and only do projects ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = projects AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: What upper-level classes require projects in place of exams .
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes are upper level and have projects but not exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = exams AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which classes have projects , no exams , and are upper level ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which classes in the upper-level have projects and do n't have exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = exams AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper level classes use projects rather than exams for evaluation ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper-level classes exempt final exams but require projects ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Which upper-level classes have no exams but require projects ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Which upper-level classes require only projects and no exams ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND COURSE alias0 . HAS_PROJECTS = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE " ULCS " ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID ) FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_LAB = " Y " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;

Q: Do all upper-level classes have exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are exams always a part of the upper-level classes ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are exams necessary for all upper-level classes ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are exams part of all upper-level classes ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there exams for all upper-level classes ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Are there exams in all upper-level classes ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do all senior level classes require exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = exams AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do all the classes in the upper-level have exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do all upper-level classes contain exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> Do AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Do upper-level classes all have exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> Do AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Does every upper-level class have an examination ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does every upper-level class have exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> Does AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: For upper-level classes , do they all have exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is it true that all upper-level classes have exams ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . CREDITS <> exams AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Is there an exam for every upper-level class ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE COURSE alias0 . HAS_EXAMS = " N " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID WHERE ( SEMESTER alias0 . SEMESTER = " FA " OR SEMESTER alias0 . SEMESTER = " WN " ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% ULCS %" AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who teaches Adapting Japanese Fiction to Film this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Adapting Japanese Fiction to Film %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Film AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Research Health Ed is taught by whom this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Research Health Ed %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% Research Health %" ;

Q: Senior Honors Research I for Psychology as a Social Science will be taught by whom this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Senior Honors Research I for Psychology as a Social Science %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% Senior a Social Science %" ;

Q: Can you tell me who teaches Great Books of Spain and Latin America this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Great Books of Spain and Latin America %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Latin Latin %" ;

Q: Do you know who teaches History of Decor this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% History of Decor %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = History AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do you know who the instructor is for Interdisciplinary English this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Interdisciplinary English %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " Interdisciplinary " AND COURSE alias0 . NUMBER = English AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Business Changing Times class , who is the teacher ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Business Changing Times %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " the " AND COURSE alias0 . NUMBER = Business AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: For this semester 's Intro Med Micro class , who is the instructor ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Intro Med Micro %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Micro AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This semester , Thermodynamics and Kinetics is taught by whom ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Thermodynamics and Kinetics %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID < OFFERING_INSTRUCTOR alias1 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: This semester , who is teaching Sexuality and Science ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Sexuality and Science %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Sexuality and Science %" ;

Q: This semester , who is the teacher of Sound Patterns ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Sound Patterns %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Patterns AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: This semester who is teaching Upper-Level Writing ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Upper-Level Writing %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% Upper-Level Writing %" ;

Q: This semester who will be the professor for Intrapartum , Postpartum , and Newborn Care ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Intrapartum , Postpartum , and Newborn Care %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% , Newborn %" ;

Q: This semester who will teach Advanced Al Techniques ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Advanced Al Techniques %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " Advanced " AND COURSE alias0 . NUMBER = Advanced AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: What professors teach Mass Media and Political Behavior this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Mass Media and Political Behavior %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Political Media %" ;

Q: Which professor is teaching Interdisciplinary the Middle Ages this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Interdisciplinary the Middle Ages %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Ages AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which teacher will teach Lyric , Elegy , and Iambus this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Lyric , Elegy , and Iambus %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% , Iambus %" ;

Q: Who are my options for Teach Elem School professors ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Teach Elem School %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN AREA AS AREA alias0 ON COURSE_OFFERING alias0 . COURSE_ID = AREA alias0 . COURSE_ID WHERE AREA alias0 . AREA LIKE "% Elem %" ;

Q: Who is going to teach Stage Management for this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Stage Management %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " Stage " AND COURSE alias0 . NUMBER = Management AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: Who is teaching Field Geology Project ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Field Geology Project %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , INSTRUCTOR AS INSTRUCTOR alias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Geology AND OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID AND OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID ;

Q: Who is the teacher of Antebellum Society and the Civil War in this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Antebellum Society and the Civil War %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% of Antebellum Society %" ;

Q: Who is the teacher this semester for the Cell Cycle Control and Cancer class ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Cell Cycle Control and Cancer %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . NAME LIKE "% Control Control Cancer %" ;

Q: Who is this semester 's Evolution ( UMBS ) teacher ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Evolution (UMBS) %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORD alias0 ON STUDENT_RECORD alias0 . OFFERING_ID = OFFERING_INSTRUCTOR alias0 . OFFERING_ID INNER JOIN STUDENT AS STUDENT alias0 ON STUDENT alias0 . STUDENT_ID = STUDENT_RECORD alias0 . STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = Evolution AND STUDENT alias0 . FIRSTNAME LIKE " FA " AND STUDENT alias0 . LASTNAME LIKE " UMBS " ;

Q: Who will be teaching Prin Rad Imag this semester ?
Gold: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM INSTRUCTOR AS INSTRUCTOR alias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN COURSE AS COURSE alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . NAME LIKE "% Prin Rad Imag %" AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT INSTRUCTOR alias0 . NAME FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . OFFERING_ID = COURSE_OFFERING alias0 . OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTOR alias0 ON OFFERING_INSTRUCTOR alias0 . INSTRUCTOR_ID = INSTRUCTOR alias0 . INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE COURSE alias0 . DEPARTMENT = " Prin " AND COURSE alias0 . NUMBER = Imag AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . YEAR = 2016 ;

Q: I need to leave for work at 5:00 every day , so if I take 499 and 162 , can I do that ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 499 OR COURSE alias0 . NUMBER = 162 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Are 381 and 328 over by 5:00 each day ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 381 OR COURSE alias0 . NUMBER = 328 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER = 328 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 830 and 683 over by 5:00 every day , because I need to leave for work by then .
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 830 OR COURSE alias0 . NUMBER = 683 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% 830 and 683 %" OR COURSE alias0 . NAME LIKE "% 830 and 683 %" ) AND COURSE alias0 . DEPARTMENT = " EECS " ;

Q: As I need to leave for work at 5:00 everyday , can I take 350 and 711 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 350 OR COURSE alias0 . NUMBER = 711 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM AREA AS AREA alias0 , COURSE AS COURSE alias0 WHERE ( COURSE alias0 . DESCRIPTION LIKE "% 350 350 711 %" AND COURSE alias0 . COURSE_ID = AREA alias0 . COURSE_ID ;

Q: Can I leave at 5:00 P.M. every day if I take 370 and 489 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 370 OR COURSE alias0 . NUMBER = 489 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE ( COURSE alias0 . START_TIME = " EECS " AND COURSE alias0 . NUMBER = 489 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can I take 611 and 539 as I need to leave for work at 5:00 everyday ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 611 OR COURSE alias0 . NUMBER = 539 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 611 OR COURSE alias1 . NUMBER = 539 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " ;

Q: If I need to leave for work at 5:00 every day , can I take 571 and 775 and still be able to do that ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 571 OR COURSE alias0 . NUMBER = 775 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias1 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 571 AND SEMESTER alias0 . SEMESTER = " FA " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR = 2016 ;

Q: If I take 746 and 886 , can I leave at 5 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 746 OR COURSE alias0 . NUMBER = 886 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias1 . NUMBER = 746 OR COURSE alias1 . NUMBER = 5 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " ;

Q: If I take 254 and 125 , can I leave for work at 5:00 every day ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 254 OR COURSE alias0 . NUMBER = 125 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITE alias0 . PRE_COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID ) AND COURSE alias1 . DEPARTMENT = " EECS " AND COURSE alias1 . NUMBER = 5:00 AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER ORDER BY SEMESTER alias0 . YEAR = 2016 alias0 . SEMESTER ;

Q: If I take 525 and 334 , will I be able to leave for work at 5:00 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 525 OR COURSE alias0 . NUMBER = 334 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE ( COURSE alias1 . NUMBER = 525 OR COURSE alias1 . NUMBER = 334 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " ;

Q: If I take the 358 and 484 , can I leave for work at 5:00 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 358 OR COURSE alias0 . NUMBER = 484 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM AS PROGRAM alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT <> " ENGR " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID AND PROGRAM alias0 . PROGRAM_ID = PROGRAM_COURSE alias0 . PROGRAM_ID ;

Q: Is it possible to leave for work at 5:00 while taking 866 and 975 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 866 OR COURSE alias0 . NUMBER = 975 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE COURSE alias0 . DEPARTMENT LIKE "% 866 %" AND PROGRAM_COURSE alias0 . CATEGORY LIKE " PreMajor " AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE alias0 . COURSE_ID ;

Q: Will I be finished with my classes for the day by 5:00 P.M. if I take 431 and 823 ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 431 OR COURSE alias0 . NUMBER = 823 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 day COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Will taking the 615 and 554 allow me to leave for work at 5 each day ?
Gold: SELECT COUNT ( * ) = 0 FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER WHERE ( COURSE alias0 . NUMBER = 615 OR COURSE alias0 . NUMBER = 554 ) AND COURSE_OFFERING alias0 . END_TIME > " 17:00:00 " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , PROGRAM_COURSE AS PROGRAM_COURSE alias0 WHERE ( COURSE alias1 . NUMBER = 615 OR COURSE alias1 . NUMBER = 554 ) AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " ;

Q: Can I take 300 -level classes in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Am I able to take 100 -level classes in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 300 -level classes offered for me in Spring term or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any 100 -level courses in the Spring or Summer term that I can take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can 500 -level classes be taken by me in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can I enroll in 500 -level classes for the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Spring or Summer term can I take 200 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Spring or Summer term , can I take 100 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is it ok to take 300 -level classes in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Is it possible for me to take the 100 -level classes , in the Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( * ) > 0 FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 100 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: May I sign up for 100 -level classes in Spring or Summer term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " SP " , " SS " , " SU " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any 100 -level classes in Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: 500 -level classes , are they offered in the Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Any 100 -level classes held in Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 400 -level classes available in either the Fall or Winter terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% 400 %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are 500 -level classes available in Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are any 300 -level classes being offered in the Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Are there any Fall or Winter classes available for the 200 -level ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 WHERE COURSE_PREREQUISITE alias0 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias0 . DEPARTMENT = " EECS " AND PROGRAM_COURSE alias0 . CATEGORY LIKE "% 200 %" AND PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can 100 -level classes be taken in Fall or Winter ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% 100 %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Can the 200 -level classes be taken in the Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do any 400 -level classes occur in the Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Do you know if 300 -level classes are being held in Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Does the Fall or Winter term offer any 200 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall or Winter terms , are any 500 -level classes being offered ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Fall or Winter term , are there any 100 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% 100 %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: In Fall or Winter term are there any 500 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall or Winter term are there 500 -level classes available to take ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall or Winter term are there any 500 -level classes ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 100 -level classes do you have available for the Fall or Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% 100 %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: What 300 -level courses are available in Fall or Winter terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% 300 %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which 300 -level classes are being taught in Fall and Winter term ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Which 300 -level classes are there for Fall or Winter terms ?
Gold: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER FROM COURSE AS COURSE alias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERING alias0 ON COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID INNER JOIN SEMESTER AS SEMESTER alias0 ON SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSE alias0 ON PROGRAM_COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID WHERE PROGRAM_COURSE alias0 . CATEGORY LIKE "% 300 %" AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . YEAR = 2016 ;

Q: What classes this semester are a prerequisite to most other classes ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which class is a prereq for lots of other classes and offered this semester ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which class this semester is a prerequisite for the majority of classes I could take later ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which course this semester meets the prerequisites for most other courses ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which prerequisite for most classes is offered this semester ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What class is a prerequisite to most other classes , and available this semester ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: This semester , which classes are prerequisites to most other ones ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which courses offered this semester unlock most other classes ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which classes are prerequisites for most other classes and available this semester ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which classes offered this term will be a prerequisite for most other classes ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: Which classes are prerequisites for most of the other classes and available this semester ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: What is the most common prerequisite this semester ?
Gold: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . PRE_COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;
System: SELECT COUNT ( DISTINCT COURSE_PREREQUISITE alias0 . COURSE_ID ) , COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER FROM ( SELECT STUDENT_RECORD alias0 . COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORD alias0 WHERE STUDENT_RECORD alias0 . EARN_CREDIT = " Y " AND STUDENT_RECORD alias0 . STUDENT_ID = 1 ) AS DERIVED_TABLE alias0 , COURSE AS COURSE alias0 , COURSE AS COURSE alias1 , COURSE_OFFERING AS COURSE_OFFERING alias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . COURSE_ID = COURSE_PREREQUISITE alias0 . PRE_COURSE_ID AND COURSE alias0 . COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) AND COURSE alias0 . COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITE alias1 . COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITE alias1 WHERE COURSE_PREREQUISITE alias1 . PRE_COURSE_ID NOT IN ( DERIVED_TABLE alias0 . COURSE_ID ) ) AND COURSE alias1 . COURSE_ID = COURSE_PREREQUISITE alias0 . COURSE_ID AND COURSE alias1 . DEPARTMENT = " EECS " AND SEMESTER alias0 . SEMESTER = " WN " AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 GROUP BY COURSE_PREREQUISITE alias0 . COURSE_ID ORDER BY COUNT ( COURSE_PREREQUISITE alias0 . COURSE_ID ) DESC ;

Q: How many 300 -level classes are being offered in Fall and Winter term ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many 300 -level classes are in the Fall or Winter term ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter term , how many 500 level classes are offered ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For Fall and the Winter terms , what number of 200 -level courses are available ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: During the Fall and Winter terms , how many 500 -level classes are expected to be offered ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 500 AND 500 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall and Winter term how many classes offered are 100 -level classes ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: In the Fall and Winter term , how many 300 -level classes are being offered ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What amount of 100 -level courses are going to be open this Fall and Winter semester ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many classes offered in the Fall Winter term are 300 -level classes ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: How many different classes at level 300 are there to take for the Fall and Winter ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 300 AND 300 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What amount of 200 -level classes are available for Fall and Winter ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: What number of 100 -level courses are offered in Fall and Winter term ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 100 AND 100 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Of the classes being offered in Fall and Winter term , how many are 200 -level ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: Fall and Winter terms offer how many 200 -level classes ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 200 AND 200 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;

Q: For the Winter and Fall terms , how many 400 -level classes are being offered ?
Gold: SELECT COUNT ( DISTINCT COURSE alias0 . DEPARTMENT , COURSE alias0 . NAME , COURSE alias0 . NUMBER , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;
System: SELECT COUNT ( DISTINCT COURSE alias0 . COURSE_ID , SEMESTER alias0 . SEMESTER ) FROM COURSE AS COURSE alias0 , COURSE_OFFERING AS COURSE_OFFERING alias0 , SEMESTER AS SEMESTER alias0 WHERE COURSE alias0 . COURSE_ID = COURSE_OFFERING alias0 . COURSE_ID AND COURSE alias0 . DEPARTMENT = " EECS " AND COURSE alias0 . NUMBER BETWEEN 400 AND 400 + 100 AND SEMESTER alias0 . SEMESTER IN ( " FA " , " WN " ) AND SEMESTER alias0 . SEMESTER_ID = COURSE_OFFERING alias0 . SEMESTER AND SEMESTER alias0 . YEAR = 2016 ;


==========RIGHT==========

